[{"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/index.js":"1","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/App.js":"2","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js":"3","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.state.js":"4","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/ResetPassword.jsx":"5","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/CreatePost.jsx":"6","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/NewPassword.jsx":"7","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/ProtectedRoute.js":"8","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.context.js":"9","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.reducer.js":"10","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Home.jsx":"11","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Login.jsx":"12","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Signup.jsx":"13","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/UserProfile.jsx":"14","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Profile.jsx":"15","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/SubscribePosts.jsx":"16","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/config/constants.js":"17","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/utils/regex.js":"18","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/types.jsx":"19","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Copyright.jsx":"20","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Navbar.jsx":"21","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/VerticalTabs.jsx":"22","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/theme/index.jsx":"23","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/service/apiCalls.js":"24","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/service/request.js":"25","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/utils/fetchCookies.js":"26","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/redux/store.js":"27","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/lib/actionReducerSlice/fetchMyPostsSlice.js":"28"},{"size":760,"mtime":1683632239432,"results":"29","hashOfConfig":"30"},{"size":278,"mtime":1682445872963,"results":"31","hashOfConfig":"30"},{"size":2783,"mtime":1683808762607,"results":"32","hashOfConfig":"30"},{"size":381,"mtime":1677315730382,"results":"33","hashOfConfig":"30"},{"size":4434,"mtime":1682931551816,"results":"34","hashOfConfig":"30"},{"size":6206,"mtime":1683874774123,"results":"35","hashOfConfig":"30"},{"size":4665,"mtime":1682589408581,"results":"36","hashOfConfig":"30"},{"size":479,"mtime":1682253607801,"results":"37","hashOfConfig":"30"},{"size":133,"mtime":1677315730382,"results":"38","hashOfConfig":"30"},{"size":636,"mtime":1677315730382,"results":"39","hashOfConfig":"30"},{"size":16216,"mtime":1682934020446,"results":"40","hashOfConfig":"30"},{"size":5199,"mtime":1683534483101,"results":"41","hashOfConfig":"30"},{"size":5500,"mtime":1682932484871,"results":"42","hashOfConfig":"30"},{"size":8455,"mtime":1682934536572,"results":"43","hashOfConfig":"30"},{"size":10790,"mtime":1683881084268,"results":"44","hashOfConfig":"30"},{"size":13691,"mtime":1682934618462,"results":"45","hashOfConfig":"30"},{"size":1226,"mtime":1682956449046,"results":"46","hashOfConfig":"30"},{"size":266,"mtime":1682589233920,"results":"47","hashOfConfig":"30"},{"size":184,"mtime":1682253943952,"results":"48","hashOfConfig":"30"},{"size":502,"mtime":1682270898087,"results":"49","hashOfConfig":"30"},{"size":14098,"mtime":1683621562964,"results":"50","hashOfConfig":"30"},{"size":5927,"mtime":1682253346819,"results":"51","hashOfConfig":"30"},{"size":3001,"mtime":1683875218774,"results":"52","hashOfConfig":"30"},{"size":3647,"mtime":1683808742782,"results":"53","hashOfConfig":"30"},{"size":3868,"mtime":1683808746769,"results":"54","hashOfConfig":"30"},{"size":343,"mtime":1683533386255,"results":"55","hashOfConfig":"30"},{"size":346,"mtime":1683743704044,"results":"56","hashOfConfig":"30"},{"size":952,"mtime":1683822966844,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1mblzg6",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/index.js",[],["127","128"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/App.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js",["129","130","131","132","133","134","135","136"],"import React, { useEffect, useContext } from \"react\";\nimport { Routes, Route, useRoutes, useLocation, useNavigate } from 'react-router-dom';\n\nimport AuthContext from \"../contexts/auth/Auth.context\";\n// import ProtectedRoute from \"./ProtectedRoute\";\n\n// different routes\nimport Home from \"../screens/Home\";\nimport Login from \"../screens/Login\";\nimport Signup from \"../screens/Signup\";\nimport CreatePost from \"../screens/CreatePost.jsx\";\nimport Profile from \"../screens/Profile\";\nimport UserProfile from \"../screens/UserProfile\";\nimport SubscribePost from \"../screens/SubscribePosts\";\nimport Reset from \"../screens/ResetPassword.jsx\";\nimport NewPass from \"../screens/NewPassword.jsx\";\nimport {AnimatePresence, motion} from \"framer-motion/dist/framer-motion\";\n\nconst Routing = () => {\n\t// const { state } = useContext(AuthContext);\n\n\t// check if we are already authenticated\n\t// useEffect(() => {\n\t// \tstate.isAuthenticated ? <Redirect to=\"/\" /> : <Redirect to=\"/login\" />;\n\t// });\n\tconst navigate = useNavigate();\n\tconst location = useLocation();\n\tconst jwt = localStorage.getItem('jwt');\n\n\tuseEffect(() => {\n\t\tif(!Boolean(localStorage.getItem('jwt'))){\n\t\t\tnavigate('/login');\n\t\t}\n\t}, [localStorage.getItem('jwt')])\n\n\tconst element = useRoutes([\n\t\t{\n\t\t  path: \"/signup\",\n\t\t  element: <Signup />\n\t\t},\n\t\t{\n\t\t  path: \"/login\",\n\t\t  element: <Login />\n\t\t},\n\t\t{\n\t\t  path: \"/reset\",\n\t\t  element: <Reset />\n\t\t},\n\t\t{\n\t\t  path: \"/reset/:token\",\n\t\t  element: <NewPass />\n\t\t},\n\t\t{\n\t\t  path: \"/\",\n\t\t  element: <SubscribePost />\n\t\t},\n\t\t{\n\t\t  path: \"/explore\",\n\t\t  element: <Home />\n\t\t},\n\t\t{\n\t\t  path: \"/create\",\n\t\t  element: <CreatePost />\n\t\t},\n\t\t{\n\t\t  path: \"/profile\",\n\t\t  element: <Profile />\n\t\t},\n\t\t{\n\t\t  path: \"/profile/:userid\",\n\t\t  element: <UserProfile />\n\t\t}\n\t  ]);\n\n\t\tif (!element) return null;\n\n\treturn (\n\t\t\t// <Switch>\n\t\t\t// \t{/* Public routes */}\n\t\t\t// \t<Route exact path=\"/login\" component={Login} />\n\t\t\t// \t<Route exact path=\"/signup\" component={Signup} />\n\t\t\t// \t<Route exact path=\"/reset\" component={Reset} />\n\t\t\t// \t<Route exact path=\"/reset/:token\" component={NewPass} />\n\n\t\t\t// \t{/* Separate the protected routes from public ones */}\n\t\t\t// \t<ProtectedRoute exact path=\"/\" component={SubscribePost} />\n\t\t\t// \t<ProtectedRoute exact path=\"/explore\" component={Home} />\n\t\t\t// \t<ProtectedRoute exact path=\"/create\" component={CreatePost} />\n\t\t\t// \t<ProtectedRoute exact path=\"/profile\" component={Profile} />\n\t\t\t// \t<ProtectedRoute exact path=\"/profile/:userid\" component={UserProfile} />\n\n\t\t\t// \t{/* in case we want to handle the 404 page not found */}\n\t\t\t// \t{/* <Route component={NotFound} /> */}\n\t\t\t// </Switch>\n\t\t\t<>\n\t\t\t\t<AnimatePresence mode=\"wait\">\n\t\t\t    \t{React.cloneElement(element, { key: location.pathname })}\n\t\t\t\t</AnimatePresence>\n\t\t\t</>\n\t);\n};\n\nexport default Routing;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.state.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/ResetPassword.jsx",["137"],"/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { RESET_PWD_URL } from \"../service/apiCalls\";\nimport { EmailRegex } from \"../utils/regex\";\nimport Copyright from \"../components/Copyright\";\n// Material-UI Components\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Alert from '@mui/material/Alert';\nimport { useTheme } from \"@mui/material\";\n\nconst Reset = () => {\n\tconst history = useNavigate();\n\tconst theme = useTheme();\n\tconst [email, setEmail] = useState(\"\");\n\n\tconst [emailCheck, setEmailCheck] = useState(false);\n\tconst [errorMsg, setErrorMsg] = useState(false);\n\tconst [successMsg, setSuccessMsg] = useState(false);\n\n\tconst timerRef = useRef();\n\n\tuseEffect(\n\t\t() => () => {\n\t\t\tclearTimeout(timerRef.current);\n\t\t},\n\t\t[]\n\t);\n\n\tconst handleInputChanges = (e) => {\n\t\tswitch (e.target.name) {\n\t\t\tcase \"email\":\n\t\t\t\tsetEmail(e.target.value);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handlePostData = () => {\n\t\tif (EmailRegex.test(email)) {\n\t\t\t// axios.post(RESET_PWD_URL, { email })\n\t\t\t// \t.then((res) => {\n\t\t\t// \t\tconst data = res.data;\n\t\t\t// \t\tconsole.log(data);\n\t\t\t// \t\tif (data.error) {\n\t\t\t// \t\t\tsetEmailCheck(false);\n\t\t\t// \t\t\tsetErrorMsg(true);\n\t\t\t// \t\t} else {\n\t\t\t// \t\t\t// make sure to not display another Alert instead\n\t\t\t// \t\t\tsetEmailCheck(false);\n\t\t\t// \t\t\tsetErrorMsg(false);\n\t\t\t// \t\t\t// show the confirmation message\n\t\t\t// \t\t\tsetSuccessMsg(true);\n\t\t\t// \t\t\t// set a time before we redirect the user to login page\n\t\t\t// \t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t// \t\t\t\thistory(\"/login\");\n\t\t\t// \t\t\t}, 3000);\n\t\t\t// \t\t}\n\t\t\t// \t})\n\t\t\t// \t.catch((err) => {\n\t\t\t// \t\tconsole.log(err);\n\t\t\t// \t});\n\t\t\tRESET_PWD_URL({ email })\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst data = res.data;\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\tsetEmailCheck(false);\n\t\t\t\t\t\tsetErrorMsg(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// make sure to not display another Alert instead\n\t\t\t\t\t\tsetEmailCheck(false);\n\t\t\t\t\t\tsetErrorMsg(false);\n\t\t\t\t\t\t// show the confirmation message\n\t\t\t\t\t\tsetSuccessMsg(true);\n\t\t\t\t\t\t// set a time before we redirect the user to login page\n\t\t\t\t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t\t\t\t\thistory(\"/login\");\n\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetErrorMsg(false);\n\t\t\tsetEmailCheck(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid container sx={{ height: \"-webkit-fill-available\" }}>\n\t\t\t<Grid sx={theme.imageStyle} item sm={4} md={6} />\n\t\t\t<Grid item xs={12} sm={8} md={6} sx={theme.container}>\n\t\t\t\t<Container component=\"main\" maxWidth=\"xs\" style={{ paddingBottom: \"64px\" }}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<div sx={theme.paper}>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tsx={theme.Logo}\n\t\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\tstyle={{ fontFamily: \"Grand Hotel, cursive \" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTopGram\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{emailCheck ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\t\t\tInvalid Email format — check it out!\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{errorMsg ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\t\t\tNo User exists with that email — check it Again !\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{successMsg ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"success\">\n\t\t\t\t\t\t\t\tThe reset password link has been sent — check out your email inbox !\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<form sx={theme.form} noValidate>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tsx={theme.submit}\n\t\t\t\t\t\t\t\tdisabled={email !== \"\" ? false : true}\n\t\t\t\t\t\t\t\tonClick={handlePostData}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReset your Password\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Box mt={8}>\n\t\t\t\t\t\t<Copyright />\n\t\t\t\t\t</Box>\n\t\t\t\t</Container>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Reset;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/CreatePost.jsx",["138"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/NewPassword.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/ProtectedRoute.js",[],["139","140"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.context.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.reducer.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Home.jsx",["141","142"],"/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport { BOOKMARK_POST } from \"../contexts/types.jsx\";\nimport Navbar from \"../components/Navbar\";\nimport { ADD_COMMENT, ALL_POST_URL, DELETE_POSTS, LIKE_POSTS, REMOVE_BOOKMARK, UNLIKE_POSTS } from \"../service/apiCalls\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Avatar from \"@mui/material/Avatar\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n// Material-UI Icons\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\nimport BookmarkIcon from \"@mui/icons-material/Bookmark\";\nimport BookmarkBorderIcon from \"@mui/icons-material/BookmarkBorder\";\n\n// General style\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: 500,\n\t\tmargin: \"20px auto\",\n\t\t\"& .MuiTextField-root\": {\n\t\t\twidth: \"100%\",\n\t\t},\n\t\t\"& .MuiOutlinedInput-multiline\": {\n\t\t\tpaddingTop: \"8px\",\n\t\t\tpaddingBottom: \"8px\",\n\t\t\tmarginTop: \"5px\",\n\t\t\tmarginLeft: \"5px\",\n\t\t\tmarginRight: \"5px\",\n\t\t},\n\t\t\"& .MuiCardContent-root:last-child\": {\n\t\t\tpaddingBottom: \"10px\",\n\t\t},\n\t\t\"& .MuiDivider-middle\": {\n\t\t\tmarginBottom: \"4px\",\n\t\t},\n\t\t\"& .MuiListItem-root\": {\n\t\t\tpadding: \"0px 16px\",\n\t\t},\n\t\t\"& .MuiCardContent-root\": {\n\t\t\tpaddingTop: \"0px\",\n\t\t\tpaddingBottom: \"5px\",\n\t\t},\n\t\t\"& .MuiIconButton-root:focus\": {\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0)\",\n\t\t},\n\t},\n\theader: {\n\t\tpadding: \"10px\",\n\t},\n\tmedia: {\n\t\t//height: 0,\n\t\tpaddingTop: \"56.25%\", // 16:9\n\t\theight: \"max-content\",\n\t},\n\tlikeBar: {\n\t\theight: \"25px\",\n\t\tpaddingTop: \"0px\",\n\t\tmarginTop: \"8px\",\n\t\tmarginLeft: \"2px\",\n\t\tpaddingLeft: \"0px\",\n\t\tpaddingBottom: \"4px\",\n\t},\n\tcomments: {\n\t\tdisplay: \"flex\",\n\t\tpaddingTop: \"0px\",\n\t\tpaddingLeft: \"12px\",\n\t\tpaddingRight: \"0px\",\n\t},\n\tcomment_item_see_more: {\n\t\twidth: \"35%\",\n\t\tcursor: \"pointer\",\n\t},\n\tcomments_icon_see_more: {\n\t\theight: \"17px\",\n\t\twidth: \"17px\",\n\t\tpaddingTop: \"4px\",\n\t\tpaddingBottom: \"3px\",\n\t},\n\tcomments_icon: {\n\t\theight: \"30px\",\n\t\tpaddingLeft: \"0px\",\n\t\tpaddingTop: \"13px\",\n\t\tpaddingRight: \"8px\",\n\t\tpaddingBottom: \"0px\",\n\t},\n\tinline: {\n\t\tdisplay: \"inline\",\n\t\tfontWeight: \"600\",\n\t},\n\tavatar: {\n\t\theight: \"40px\",\n\t},\n\tlinks: {\n\t\ttextDecoration: \"none\",\n\t},\n}));\n\nconst Home = () => {\n\tconst classes = useStyles();\n\tconst { state, dispatch } = useContext(AuthenticationContext);\n\n\tconst [data, setData] = useState([]);\n\tconst [showSend, setShowSend] = useState(false);\n\tconst [comment, setComment] = useState(\"\");\n\n\t// const config = axiosConfig(localStorage.getItem(\"jwt\"));\n\n\tuseEffect(() => {\n\t\t// axios.get(ALL_POST_URL, config).then((res) => {\n\t\t// \tsetData(res.data.posts);\n\t\t// });\n        ALL_POST_URL().then((res) => {\n\t\t\tsetData(res.data.posts);\n\t\t});\n\t}, []);\n\n\tconst likePost = (id) => {\n\t\t// axios.put(`http://localhost:5000/like`, { postId: id }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (result.data._id === item._id) return result.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        LIKE_POSTS({ postId: id })\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result.data._id === item._id) return result.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst unlikePost = (id) => {\n\t\t// axios.put(`http://localhost:5000/Unlike`, { postId: id }, config)\n\t\t// \t.then((res) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (res.data._id === item._id) return res.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        UNLIKE_POSTS({ postId: id })\n\t\t\t.then((res) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (res.data._id === item._id) return res.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst bookmark = (id) => {\n\t\t// axios.put(`http://localhost:5000/bookmark-post`, { postId: id }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tdispatch({\n\t\t// \t\t\ttype: BOOKMARK_POST,\n\t\t// \t\t\tpayload: { Bookmarks: result.data.Bookmarks },\n\t\t// \t\t});\n\t\t// \t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        BOOKMARK_POST({ postId: id })\n\t\t\t.then((result) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: BOOKMARK_POST,\n\t\t\t\t\tpayload: { Bookmarks: result.data.Bookmarks },\n\t\t\t\t});\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst removeBookmark = (id) => {\n\t\t// axios.put(`http://localhost:5000/remove-bookmark`, { postId: id }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tdispatch({\n\t\t// \t\t\ttype: BOOKMARK_POST,\n\t\t// \t\t\tpayload: { Bookmarks: result.data.Bookmarks },\n\t\t// \t\t});\n\t\t// \t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        REMOVE_BOOKMARK({ postId: id })\n\t\t\t.then((result) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: BOOKMARK_POST,\n\t\t\t\t\tpayload: { Bookmarks: result.data.Bookmarks },\n\t\t\t\t});\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst makeComment = (text, postId) => {\n\t\tsetComment(\"\");\n\t\t// axios.put(`http://localhost:5000/comment`, { text, postId }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (result.data._id === item._id) return result.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        ADD_COMMENT({ text, postId })\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result.data._id === item._id) return result.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t\tsetComment(\"\");\n\t};\n\n\tconst deletePost = (postId) => {\n\t\t// axios.delete(`http://localhost:5000/deletepost/${postId}`, config).then((res) => {\n\t\t// \tconst newData = data.filter((item) => {\n\t\t// \t\treturn item._id !== res.data;\n\t\t// \t});\n\t\t// \tsetData(newData);\n\t\t// });\n        DELETE_POSTS({postId}).then((res) => {\n\t\t\tconst newData = data.filter((item) => {\n\t\t\t\treturn item._id !== res.data;\n\t\t\t});\n\t\t\tsetData(newData);\n\t\t});\n\t};\n\n\treturn <>\n        <Navbar />\n        {data.map((item) => (\n            <div className=\"home\" key={item._id}>\n                <Card className={classes.root}>\n                    <CardHeader\n                        className={classes.header}\n                        avatar={\n                            <Avatar>\n                                <img\n                                    className={classes.avatar}\n                                    alt=\"\"\n                                    src={`data:${item.PhotoType};base64,${item.Photo}`}\n                                />\n                            </Avatar>\n                        }\n                        title={\n                            <Link\n                                className={classes.links}\n                                to={\n                                    item.PostedBy._id !== state._id\n                                        ? `/profile/${item.PostedBy._id}`\n                                        : \"/profile\"\n                                }\n                            >\n                                {item.PostedBy.Name}\n                            </Link>\n                        }\n                        subheader=\"September 14, 2016\"\n                    />\n\n                    <CardMedia\n                        className={classes.media}\n                        image={`data:${item.PhotoType};base64,${item.Photo}`}\n                        title=\"Paella dish\"\n                    />\n\n                    <CardActions className={classes.likeBar} disableSpacing>\n                        {item.Likes.includes(state._id) ? (\n                            <IconButton\n                                aria-label=\"Like\"\n                                color=\"secondary\"\n                                onClick={() => {\n                                    unlikePost(item._id);\n                                }}\n                                size=\"large\">\n                                <FavoriteIcon />\n                            </IconButton>\n                        ) : (\n                            <IconButton\n                                aria-label=\"Like\"\n                                onClick={() => {\n                                    likePost(item._id);\n                                }}\n                                size=\"large\">\n                                <FavoriteBorderIcon />\n                            </IconButton>\n                        )}\n                        <IconButton aria-label=\"comments\" size=\"large\">\n                            <ChatBubbleOutlineIcon />\n                        </IconButton>\n                        {state.Bookmarks.includes(item._id) ? (\n                            <IconButton\n                                aria-label=\"Remove Bookmark\"\n                                style={{ marginLeft: \"auto\", color: \"#e0d011\" }}\n                                onClick={() => {\n                                    removeBookmark(item._id);\n                                }}\n                                size=\"large\">\n                                <BookmarkIcon />\n                            </IconButton>\n                        ) : (\n                            <IconButton\n                                aria-label=\"Bookmark\"\n                                style={{ marginLeft: \"auto\" }}\n                                onClick={() => {\n                                    bookmark(item._id);\n                                }}\n                                size=\"large\">\n                                <BookmarkBorderIcon />\n                            </IconButton>\n                        )}\n                    </CardActions>\n\n                    <CardContent>\n                        <Typography variant=\"subtitle2\" display=\"block\" gutterBottom>\n                            {item.Likes.length} Likes\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {item.Body}\n                        </Typography>\n                    </CardContent>\n\n                    <Divider variant=\"middle\" />\n\n                    <List>\n                        {item.Comments.map((cmt) => {\n                            return (\n                                <ListItem\n                                    className={classes.comment_item}\n                                    alignItems=\"flex-start\"\n                                    key={cmt._id}\n                                >\n                                    <ListItemText\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    className={classes.inline}\n                                                    color=\"textPrimary\"\n                                                >\n                                                    <Link\n                                                        className={classes.links}\n                                                        to={\n                                                            cmt.PostedBy._id !== state._id\n                                                                ? `/profile/${cmt.PostedBy._id}`\n                                                                : \"/profile\"\n                                                        }\n                                                    >\n                                                        {cmt.PostedBy.Name}\n                                                    </Link>\n                                                </Typography>\n                                                {\" — \"}\n                                                {cmt.Text}\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                            );\n                        })}\n                        {item.Comments.length === 0 ? (\n                            <ListItem alignItems=\"flex-start\" style={{ left: \"38%\" }}>\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                                    No Comments yet\n                                </Typography>\n                            </ListItem>\n                        ) : null}\n                        {item.Comments.length > 3 && item.Comments.length !== 0 ? (\n                            <ListItem\n                                alignItems=\"flex-start\"\n                                className={classes.comment_item_see_more}\n                            >\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                                    See all {item.Comments.length} comments\n                                </Typography>\n                                <DoubleArrowIcon className={classes.comments_icon_see_more} />\n                            </ListItem>\n                        ) : null}\n                    </List>\n\n                    <Divider variant=\"middle\" />\n\n                    <CardContent className={classes.comments}>\n                        <Avatar>\n                            <img\n                                className={classes.avatar}\n                                alt=\"\"\n                                src=\"https://images.unsplash.com/photo-1537815749002-de6a533c64db?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                            />\n                        </Avatar>\n                        <TextField\n                            multiline\n                            rows={1}\n                            placeholder=\"Add your comment...\"\n                            variant=\"outlined\"\n                            value={comment}\n                            onChange={(event) => {\n                                event.preventDefault();\n                                setComment(event.target.value);\n                                setShowSend(true);\n                                if (event.target.value === \"\") setShowSend(false);\n                            }}\n                        />\n                        <IconButton\n                            aria-label=\"add to favorites\"\n                            className={classes.comments_icon}\n                            disabled={!showSend}\n                            onClick={() => makeComment(comment, item._id)}\n                            size=\"large\">\n                            <SendIcon />\n                        </IconButton>\n                    </CardContent>\n                </Card>\n            </div>\n        ))}\n    </>;\n};\n\nexport default Home;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Login.jsx",["143"],"import React, { useState, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport { FETCH_USER_DATA } from \"../contexts/types.jsx\";\nimport { LOGIN_URL } from \"../service/apiCalls\";\nimport Copyright from \"../components/Copyright\";\nimport { EmailRegex } from \"../utils/regex\";\nimport axios from \"axios\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Alert from '@mui/material/Alert';\nimport { motion } from 'framer-motion/dist/framer-motion';\nimport { useTheme } from \"@mui/material\";\nimport { fetchCookies } from \"../utils/fetchCookies\";\n\nconst Login = () => {\n\tconst { dispatch } = useContext(AuthenticationContext);\n\tconst theme = useTheme();\n\tconst history = useNavigate();\n\tconst [email, setEmail] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [formatValidation, setFormatValidation] = useState(false);\n\tconst [authValidation, setAuthValidation] = useState(false);\n\n\tconst handleInputChanges = (e) => {\n\t\tswitch (e.target.name) {\n\t\t\tcase \"email\":\n\t\t\t\tsetEmail(e.target.value);\n\t\t\t\tbreak;\n\t\t\tcase \"password\":\n\t\t\t\tsetPassword(e.target.value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handlePostData = () => {\n\t\tif (EmailRegex.test(email)) {\n\t\t\t// axios.post(LOGIN_URL, { password, email })\n\t\t\t// \t.then((res) => {\n\t\t\t// \t\tconst data = res.data;\n\t\t\t// \t\tif (data.error) {\n\t\t\t// \t\t\tsetFormatValidation(false);\n\t\t\t// \t\t\tsetAuthValidation(true);\n\t\t\t// \t\t} else {\n\t\t\t// \t\t\t// we store our generated token in order to use it to access protected endpoints\n\t\t\t// \t\t\tlocalStorage.setItem(\"jwt\", data.token);\n\t\t\t// \t\t\t// we also store the user details\n\t\t\t// \t\t\tlocalStorage.setItem(\"user\", JSON.stringify(data.user));\n\t\t\t// \t\t\tdispatch({ type: FETCH_USER_DATA, payload: data.user });\n\t\t\t// \t\t\t// we redirect the user to home page\n\t\t\t// \t\t\thistory(\"/\");\n\t\t\t// \t\t}\n\t\t\t// \t})\n\t\t\t// \t.catch((err) => {\n\t\t\t// \t\t// that should be changed in Production\n\t\t\t// \t\t// TODO : Make an error handler\n\t\t\t// \t\tconsole.log(err);\n\t\t\t// \t});\n\t\t\tLOGIN_URL({ password, email })\n\t\t\t\t.then((res) => {\n\t\t\t\t\t// we also store the user details\n\t\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(res.user));\n\t\t\t\t\tdispatch({ type: FETCH_USER_DATA, payload: res.user });\t\n\t\t\t\t\t// we store our generated token in order to use it to access protected endpoints\n\t\t\t\t\tlocalStorage.setItem(\"jwt\", fetchCookies(\"token\"));\n\t\t\t\t\t// we redirect the user to home page\n\t\t\t\t\thistory(\"/\");\t\t\n\t\t\t\t\t// }\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\t// that should be changed in Production\n\t\t\t\t\t// TODO : Make an error handler\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t\t\n\t\t} else {\n\t\t\tsetAuthValidation(false);\n\t\t\tsetFormatValidation(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid \n\t\t\tcontainer \n\t\t\tcomponent={motion.div}\n\t\t\tinitial=\"hidden\"\n\t\t\tanimate=\"visible\"\n\t\t\texit={{ opacity: 0, transition: { duration: 0.5 } }}\n\t\t>\n\t\t\t<Grid sx={theme.imageStyle} item sm={4} md={6} />\n\t\t\t<Grid item xs={12} sm={8} md={6}>\n\t\t\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<Grid sx={theme.paper}>\n\t\t\t\t\t\t<Typography variant=\"h2\" gutterBottom /*sx={{ fontFamily: \"Grand Hotel, cursive\"}}*/>\n\t\t\t\t\t\t\tTopGram\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{formatValidation ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\t\t\tInvalid Email format — check it out!\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{authValidation ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\t\t\tInvalid given Email/Password — check it out!\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<form sx={theme.form} noValidate>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t// autoComplete=\"email\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant={email !== \"\" && password !== \"\" ? \"contained\": \"outlined\"}\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tsx={theme.submit}\n\t\t\t\t\t\t\t\tdisabled={email !== \"\" && password !== \"\" ? false : true}\n\t\t\t\t\t\t\t\tonClick={handlePostData}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t\t<Grid item xs>\n\t\t\t\t\t\t\t\t\t<Link to=\"/reset\" style={{ textDecoration: \"none\" }}>\n\t\t\t\t\t\t\t\t\t\tForgot password?\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t<Link to=\"/signup\" style={{ textDecoration: \"none\" }}>\n\t\t\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Box mt={8}>\n\t\t\t\t\t\t<Copyright />\n\t\t\t\t\t</Box>\n\t\t\t\t</Container>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Login;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Signup.jsx",["144"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SIGNUP_URL } from \"../service/apiCalls\";\nimport Copyright from \"../components/Copyright\";\nimport { EmailRegex } from \"../utils/regex\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Alert from '@mui/material/Alert';\nimport { motion } from 'framer-motion/dist/framer-motion';\nimport { useTheme } from \"@mui/system\";\n\nconst Signup = () => {\n\tconst history = useNavigate();\n\tconst theme = useTheme();\n\tconst [name, setName] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [formatValidation, setFormatValidation] = useState(false);\n\tconst [authValidation, setAuthValidation] = useState(false);\n\tconst [confirmValidation, setConfirmValidation] = useState(false);\n\n\tconst timerRef = useRef();\n\n\tuseEffect(\n\t\t() => () => {\n\t\t\tclearTimeout(timerRef.current);\n\t\t},\n\t\t[]\n\t);\n\n\tconst handleInputChanges = (e) => {\n\t\tswitch (e.target.name) {\n\t\t\tcase \"username\":\n\t\t\t\tsetName(e.target.value);\n\t\t\t\tbreak;\n\t\t\tcase \"email\":\n\t\t\t\tsetEmail(e.target.value);\n\t\t\t\tbreak;\n\t\t\tcase \"password\":\n\t\t\t\tsetPassword(e.target.value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handlePostData = () => {\n\t\t// Here we check just if the given email has a correct format\n\t\tif (EmailRegex.test(email)) {\n\t\t\t// axios.post(SIGNUP_URL, {\n\t\t\t// \tname,\n\t\t\t// \tpassword,\n\t\t\t// \temail,\n\t\t\t// })\n\t\t\t// \t.then((res) => {\n\t\t\t// \t\tconst data = res.data;\n\t\t\t// \t\tif (data.error) {\n\t\t\t// \t\t\tsetFormatValidation(false);\n\t\t\t// \t\t\tsetAuthValidation(true);\n\t\t\t// \t\t} else {\n\t\t\t// \t\t\t// show the confirmation message\n\t\t\t// \t\t\tsetConfirmValidation(true);\n\t\t\t// \t\t\t// set a timeOut before redirecting the user to login page\n\t\t\t// \t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t// \t\t\t\thistory(\"/login\");\n\t\t\t// \t\t\t}, 2800);\n\t\t\t// \t\t}\n\t\t\t// \t})\n\t\t\t// \t.catch((err) => {\n\t\t\t// \t\tconsole.log(err);\n\t\t\t// \t});\n\t\t\tSIGNUP_URL({\n\t\t\t\tname,\n\t\t\t\tpassword,\n\t\t\t\temail,\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst data = res.data;\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\tsetFormatValidation(false);\n\t\t\t\t\t\tsetAuthValidation(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// show the confirmation message\n\t\t\t\t\t\tsetConfirmValidation(true);\n\t\t\t\t\t\t// set a timeOut before redirecting the user to login page\n\t\t\t\t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t\t\t\t\thistory(\"/login\");\n\t\t\t\t\t\t}, 2800);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetAuthValidation(false);\n\t\t\tsetFormatValidation(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Container  maxWidth=\"xs\" component={motion.div}\n\t\tinitial=\"hidden\"\n\t\tanimate=\"visible\"\n\t\texit={{ opacity: 0, transition: { duration: 0.5 } }}>\n\t\t\t<Grid sx={theme.paper}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Typography sx={theme.Logo} variant=\"h2\">\n\t\t\t\t\tTopGram\n\t\t\t\t</Typography>\n\t\t\t\t{/*  Check the format of the Email */}\n\t\t\t\t{formatValidation ? (\n\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\tInvalid Email format — check it out!\n\t\t\t\t\t</Alert>\n\t\t\t\t) : null}\n\t\t\t\t{/*  Check the if the Email already Exist */}\n\t\t\t\t{authValidation ? (\n\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\tThis Email is already token — check it out!\n\t\t\t\t\t</Alert>\n\t\t\t\t) : null}\n\t\t\t\t{/* Success notification */}\n\t\t\t\t{confirmValidation ? (\n\t\t\t\t\t<Alert variant=\"outlined\" severity=\"success\">\n\t\t\t\t\t\tYour account has been created successfully — check it out!\n\t\t\t\t\t</Alert>\n\t\t\t\t) : null}\n\t\t\t\t<form sx={theme.form} noValidate>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tautoComplete=\"UserName\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{/* <Grid item xs={12}>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tcontrol={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n\t\t\t\t\t\t\t\tlabel=\"I want to receive inspiration, marketing promotions and updates via email.\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid> */}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tsx={theme.submit}\n\t\t\t\t\t\tvariant={email !== \"\" && password !== \"\" ? \"contained\": \"outlined\"}\n\t\t\t\t\t\tdisabled={email !== \"\" && password !== \"\" ? false : true}\n\t\t\t\t\t\tonClick={handlePostData}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Grid container justifyContent=\"flex-end\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n\t\t\t\t\t\t\t\tAlready have an account? Sign in\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t</Grid>\n\t\t\t<Box mt={5}>\n\t\t\t\t<Copyright />\n\t\t\t</Box>\n\t\t</Container>\n\t);\n};\n\nexport default Signup;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/UserProfile.jsx",["145","146"],"/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport { UPDATE_FOLLOW_DATA } from \"../contexts/types\";\nimport { FOLLOW_USER } from \"../service/apiCalls\";\n\n// Material-UI Components\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Icon from \"@mui/material/Icon\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport { GET_USER_DATA, UNFOLLOW_USER } from \"../service/apiCalls\";\n\n// General Styles\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: 935,\n\t\tmargin: \"auto\",\n\t\tpadding: \"60px 20px 0\",\n\t},\n\tavatar_container: { margin: \"auto\" },\n\tavatar: { width: 152, height: 152 },\n\teditButton: {\n\t\tmarginLeft: 20,\n\t\tbackgroundColor: \"paleturquoise\",\n\t},\n\tsettings: {},\n}));\n\nfunction TabPanel(props) {\n\tconst { children, value, index, ...other } = props;\n\treturn (\n\t\t<div role=\"tabpanel\" hidden={value !== index} {...other}>\n\t\t\t{value === index && <Box p={3}>{children}</Box>}\n\t\t</div>\n\t);\n}\n\nconst UserProfilePage = () => {\n\tconst classes = useStyles();\n\tconst [value, setValue] = useState(\"Posts\"); // to switch between different tabs\n\tconst { state, dispatch } = useContext(AuthenticationContext);\n\tconst { userid } = useParams();\n\tconst [data, setData] = useState(null);\n\tconst [showFollow, setShowFollow] = useState(state ? !state.Following.includes(userid) : null);\n\n\t// const config = axiosConfig(localStorage.getItem(\"jwt\"));\n\n\tuseEffect(() => {\n\t\t// axios.get(`http://localhost:5000/user/${userid}`, config).then((res) => {\n\t\t// \tsetData(res.data);\n\t\t// });\n\t\tGET_USER_DATA({userid}).then((res) => {\n\t\t\tsetData(res.data);\n\t\t});\n\t}, []);\n\n\tconst followUser = () => {\n\t\t// axios.put(`http://localhost:5000/follow`, { followId: userid }, config).then((result) => {\n\t\t// \tdispatch({\n\t\t// \t\ttype: UPDATE_FOLLOW_DATA,\n\t\t// \t\tpayload: { Followers: result.data.Followers, Following: result.data.Following },\n\t\t// \t});\n\t\t// \tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t// \tsetData((prevState) => {\n\t\t// \t\treturn {\n\t\t// \t\t\t...prevState,\n\t\t// \t\t\tuser: {\n\t\t// \t\t\t\t...prevState.user,\n\t\t// \t\t\t\tFollowers: [...prevState.user.Followers, result.data._id],\n\t\t// \t\t\t},\n\t\t// \t\t};\n\t\t// \t});\n\t\t// \tsetShowFollow(false);\n\t\t// });\n\t\tFOLLOW_USER({ followId: userid }).then((result) => {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_FOLLOW_DATA,\n\t\t\t\tpayload: { Followers: result.data.Followers, Following: result.data.Following },\n\t\t\t});\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t\tsetData((prevState) => {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t...prevState.user,\n\t\t\t\t\t\tFollowers: [...prevState.user.Followers, result.data._id],\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetShowFollow(false);\n\t\t});\n\t};\n\n\tconst unfollowUser = () => {\n\t\t// axios.put(`http://localhost:5000/unfollow`, { unfollowId: userid }, config).then((result) => {\n\t\t// \tdispatch({\n\t\t// \t\ttype: UPDATE_FOLLOW_DATA,\n\t\t// \t\tpayload: { Followers: result.data.Followers, Following: result.data.Following },\n\t\t// \t});\n\t\t// \tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t// \tsetData((prevState) => {\n\t\t// \t\tconst newFollower = prevState.user.Followers.filter((item) => item !== result.data._id);\n\t\t// \t\treturn {\n\t\t// \t\t\t...prevState,\n\t\t// \t\t\tuser: {\n\t\t// \t\t\t\t...prevState.user,\n\t\t// \t\t\t\tFollowers: newFollower,\n\t\t// \t\t\t},\n\t\t// \t\t};\n\t\t// \t});\n\t\t// \tsetShowFollow(true);\n\t\t// });\n\t\tUNFOLLOW_USER({ unfollowId: userid }).then((result) => {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_FOLLOW_DATA,\n\t\t\t\tpayload: { Followers: result.data.Followers, Following: result.data.Following },\n\t\t\t});\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t\tsetData((prevState) => {\n\t\t\t\tconst newFollower = prevState.user.Followers.filter((item) => item !== result.data._id);\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t...prevState.user,\n\t\t\t\t\t\tFollowers: newFollower,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetShowFollow(true);\n\t\t});\n\t};\n\n\treturn (\n        <React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t{data ? (\n\t\t\t\t<Box component=\"main\" className={classes.root}>\n\t\t\t\t\t<Box mb=\"44px\">\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.avatar_container}>\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\tclassName={classes.avatar}\n\t\t\t\t\t\t\t\t\tstyle={{ margin: \"auto\" }}\n\t\t\t\t\t\t\t\t\tsrc=\"https://cc-media-foxit.fichub.com/image/fox-it-mondofox/e8c0f288-781d-4d0b-98ad-fd169782b53b/scene-sottacqua-per-i-sequel-di-avatar-maxw-654.jpg\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t\t\t\t<Box clone mb=\"20px\">\n\t\t\t\t\t\t\t\t\t<Grid container alignItems=\"center\">\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\t\t\t\t{data.user ? data.user.Name : \"Is Loading ...\"}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t{showFollow ? (\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.editButton}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => followUser()}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tFollow\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.editButton}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => unfollowUser()}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tUnFollow\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t<div className={classes.settings}>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton component={Link} to=\"#\" size=\"large\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon>settings</Icon>\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Box mb=\"20px\">\n\t\t\t\t\t\t\t\t\t<Grid container spacing={4}>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{data.posts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? data.posts.length\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"IsLoading...\"}\n\t\t\t\t\t\t\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\tposts\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{data.user\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? data.user.Followers.length\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"IsLoading...\"}\n\t\t\t\t\t\t\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\tfollowers\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{data.user\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? data.user.Following.length\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"IsLoading...\"}\n\t\t\t\t\t\t\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\tfollowing\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Siriwat Kunaporn</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Bangkok Christian College</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">CU intania 96.</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Tabs\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tcentered\n\t\t\t\t\t\tonChange={(event, value) => {\n\t\t\t\t\t\t\tsetValue(value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tTabIndicatorProps={{\n\t\t\t\t\t\t\tstyle: { transform: \"translateY(-70px)\", backgroundColor: \"#262626\" },\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Tab label=\"Posts\" value=\"Posts\" icon={<Icon>grid_on_outlined</Icon>} />\n\t\t\t\t\t\t<Tab label=\"IGTV\" value=\"IGTV\" icon={<Icon>live_tv</Icon>} disabled />\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tlabel=\"Tagged\"\n\t\t\t\t\t\t\tvalue=\"Tagged\"\n\t\t\t\t\t\t\ticon={<Icon>local_offer_outlined</Icon>}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Tabs>\n\t\t\t\t\t<TabPanel value={value} index=\"Posts\">\n\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t{data.posts\n\t\t\t\t\t\t\t\t? data.posts.map((item) => (\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4} key={item.id}>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"post\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\", height: \"100%\" }}\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`data:${item.PhotoType};base64,${item.Photo}`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t: \"Is Loading ...\"}\n\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.post_box}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\talt=\"post\"\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\tsrc=\"https://via.placeholder.com/500/f5f5f5\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.post_box}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\talt=\"post\"\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\tsrc=\"https://via.placeholder.com/500/f5f5f5\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t</Box>\n\t\t\t) : (\n\t\t\t\t\"Is Loading ...\"\n\t\t\t)}\n\t\t</React.Fragment>\n    );\n};\n\nexport default UserProfilePage;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Profile.jsx",["147","148","149","150","151","152","153"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/SubscribePosts.jsx",["154","155","156"],"/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport { SUB_POST_URL, LIKE_POSTS, UNLIKE_POSTS, ADD_COMMENT, DELETE_POSTS } from \"../service/apiCalls\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Avatar from \"@mui/material/Avatar\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\nimport Navbar from \"../components/Navbar\";\n\n// General styles\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: 500,\n\t\tmargin: \"20px auto\",\n\t\t\"& .MuiTextField-root\": {\n\t\t\twidth: \"100%\",\n\t\t},\n\t\t\"& .MuiOutlinedInput-multiline\": {\n\t\t\tpaddingTop: \"8px\",\n\t\t\tpaddingBottom: \"8px\",\n\t\t\tmarginTop: \"5px\",\n\t\t\tmarginLeft: \"5px\",\n\t\t\tmarginRight: \"5px\",\n\t\t},\n\t\t\"& .MuiCardContent-root:last-child\": {\n\t\t\tpaddingBottom: \"10px\",\n\t\t},\n\t\t\"& .MuiDivider-middle\": {\n\t\t\tmarginBottom: \"4px\",\n\t\t},\n\t\t\"& .MuiListItem-root\": {\n\t\t\tpadding: \"0px 16px\",\n\t\t},\n\t\t\"& .MuiCardContent-root\": {\n\t\t\tpaddingTop: \"0px\",\n\t\t\tpaddingBottom: \"5px\",\n\t\t},\n\t\t\"& .MuiIconButton-root:focus\": {\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0)\",\n\t\t},\n\t},\n\theader: {\n\t\tpadding: \"10px\",\n\t},\n\tmedia: {\n\t\t//height: 0,\n\t\tpaddingTop: \"56.25%\", // 16:9\n\t\theight: \"max-content\",\n\t},\n\tlikeBar: {\n\t\theight: \"25px\",\n\t\tpaddingTop: \"0px\",\n\t\tmarginTop: \"8px\",\n\t\tmarginLeft: \"2px\",\n\t\tpaddingLeft: \"0px\",\n\t\tpaddingBottom: \"4px\",\n\t},\n\tcomments: {\n\t\tdisplay: \"flex\",\n\t\tpaddingTop: \"0px\",\n\t\tpaddingLeft: \"12px\",\n\t\tpaddingRight: \"0px\",\n\t},\n\tcomment_item_see_more: {\n\t\twidth: \"35%\",\n\t\tcursor: \"pointer\",\n\t},\n\tcomments_icon_see_more: {\n\t\theight: \"17px\",\n\t\twidth: \"17px\",\n\t\tpaddingTop: \"4px\",\n\t\tpaddingBottom: \"3px\",\n\t},\n\tcomments_icon: {\n\t\theight: \"30px\",\n\t\tpaddingLeft: \"0px\",\n\t\tpaddingTop: \"13px\",\n\t\tpaddingRight: \"8px\",\n\t\tpaddingBottom: \"0px\",\n\t},\n\tinline: {\n\t\tdisplay: \"inline\",\n\t\tfontWeight: \"600\",\n\t},\n\tavatar: {\n\t\theight: \"40px\",\n\t},\n\tlinks: {\n\t\ttextDecoration: \"none\",\n\t},\n}));\n\nconst SubscribePost = () => {\n\tconst classes = useStyles();\n\tconst { state } = useContext(AuthenticationContext);\n\n\tconst [data, setData] = useState([]);\n\tconst [showSend, setShowSend] = useState(false);\n\tconst [comment, setComment] = useState(\"\");\n\n\t// const config = axiosConfig(localStorage.getItem(\"jwt\"));\n\n\tuseEffect(() => {\n\t\t// axios.get(SUB_POST_URL, config).then((res) => {\n\t\t// \tsetData(res.data.posts);\n\t\t// });\n        // SUB_POST_URL().then((res) => {\n\t\t// \tsetData(res.data.posts);\n\t\t// });\n\t}, []);\n\n\tconst likePost = (id) => {\n\t\t// axios.put(`http://localhost:5000/like`, { postId: id }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (result.data._id === item._id) return result.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        LIKE_POSTS({ postId: id })\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result.data._id === item._id) return result.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst unlikePost = (id) => {\n\t\t// axios.put(`http://localhost:5000/Unlike`, { postId: id }, config)\n\t\t// \t.then((res) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (res.data._id === item._id) return res.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        UNLIKE_POSTS({ postId: id })\n\t\t\t.then((res) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (res.data._id === item._id) return res.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst makeComment = (text, postId) => {\n\t\tsetComment(\"\");\n\t\t// axios.put(`http://localhost:5000/comment`, { text, postId }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (result.data._id === item._id) return result.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        ADD_COMMENT({ text, postId })\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result.data._id === item._id) return result.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst deletePost = (postId) => {\n\t\t// axios.delete(`http://localhost:5000/deletepost/${postId}`, config).then((res) => {\n\t\t// \tconst newData = data.filter((item) => {\n\t\t// \t\treturn item._id !== res.data;\n\t\t// \t});\n\t\t// \tsetData(newData);\n\t\t// });\n        DELETE_POSTS({postId}).then((res) => {\n\t\t\tconst newData = data.filter((item) => {\n\t\t\t\treturn item._id !== res.data;\n\t\t\t});\n\t\t\tsetData(newData);\n\t\t});\n\t};\n\n\treturn <>\n        <Navbar />\n        {data.map((item) => (\n            <div className=\"home\" key={item._id}>\n                <Card className={classes.root}>\n                    <CardHeader\n                        className={classes.header}\n                        avatar={\n                            <Avatar>\n                                <img\n                                    className={classes.avatar}\n                                    alt=\"\"\n                                    src={`data:${item.PhotoType};base64,${item.Photo}`}\n                                />\n                            </Avatar>\n                        }\n                        title={\n                            <Link\n                                className={classes.links}\n                                to={\n                                    item.PostedBy._id !== state._id\n                                        ? `/profile/${item.PostedBy._id}`\n                                        : \"/profile\"\n                                }\n                            >\n                                {item.PostedBy.Name}\n                            </Link>\n                        }\n                        subheader=\"September 14, 2016\"\n                    />\n\n                    <CardMedia\n                        className={classes.media}\n                        image={`data:${item.PhotoType};base64,${item.Photo}`}\n                        title=\"Paella dish\"\n                    />\n\n                    <CardActions className={classes.likeBar} disableSpacing>\n                        {item.Likes.includes(state._id) ? (\n                            <IconButton\n                                aria-label=\"Like\"\n                                color=\"secondary\"\n                                onClick={() => {\n                                    unlikePost(item._id);\n                                }}\n                                size=\"large\">\n                                <FavoriteIcon />\n                            </IconButton>\n                        ) : (\n                            <IconButton\n                                aria-label=\"Like\"\n                                onClick={() => {\n                                    likePost(item._id);\n                                }}\n                                size=\"large\">\n                                <FavoriteBorderIcon />\n                            </IconButton>\n                        )}\n                        <IconButton aria-label=\"comments\" size=\"large\">\n                            <ChatBubbleOutlineIcon />\n                        </IconButton>\n                    </CardActions>\n\n                    <CardContent>\n                        <Typography variant=\"subtitle2\" display=\"block\" gutterBottom>\n                            {item.Likes.length} Likes\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {item.Body}\n                        </Typography>\n                    </CardContent>\n\n                    <Divider variant=\"middle\" />\n\n                    <List>\n                        {item.Comments.map((cmt) => {\n                            return (\n                                <ListItem\n                                    className={classes.comment_item}\n                                    alignItems=\"flex-start\"\n                                    key={cmt._id}\n                                >\n                                    <ListItemText\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    className={classes.inline}\n                                                    color=\"textPrimary\"\n                                                >\n                                                    <Link\n                                                        className={classes.links}\n                                                        to={\n                                                            cmt.PostedBy._id !== state._id\n                                                                ? `/profile/${cmt.PostedBy._id}`\n                                                                : \"/profile\"\n                                                        }\n                                                    >\n                                                        {cmt.PostedBy.Name}\n                                                    </Link>\n                                                </Typography>\n                                                {\" — \"}\n                                                {cmt.Text}\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                            );\n                        })}\n                        {item.Comments.length === 0 ? (\n                            <ListItem alignItems=\"flex-start\" style={{ left: \"38%\" }}>\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                                    No Comments yet\n                                </Typography>\n                            </ListItem>\n                        ) : null}\n                        {item.Comments.length > 3 && item.Comments.length !== 0 ? (\n                            <ListItem\n                                alignItems=\"flex-start\"\n                                className={classes.comment_item_see_more}\n                            >\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                                    See all {item.Comments.length} comments\n                                </Typography>\n                                <DoubleArrowIcon className={classes.comments_icon_see_more} />\n                            </ListItem>\n                        ) : null}\n                    </List>\n\n                    <Divider variant=\"middle\" />\n\n                    <CardContent className={classes.comments}>\n                        <Avatar>\n                            <img\n                                className={classes.avatar}\n                                alt=\"\"\n                                src=\"https://images.unsplash.com/photo-1537815749002-de6a533c64db?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                            />\n                        </Avatar>\n                        <TextField\n                            multiline\n                            rows={1}\n                            placeholder=\"Add your comment...\"\n                            variant=\"outlined\"\n                            value={comment}\n                            onChange={(event) => {\n                                event.preventDefault();\n                                setComment(event.target.value);\n                                setShowSend(true);\n                                if (event.target.value === \"\") setShowSend(false);\n                            }}\n                        />\n                        <IconButton\n                            aria-label=\"add to favorites\"\n                            className={classes.comments_icon}\n                            disabled={!showSend}\n                            onClick={() => makeComment(comment, item._id)}\n                            size=\"large\">\n                            <SendIcon />\n                        </IconButton>\n                    </CardContent>\n                </Card>\n            </div>\n        ))}\n    </>;\n};\n\nexport default SubscribePost;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/config/constants.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/utils/regex.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/types.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Copyright.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Navbar.jsx",["157","158","159","160","161","162"],"import React, { useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport { LOGOUT } from \"../contexts/types\";\nimport Axios from \"axios\";\n\n// Material-UI Components\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from '@mui/styles';\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport InputBase from \"@mui/material/InputBase\";\nimport Badge from \"@mui/material/Badge\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\nimport Modal from \"@mui/material/Modal\";\nimport { Grid, Box } from \"@mui/material\";\nimport { motion } from 'framer-motion/dist/framer-motion';\nimport { useTheme } from \"@mui/system\";\n\n// Material-UI Icons\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\nimport ExploreOutlinedIcon from \"@mui/icons-material/ExploreOutlined\";\nimport AddAPhotoOutlinedIcon from \"@mui/icons-material/AddAPhotoOutlined\";\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\nimport AllInboxOutlinedIcon from \"@mui/icons-material/AllInboxOutlined\";\nimport NotificationsActiveOutlinedIcon from \"@mui/icons-material/NotificationsActiveOutlined\";\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\nimport ExitToAppOutlinedIcon from \"@mui/icons-material/ExitToAppOutlined\";\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: \"100%\",\n\t},\n\tinline: {\n\t\tdisplay: \"inline\",\n\t},\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\ttitle: {\n\t\tdisplay: \"none\",\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tdisplay: \"block\",\n\t\t},\n\t\tfontFamily: \"Grand Hotel, cursive\",\n\t\tcolor: \"rgba(0, 0, 0, 0.54)\",\n\t},\n\tsearch: {\n\t\tposition: \"relative\",\n\t\tborderRadius: theme.shape.borderRadius,\n\t\tbackgroundColor: \"rgba(0, 0, 0, 0.075)\",\n\t\t\"&:hover\": {\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0.03)\",\n\t\t},\n\t\tmarginRight: theme.spacing(2),\n\t\tmarginLeft: 0,\n\t\twidth: \"100%\",\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\tmarginLeft: theme.spacing(3),\n\t\t\twidth: \"auto\",\n\t\t},\n\t\tmargin: \"0px auto\",\n\t},\n\tsearchIcon: {\n\t\tpadding: theme.spacing(0, 2),\n\t\theight: \"100%\",\n\t\tposition: \"absolute\",\n\t\tpointerEvents: \"none\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tcolor: \"rgba(0, 0, 0, 0.54)\",\n\t},\n\tinputRoot: {\n\t\tcolor: \"inherit\",\n\t},\n\tinputInput: {\n\t\tpadding: theme.spacing(1, 1, 1, 0),\n\t\t// vertical padding + font size from searchIcon\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)})`,\n\t\ttransition: theme.transitions.create(\"width\"),\n\t\twidth: \"100%\",\n\t\t[theme.breakpoints.up(\"sm\")]: {\n\t\t\twidth: \"30ch\",\n\t\t},\n\t\tcolor: \"#000000\",\n\t},\n\tsectionDesktop: {\n\t\tdisplay: \"none\",\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"flex\",\n\t\t},\n\t},\n\tsectionMobile: {\n\t\tdisplay: \"flex\",\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t},\n\tpaper: {\n\t\tposition: \"absolute\",\n\t\twidth: 400,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tborder: \"1px solid rgba(0, 0, 0, 0.015)\",\n\t\tboxShadow: theme.shadows[4],\n\t\tpadding: theme.spacing(2, 4, 3),\n\t\tborderRadius: \"10px\",\n\t\t\"&:focus\": {\n\t\t\tborder: \"1px solid rgba(0, 0, 0, 0.015)\",\n\t\t},\n\t},\n\tlinks: {\n\t\ttextDecoration: \"none\",\n\t},\n}));\n\nconst getModalStyle = () => {\n\tconst top = 50;\n\tconst left = 50;\n\n\treturn {\n\t\ttop: `${top}%`,\n\t\tleft: `${left}%`,\n\t\ttransform: `translate(-${top}%, -${left}%)`,\n\t\tborder: \"1px solid rgba(0, 0, 0, 0.015)\",\n\t};\n};\n\nconst Navbar = () => {\n\tconst { state, dispatch } = useContext(AuthenticationContext);\n\tconst history = useNavigate();\n\tconst theme = useTheme();\n\tconst [search, setSearch] = useState([]);\n\n\t// Material-Ui\n\tconst classes = useStyles();\n\tconst [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n\tconst isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n\t// getModalStyle is not a pure function, we roll the style only on the first render\n\tconst modalStyle = () =>{\n\t\tconst top = 50;\n\t\tconst left = 50;\n\n\t\treturn {\n\t\t\ttop: `0%`,\n\t\t\tleft: `30%`,\n\t\t\t// transform: `translate(50%, 50%)`,\n\t\t\tborder: \"1px solid rgba(0, 0, 0, 0.015)\",\n\t\t\tposition: \"absolute\",\n\t\t\twidth: 400,\n\t\t\tbackgroundColor: theme.palette.background.paper,\n\t\t\tborder: \"1px solid rgba(0, 0, 0, 0.015)\",\n\t\t\tboxShadow: theme.shadows[4],\n\t\t\tpadding: theme.spacing(2, 4, 3),\n\t\t\tborderRadius: \"10px\",\n\t\t\t\"&:focus\": {\n\t\t\t\tborder: \"1px solid rgba(0, 0, 0, 0.015)\",\n\t\t\t},\n\t\t};\n\t};\n\tconst [openModal, setOpenModal] = useState(false);\n\n\tconst findUser = (pattern) => {\n\t\tif (!(pattern === \"\")) {\n\t\t\tconst URL = `http://localhost:5000/users-research`;\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\tAxios.post(URL, { pattern }, config).then((res) => {\n\t\t\t\tsetSearch(res.data);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleOpenModal = () => {\n\t\thandleMobileMenuClose();\n\t\tsetOpenModal(true);\n\t};\n\n\tconst handleCloseModal = () => {\n\t\tsetOpenModal(false);\n\t};\n\n\tconst handleMobileMenuClose = () => {\n\t\tsetMobileMoreAnchorEl(null);\n\t};\n\n\tconst handleMobileMenuOpen = (event) => {\n\t\tsetMobileMoreAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleLogOut = () => {\n\t\tlocalStorage.clear();\n\t\tdispatch({ type: LOGOUT });\n\t\thistory(\"/login\");\n\t};\n\n\tconst mobileMenuId = \"primary-search-account-menu-mobile\";\n\tconst renderMobileMenu = (\n\t\t<Menu\n\t\t\tanchorEl={mobileMoreAnchorEl}\n\t\t\tanchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n\t\t\tid={mobileMenuId}\n\t\t\tkeepMounted\n\t\t\ttransformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n\t\t\topen={isMobileMenuOpen}\n\t\t\tonClose={handleMobileMenuClose}\n\t\t>\n\t\t\t<MenuItem onClick={handleOpenModal}>\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<SearchOutlinedIcon style={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }} />\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Search</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem component={Link} to=\"/explore\">\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<ExploreOutlinedIcon\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Explore</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem component={Link} to=\"/create\">\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<AddAPhotoOutlinedIcon\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Add Post</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem component={Link} to=\"#\">\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<Badge\n\t\t\t\t\t\tbadgeContent={4}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AllInboxOutlinedIcon />\n\t\t\t\t\t</Badge>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Messages</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem component={Link} to=\"#\">\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<Badge badgeContent={6} color=\"secondary\">\n\t\t\t\t\t\t<NotificationsActiveOutlinedIcon\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Badge>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Notifications</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem component={Link} to=\"/profile\">\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<AccountCircleOutlinedIcon\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Profile</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem onClick={handleLogOut}>\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<ExitToAppOutlinedIcon\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>LogOut</p>\n\t\t\t</MenuItem>\n\t\t</Menu>\n\t);\n\tconst modalBody = (\n\t\t<Grid sx={modalStyle}>\n\t\t\t<Grid container sx={theme.search} style={{ \"margin\": \"0px auto\" }}>\n\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t<InputBase\n\t\t\t\t\t\tplaceholder=\" Search…\"\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\troot: theme.inputRoot,\n\t\t\t\t\t\t\tinput: theme.inputInput,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsx= {{ paddingTop: '4px', paddingLeft: '16px' }}\n\t\t\t\t\t\tinputProps={{ \"aria-label\": \"search\" }}\n\t\t\t\t\t\tonChange={(e) => findUser(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={2} sx={theme.searchIcon}>\n\t\t\t\t\t<SearchOutlinedIcon style={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<List sx={{ width: \"100%\" }}>\n\t\t\t\t{search.user\n\t\t\t\t\t? search.user.map((item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tsx={{ textDecoration: \"none\" }}\n\t\t\t\t\t\t\t\t\tkey={item._id}\n\t\t\t\t\t\t\t\t\tto={item._id !== state._id ? `/profile/${item._id}` : \"/profile\"}\n\t\t\t\t\t\t\t\t\tonClick={handleCloseModal}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Divider\n\t\t\t\t\t\t\t\t\t\tvariant=\"inset\"\n\t\t\t\t\t\t\t\t\t\tcomponent=\"li\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginLeft: \"0px\" }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ListItem alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Remy Sharp\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"/static/images/avatar/1.jpg\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\tprimary={item.Name}\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>{item.Email}</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t  })\n\t\t\t\t\t: null}\n\t\t\t</List>\n\t\t</Grid>\n\t);\n\n\treturn (\n\t\t<>\n        {/* <nav> */}\n\t\t\t<Grid /*sx={{ flexGrow: 1 }}*/>\n\t\t\t\t<AppBar position=\"static\" sx={{ backgroundColor: \"#ffffff\" }}>\n\t\t\t\t\t<Toolbar sx={{ justifyContent: 'space-around' }}>\n\t\t\t\t\t\t<Link to={state ? \"/\" : \"/login\"} style={{ textDecoration: 'none' }}>\n\t\t\t\t\t\t\t<Typography sx={theme.title} variant=\"h4\" noWrap>\n\t\t\t\t\t\t\t\tTopGram\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Grid sx={{ flexGrow: 1 }} />\n\t\t\t\t\t\t<Grid sx={theme.sectionDesktop}>\n\t\t\t\t\t\t\t<BottomNavigation>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Search\"\n\t\t\t\t\t\t\t\t\tvalue=\"search\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={handleOpenModal}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<SearchOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Home\"\n\t\t\t\t\t\t\t\t\tvalue=\"home\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={()=> history('/')}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<HomeOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Explore\"\n\t\t\t\t\t\t\t\t\tvalue=\"explore\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={()=> history('/explore')}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<ExploreOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Add Post\"\n\t\t\t\t\t\t\t\t\tvalue=\"add post\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={()=> history('/create')}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<AddAPhotoOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Messages\"\n\t\t\t\t\t\t\t\t\tvalue=\"messages\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={()=> history('/messages')}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\t\t\tbadgeContent={4}\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<AllInboxOutlinedIcon />\n\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Notifications\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\tvalue=\"notification\"\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<Badge badgeContent={6} color=\"secondary\">\n\t\t\t\t\t\t\t\t\t\t\t<NotificationsActiveOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Profile\"\n\t\t\t\t\t\t\t\t\tvalue=\"profile\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={()=> history('/profile')}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<AccountCircleOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Logout\"\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\tvalue=\"logout\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={handleLogOut}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<ExitToAppOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BottomNavigation>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid sx={theme.sectionMobile}>\n\t\t\t\t\t\t\t<IconButton\n                                aria-label=\"show more\"\n                                aria-controls={mobileMenuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleMobileMenuOpen}\n                                color=\"inherit\"\n                                size=\"large\">\n\t\t\t\t\t\t\t\t<MoreIcon style={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }} />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t{renderMobileMenu}\n\t\t\t</Grid>\n\t\t\t<Modal open={openModal} onClose={handleCloseModal}>\n\t\t\t\t{modalBody}\n\t\t\t</Modal>\n\t\t{/* </nav> */}\n\t\t</>\n    );\n};\n\nexport default Navbar;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/VerticalTabs.jsx",["163"],"/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport withStyles from '@mui/styles/withStyles';\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Divider from \"@mui/material/Divider\";\n\nconst TabPanel = (props) => {\n\tconst { children, value, index, ...other } = props;\n\treturn (\n\t\t<div\n\t\t\tstyle={{ width: 430 }}\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`vertical-tabpanel-${index}`}\n\t\t\taria-labelledby={`vertical-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && (\n\t\t\t\t<Box p={3}>\n\t\t\t\t\t<Typography>{children}</Typography>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nTabPanel.propTypes = {\n\tchildren: PropTypes.node,\n\tindex: PropTypes.any.isRequired,\n\tvalue: PropTypes.any.isRequired,\n};\n\nconst a11yProps = (index) => {\n\treturn {\n\t\tid: `vertical-tab-${index}`,\n\t\t\"aria-controls\": `vertical-tabpanel-${index}`,\n\t};\n};\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tdisplay: \"flex\",\n\t\theight: \"100%\",\n\t},\n\ttabs: {\n\t\tborderRight: `1px solid ${theme.palette.divider}`,\n\t},\n\tfieldContainer: { display: \"flex\", marginBottom: \"10px\" },\n\tfieldContainerUnderInfo: { display: \"flex\", marginBottom: \"10px\", marginTop: \"10px\" },\n\tfieldLabel: { margin: \"auto 0px\", marginRight: \"10px\", width: \"25%\", fontWeight: \"bold\" },\n\tfieldInput: { \"& .MuiOutlinedInput-input\": { padding: \"10px 14px\" } },\n\ttextInfo: { color: \"rgba(var(--f52,142,142,142),1)\", marginBottom: \"10px\" },\n}));\n\nexport default function VerticalTabs() {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState(0);\n\n\tconst handleChange = (event, newValue) => {\n\t\tsetValue(newValue);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Tabs\n\t\t\t\torientation=\"vertical\"\n\t\t\t\tvariant=\"scrollable\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t\taria-label=\"Vertical tabs example\"\n\t\t\t\tclassName={classes.tabs}\n\t\t\t>\n\t\t\t\t<Tab label=\"Edit Profile\" {...a11yProps(0)} />\n\t\t\t\t<Tab label=\"Change Password\" {...a11yProps(1)} />\n\t\t\t\t<Tab label=\"Apps and Websites\" {...a11yProps(2)} />\n\t\t\t\t<Tab label=\"Email ans SMS\" {...a11yProps(3)} />\n\t\t\t\t<Tab label=\"Push Notifications\" {...a11yProps(4)} />\n\t\t\t\t<Tab label=\"Privacy and Security\" {...a11yProps(5)} />\n\t\t\t\t<Tab label=\"Email From Insta-Clone\" {...a11yProps(6)} />\n\t\t\t</Tabs>\n\t\t\t<TabPanel value={value} index={0} style={{ width: \"100%\" }}>\n\t\t\t\t<form noValidate autoComplete=\"off\">\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tName\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Typography variant=\"caption\" className={classes.textInfo}>\n\t\t\t\t\t\tHelp people discover your account by using the name you're known by: either your\n\t\t\t\t\t\tfull name, nickname, or business name.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className={classes.fieldContainerUnderInfo}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tUsername\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tWebsite\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tBio\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Typography variant=\"caption\" className={classes.textInfo}>\n\t\t\t\t\t\tPersonal Information\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Typography variant=\"caption\" className={classes.textInfo}>\n\t\t\t\t\t\tProvide your personal information, even if the account is used for a business, a\n\t\t\t\t\t\tpet or something else. This won't be a part of your public profile.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className={classes.fieldContainerUnderInfo}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tPhone Number\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tGender\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={1}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={2}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={3}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={4}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={5}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={6}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t</div>\n\t);\n}\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/theme/index.jsx",["164"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/service/apiCalls.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/service/request.js",["165"],"import React from 'react';\nimport axios from 'axios';\n\nexport const config = () => {\n\treturn {\n\t\t\tauthorization: \"Bearer \" + localStorage.getItem('jwt'),\n\t};\n};\n\nexport const authApiRequest = ({method, endpoint, headers, params, data, setCookie = false}) => {\n  console.log(\"API REQUEST:\", data);\n    return new Promise((resolve, reject) => {\n        axios({\n          method,\n          url: endpoint,\n          headers: headers,\n          params,\n          body: data,\n          withCredentials: true // Include cookies in the request\n        })\n          .then((resp) => {\n            if(resp.data && !resp.data.error){\n                resolve(resp.data);          \n            }\n            else {\n                if (resp.status >= 500 && resp.status <= 599) {\n                reject(\"Something went wrong.\");\n                }\n                // if (error.code === 0) {\n                //   resolve(data);\n                // } else {\n                //   reject(error.message || \"Request Failed\");\n                // }\n                if(resp.data.error){\n                    reject(resp.data.error || \"Request Failed\");\n                }\n            }\n          })\n          .catch((err) => {\n            if (err.status >= 500 && err.status <= 599) {\n              reject(\"Something went wrong.\");\n            }\n            const errorResponse = (err && err.response) || {};\n            if (errorResponse.status === 401) {\n              localStorage.clear();\n              sessionStorage.clear();\n              window.location.reload();\n              reject(errorResponse.statusText || errorResponse || \"Failed Request\");\n            }\n            // if (errorResponse.data && errorResponse.data.message) {\n            //   reject(errorResponse.data.message);\n            // } else {\n            //   reject(errorResponse.statusText);\n            // }\n            else {\n                reject(/*errorResponse.statusText || errorResponse.data.message || errorResponse ||*/ \"Failed Request\");\n            }\n          });\n      });\n}\n\nexport const apiRequest = ({method, endpoint, headers, params, data, setCookie = false}) => {\n    return new Promise((resolve, reject) => {\n        axios({\n          method,\n          url: endpoint,\n          headers: headers,\n          params,\n          data,\n          withCredentials: true // Include cookies in the request\n        })\n          .then((resp) => {\n            if(resp.data && !resp.data.error){\n                resolve(resp.data);          \n            }\n            else {\n                if (resp.status >= 500 && resp.status <= 599) {\n                reject(\"Something went wrong.\");\n                }\n                // if (error.code === 0) {\n                //   resolve(data);\n                // } else {\n                //   reject(error.message || \"Request Failed\");\n                // }\n                if(resp.data.error){\n                    reject(resp.data.error || \"Request Failed\");\n                }\n            }\n          })\n          .catch((err) => {\n            if (err.status >= 500 && err.status <= 599) {\n              reject(\"Something went wrong.\");\n            }\n            const errorResponse = (err && err.response) || {};\n            if (errorResponse.status === 401) {\n              localStorage.clear();\n              sessionStorage.clear();\n              window.location.reload();\n              reject(errorResponse.statusText || errorResponse || \"Failed Request\");\n            }\n            // if (errorResponse.data && errorResponse.data.message) {\n            //   reject(errorResponse.data.message);\n            // } else {\n            //   reject(errorResponse.statusText);\n            // }\n            else {\n                reject(/*errorResponse.statusText || errorResponse.data.message || errorResponse ||*/ \"Failed Request\");\n            }\n          });\n      });\n}\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/utils/fetchCookies.js",["166"],"import React from 'react'\n\nexport const fetchCookies = (key) => {\n    const cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n        const keyValueCookies = cookies[i].split(\"=\")\n        if(keyValueCookies[0].trim() === key.trim() &&keyValueCookies[1] ){\n        return keyValueCookies[1]\n        }\n    }\n}\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/redux/store.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/lib/actionReducerSlice/fetchMyPostsSlice.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":1,"column":28,"nodeType":"173","messageId":"174","endLine":1,"endColumn":38},{"ruleId":"171","severity":1,"message":"175","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":16},{"ruleId":"171","severity":1,"message":"176","line":2,"column":18,"nodeType":"173","messageId":"174","endLine":2,"endColumn":23},{"ruleId":"171","severity":1,"message":"177","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":19},{"ruleId":"171","severity":1,"message":"178","line":17,"column":26,"nodeType":"173","messageId":"174","endLine":17,"endColumn":32},{"ruleId":"171","severity":1,"message":"179","line":28,"column":8,"nodeType":"173","messageId":"174","endLine":28,"endColumn":11},{"ruleId":"180","severity":1,"message":"181","line":34,"column":5,"nodeType":"182","endLine":34,"endColumn":34,"suggestions":"183"},{"ruleId":"180","severity":1,"message":"184","line":34,"column":6,"nodeType":"185","endLine":34,"endColumn":33},{"ruleId":"171","severity":1,"message":"186","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":13},{"ruleId":"171","severity":1,"message":"187","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":13},{"ruleId":"167","replacedBy":"188"},{"ruleId":"169","replacedBy":"189"},{"ruleId":"171","severity":1,"message":"186","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":13},{"ruleId":"171","severity":1,"message":"190","line":247,"column":8,"nodeType":"173","messageId":"174","endLine":247,"endColumn":18},{"ruleId":"171","severity":1,"message":"186","line":8,"column":8,"nodeType":"173","messageId":"174","endLine":8,"endColumn":13},{"ruleId":"171","severity":1,"message":"186","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":13},{"ruleId":"171","severity":1,"message":"186","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":13},{"ruleId":"180","severity":1,"message":"191","line":71,"column":5,"nodeType":"182","endLine":71,"endColumn":7,"suggestions":"192"},{"ruleId":"171","severity":1,"message":"172","line":2,"column":38,"nodeType":"173","messageId":"174","endLine":2,"endColumn":48},{"ruleId":"171","severity":1,"message":"186","line":4,"column":8,"nodeType":"173","messageId":"174","endLine":4,"endColumn":13},{"ruleId":"171","severity":1,"message":"193","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":29},{"ruleId":"171","severity":1,"message":"194","line":8,"column":10,"nodeType":"173","messageId":"174","endLine":8,"endColumn":21},{"ruleId":"171","severity":1,"message":"195","line":10,"column":10,"nodeType":"173","messageId":"174","endLine":10,"endColumn":20},{"ruleId":"171","severity":1,"message":"196","line":10,"column":22,"nodeType":"173","messageId":"174","endLine":10,"endColumn":32},{"ruleId":"180","severity":1,"message":"197","line":90,"column":5,"nodeType":"182","endLine":90,"endColumn":7,"suggestions":"198"},{"ruleId":"171","severity":1,"message":"186","line":10,"column":8,"nodeType":"173","messageId":"174","endLine":10,"endColumn":13},{"ruleId":"171","severity":1,"message":"199","line":12,"column":10,"nodeType":"173","messageId":"174","endLine":12,"endColumn":22},{"ruleId":"171","severity":1,"message":"190","line":200,"column":8,"nodeType":"173","messageId":"174","endLine":200,"endColumn":18},{"ruleId":"171","severity":1,"message":"200","line":26,"column":16,"nodeType":"173","messageId":"174","endLine":26,"endColumn":19},{"ruleId":"171","severity":1,"message":"201","line":128,"column":7,"nodeType":"173","messageId":"174","endLine":128,"endColumn":20},{"ruleId":"171","severity":1,"message":"202","line":147,"column":8,"nodeType":"173","messageId":"174","endLine":147,"endColumn":15},{"ruleId":"171","severity":1,"message":"203","line":153,"column":9,"nodeType":"173","messageId":"174","endLine":153,"endColumn":12},{"ruleId":"171","severity":1,"message":"204","line":154,"column":9,"nodeType":"173","messageId":"174","endLine":154,"endColumn":13},{"ruleId":"205","severity":1,"message":"206","line":164,"column":4,"nodeType":"207","messageId":"208","endLine":164,"endColumn":10},{"ruleId":"171","severity":1,"message":"196","line":11,"column":8,"nodeType":"173","messageId":"174","endLine":11,"endColumn":18},{"ruleId":"205","severity":1,"message":"209","line":30,"column":9,"nodeType":"207","messageId":"208","endLine":30,"endColumn":21},{"ruleId":"171","severity":1,"message":"210","line":1,"column":8,"nodeType":"173","messageId":"174","endLine":1,"endColumn":13},{"ruleId":"171","severity":1,"message":"210","line":1,"column":8,"nodeType":"173","messageId":"174","endLine":1,"endColumn":13},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'AuthContext' is defined but never used.","'motion' is defined but never used.","'jwt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["213"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'axios' is defined but never used.","'Axios' is defined but never used.",["211"],["212"],"'deletePost' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["214"],"'AuthenticationContext' is defined but never used.","'MY_POST_URL' is defined but never used.","'makeStyles' is defined but never used.","'withStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["215"],"'SUB_POST_URL' is defined but never used.","'Box' is defined but never used.","'getModalStyle' is assigned a value but never used.","'classes' is assigned a value but never used.","'top' is assigned a value but never used.","'left' is assigned a value but never used.","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","unexpected","Duplicate key 'marginBottom'.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},"Update the dependencies array to be: [navigate]",{"range":"222","text":"223"},"Update the dependencies array to be: [userid]",{"range":"224","text":"225"},"Update the dependencies array to be: [dispatch]",{"range":"226","text":"227"},[1183,1212],"[navigate]",[2200,2202],"[userid]",[3076,3078],"[dispatch]"]