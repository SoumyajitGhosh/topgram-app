[{"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/index.js":"1","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/App.js":"2","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js":"3","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.state.js":"4","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/ResetPassword.jsx":"5","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/CreatePost.jsx":"6","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/NewPassword.jsx":"7","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/ProtectedRoute.js":"8","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.context.js":"9","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.reducer.js":"10","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Home.jsx":"11","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Login.jsx":"12","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Signup.jsx":"13","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/UserProfile.jsx":"14","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Profile.jsx":"15","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/SubscribePosts.jsx":"16","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/config/constants.js":"17","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/utils/regex.js":"18","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/types.jsx":"19","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Copyright.jsx":"20","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Navbar.jsx":"21","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/VerticalTabs.jsx":"22","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/theme/index.jsx":"23","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/service/apiCalls.js":"24","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/service/request.js":"25","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/utils/fetchCookies.js":"26","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/redux/store.js":"27","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/lib/actionReducerSlice/fetchMyPostsSlice.js":"28","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/lib/actionReducerSlice/fetchMyBookmarksSlice.js":"29","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/lib/actionReducerSlice/updateFollowDataSlice.js":"30"},{"size":760,"mtime":1683632239432,"results":"31","hashOfConfig":"32"},{"size":278,"mtime":1682445872963,"results":"33","hashOfConfig":"32"},{"size":2586,"mtime":1684682475755,"results":"34","hashOfConfig":"32"},{"size":381,"mtime":1677315730382,"results":"35","hashOfConfig":"32"},{"size":4434,"mtime":1682931551816,"results":"36","hashOfConfig":"32"},{"size":6281,"mtime":1684570582016,"results":"37","hashOfConfig":"32"},{"size":4519,"mtime":1684564123996,"results":"38","hashOfConfig":"32"},{"size":479,"mtime":1682253607801,"results":"39","hashOfConfig":"32"},{"size":133,"mtime":1677315730382,"results":"40","hashOfConfig":"32"},{"size":636,"mtime":1677315730382,"results":"41","hashOfConfig":"32"},{"size":16438,"mtime":1684570960312,"results":"42","hashOfConfig":"32"},{"size":5023,"mtime":1684682513208,"results":"43","hashOfConfig":"32"},{"size":5500,"mtime":1682932484871,"results":"44","hashOfConfig":"32"},{"size":8341,"mtime":1684681888292,"results":"45","hashOfConfig":"32"},{"size":11069,"mtime":1684570991247,"results":"46","hashOfConfig":"32"},{"size":10129,"mtime":1684571026563,"results":"47","hashOfConfig":"32"},{"size":1226,"mtime":1682956449046,"results":"48","hashOfConfig":"32"},{"size":266,"mtime":1682589233920,"results":"49","hashOfConfig":"32"},{"size":184,"mtime":1682253943952,"results":"50","hashOfConfig":"32"},{"size":363,"mtime":1684568691514,"results":"51","hashOfConfig":"32"},{"size":12118,"mtime":1684573209180,"results":"52","hashOfConfig":"32"},{"size":5787,"mtime":1684568697910,"results":"53","hashOfConfig":"32"},{"size":3858,"mtime":1684132978996,"results":"54","hashOfConfig":"32"},{"size":3871,"mtime":1684131406700,"results":"55","hashOfConfig":"32"},{"size":3825,"mtime":1684131741994,"results":"56","hashOfConfig":"32"},{"size":343,"mtime":1683533386255,"results":"57","hashOfConfig":"32"},{"size":523,"mtime":1684681620703,"results":"58","hashOfConfig":"32"},{"size":952,"mtime":1683822966844,"results":"59","hashOfConfig":"32"},{"size":970,"mtime":1683882378199,"results":"60","hashOfConfig":"32"},{"size":556,"mtime":1684681722460,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1mblzg6",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/index.js",[],["135","136"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/App.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js",["137","138","139","140","141","142","143","144"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.state.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/ResetPassword.jsx",["145"],"/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { RESET_PWD_URL } from \"../service/apiCalls\";\nimport { EmailRegex } from \"../utils/regex\";\nimport Copyright from \"../components/Copyright\";\n// Material-UI Components\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Alert from '@mui/material/Alert';\nimport { useTheme } from \"@mui/material\";\n\nconst Reset = () => {\n\tconst history = useNavigate();\n\tconst theme = useTheme();\n\tconst [email, setEmail] = useState(\"\");\n\n\tconst [emailCheck, setEmailCheck] = useState(false);\n\tconst [errorMsg, setErrorMsg] = useState(false);\n\tconst [successMsg, setSuccessMsg] = useState(false);\n\n\tconst timerRef = useRef();\n\n\tuseEffect(\n\t\t() => () => {\n\t\t\tclearTimeout(timerRef.current);\n\t\t},\n\t\t[]\n\t);\n\n\tconst handleInputChanges = (e) => {\n\t\tswitch (e.target.name) {\n\t\t\tcase \"email\":\n\t\t\t\tsetEmail(e.target.value);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handlePostData = () => {\n\t\tif (EmailRegex.test(email)) {\n\t\t\t// axios.post(RESET_PWD_URL, { email })\n\t\t\t// \t.then((res) => {\n\t\t\t// \t\tconst data = res.data;\n\t\t\t// \t\tconsole.log(data);\n\t\t\t// \t\tif (data.error) {\n\t\t\t// \t\t\tsetEmailCheck(false);\n\t\t\t// \t\t\tsetErrorMsg(true);\n\t\t\t// \t\t} else {\n\t\t\t// \t\t\t// make sure to not display another Alert instead\n\t\t\t// \t\t\tsetEmailCheck(false);\n\t\t\t// \t\t\tsetErrorMsg(false);\n\t\t\t// \t\t\t// show the confirmation message\n\t\t\t// \t\t\tsetSuccessMsg(true);\n\t\t\t// \t\t\t// set a time before we redirect the user to login page\n\t\t\t// \t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t// \t\t\t\thistory(\"/login\");\n\t\t\t// \t\t\t}, 3000);\n\t\t\t// \t\t}\n\t\t\t// \t})\n\t\t\t// \t.catch((err) => {\n\t\t\t// \t\tconsole.log(err);\n\t\t\t// \t});\n\t\t\tRESET_PWD_URL({ email })\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst data = res.data;\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\tsetEmailCheck(false);\n\t\t\t\t\t\tsetErrorMsg(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// make sure to not display another Alert instead\n\t\t\t\t\t\tsetEmailCheck(false);\n\t\t\t\t\t\tsetErrorMsg(false);\n\t\t\t\t\t\t// show the confirmation message\n\t\t\t\t\t\tsetSuccessMsg(true);\n\t\t\t\t\t\t// set a time before we redirect the user to login page\n\t\t\t\t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t\t\t\t\thistory(\"/login\");\n\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetErrorMsg(false);\n\t\t\tsetEmailCheck(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid container sx={{ height: \"-webkit-fill-available\" }}>\n\t\t\t<Grid sx={theme.imageStyle} item sm={4} md={6} />\n\t\t\t<Grid item xs={12} sm={8} md={6} sx={theme.container}>\n\t\t\t\t<Container component=\"main\" maxWidth=\"xs\" style={{ paddingBottom: \"64px\" }}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<div sx={theme.paper}>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tsx={theme.Logo}\n\t\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\tstyle={{ fontFamily: \"Grand Hotel, cursive \" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTopGram\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{emailCheck ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\t\t\tInvalid Email format — check it out!\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{errorMsg ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\t\t\tNo User exists with that email — check it Again !\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{successMsg ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"success\">\n\t\t\t\t\t\t\t\tThe reset password link has been sent — check out your email inbox !\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<form sx={theme.form} noValidate>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tsx={theme.submit}\n\t\t\t\t\t\t\t\tdisabled={email !== \"\" ? false : true}\n\t\t\t\t\t\t\t\tonClick={handlePostData}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReset your Password\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Box mt={8}>\n\t\t\t\t\t\t<Copyright />\n\t\t\t\t\t</Box>\n\t\t\t\t</Container>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Reset;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/CreatePost.jsx",["146"],"\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { CREATE_POST_URL } from \"../service/apiCalls\";\nimport Navbar from \"../components/Navbar\";\n\n// Material-UI deps\nimport Stepper from \"@mui/material/Stepper\";\nimport Step from \"@mui/material/Step\";\nimport StepLabel from \"@mui/material/StepLabel\";\nimport StepContent from \"@mui/material/StepContent\";\nimport Button from \"@mui/material/Button\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport TextField from \"@mui/material/TextField\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Fade from \"@mui/material/Fade\";\nimport Alert from '@mui/material/Alert';\n// FilePond deps\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css\";\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\nimport FilePondPluginImageTransform from \"filepond-plugin-image-transform\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport { useTheme } from \"@mui/system\";\n\nregisterPlugin(\n\tFilePondPluginImagePreview,\n\tFilePondPluginFileEncode,\n\tFilePondPluginImageResize,\n\tFilePondPluginImageTransform,\n\tFilePondPluginFileValidateType\n);\n\nconst getSteps = () => {\n\treturn [\"Select you image\", \"Tag a Friend\", \"Submit the post\"];\n};\n\nconst CreatePoste = () => {\n\tconst theme = useTheme();\n\tconst history = useNavigate();\n\tconst [files, setFiles] = useState([]);\n\tconst [caption, setCaption] = useState(\"\");\n\tconst [activeStep, setActiveStep] = useState(0);\n\tconst steps = getSteps();\n\n\tconst [query, setQuery] = useState(\"idle\");\n\tconst timerRef = useRef();\n\n\t// const config = axiosConfig(localStorage.getItem(\"jwt\"));\n\n\tuseEffect(\n\t\t() => () => {\n\t\t\tclearTimeout(timerRef.current);\n\t\t},\n\t\t[]\n\t);\n\n\tconst handlePostData = () => {\n\t\t// the Index 0 means the first file , we will add in the future the support of multiple\n\t\t// images upload , the max will be 10 images per post\n\t\tconst photoEncode = files[0].getFileEncodeBase64String();\n\t\tconst photoType = files[0].fileType;\n\t\t// Axios.post(\n\t\t// \tCREATE_POST_URL,\n\t\t// \t{\n\t\t// \t\ttitle: caption,\n\t\t// \t\tbody: caption,\n\t\t// \t\tphotoEncode,\n\t\t// \t\tphotoType,\n\t\t// \t},\n\t\t// \tconfig\n\t\t// ).then((rep) => {\n\t\t// \tif (rep.data.message) {\n\t\t// \t\tsetQuery(\"success\");\n\t\t// \t}\n\t\t// });\n\t\tCREATE_POST_URL({\n\t\t\ttitle: caption,\n\t\t\tbody: caption,\n\t\t\tphotoEncode,\n\t\t\tphotoType,\n\t\t})\n\t\t.then((rep) => {\n\t\t\tif (rep) {\n\t\t\t\tsetQuery(\"success\");\n\t\t\t}\n\t\t})\n\t\t.catch(err => console.log(\"Error in creating post:\", err));\n\t};\n\n\tconst getStepContent = (step) => {\n\t\tswitch (step) {\n\t\t\tcase 0:\n\t\t\t\treturn (\n\t\t\t\t\t<div sx={theme.filesContainer}>\n\t\t\t\t\t\t<FilePond\n\t\t\t\t\t\t\tlabelIdle='Drag & Drop your picture or <span class=\"filepond--label-action\">Browse</span>'\n\t\t\t\t\t\t\tfiles={files}\n\t\t\t\t\t\t\tallowMultiple={false}\n\t\t\t\t\t\t\tonupdatefiles={setFiles}\n\t\t\t\t\t\t\timageResizeTargetWidth={450}\n\t\t\t\t\t\t\timageResizeTargetHeight={450}\n\t\t\t\t\t\t\tacceptedFileTypes={[\"image/jpeg\", \"image/png\", \"images/gif\"]}\n\t\t\t\t\t\t\trequired={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tsx={{ margin: \"10px 0px\" }}\n\t\t\t\t\t\t\tid=\"outlined-search\"\n\t\t\t\t\t\t\tlabel=\"Caption\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tfullWidth=\"true\"\n\t\t\t\t\t\t\tmultiline=\"true\"\n\t\t\t\t\t\t\tvalue={caption}\n\t\t\t\t\t\t\tonChange={(e) => setCaption(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\tcase 1:\n\t\t\t\treturn \"This functionality isn't available for the moment\";\n\t\t\tcase 2:\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\treturn \"Unknown step\";\n\t\t}\n\t};\n\n\tconst handleNext = () => {\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep + 1);\n\t};\n\n\tconst handleBack = () => {\n\t\tsetActiveStep((prevActiveStep) => prevActiveStep - 1);\n\t};\n\n\tconst handleClickQuery = () => {\n\t\tclearTimeout(timerRef.current);\n\t\tif (query !== \"idle\") {\n\t\t\tsetQuery(\"idle\");\n\t\t\treturn;\n\t\t}\n\t\tsetQuery(\"progress\");\n\t\ttimerRef.current = setTimeout(() => {\n\t\t\thistory(\"/\");\n\t\t}, 4000);\n\t};\n\n\tconst handleSubmit = () => {\n\t\thandleNext();\n\t\thandleClickQuery();\n\t\thandlePostData();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Navbar />\n\t\t\t<div style={{ \t\n\t\t\t\twidth: \"70%\",\n\t\t\t\tmargin: \"40px auto\",\n\t\t\t\tpaddingTop: \"20px\"\n\t\t\t\t}}>\n\t\t\t\t<Stepper component={Paper} elevation={3} activeStep={activeStep} orientation=\"vertical\">\n\t\t\t\t\t{steps.map((label, index) => (\n\t\t\t\t\t\t<Step key={label}>\n\t\t\t\t\t\t\t<StepLabel>{label}</StepLabel>\n\t\t\t\t\t\t\t<StepContent>\n\t\t\t\t\t\t\t\t<Typography>{getStepContent(index)}</Typography>\n\t\t\t\t\t\t\t\t<div sx={theme.actionsContainer}>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tdisabled={activeStep === 0}\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleBack}\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: theme.spacing(1),\n\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: theme.spacing(1),\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tdisabled={files.length === 0 || caption === \"\"}\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\t\t\tactiveStep === steps.length - 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t? handleSubmit\n\t\t\t\t\t\t\t\t\t\t\t\t\t: handleNext\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\t\t\t\t\t\tmarginTop: theme.spacing(1),\n\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: theme.spacing(1),\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{activeStep === steps.length - 1 ? \"Submit\" : \"Next\"}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</StepContent>\n\t\t\t\t\t\t</Step>\n\t\t\t\t\t))}\n\t\t\t\t\t{activeStep === steps.length && (\n\t\t\t\t\t\t<Paper square elevation={0} sx={{\n\t\t\t\t\t\t\tpadding: \"6px 24px\",\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<div sx={theme.finishStyle}>\n\t\t\t\t\t\t\t\t{query === \"success\" ? (\n\t\t\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"success\">\n\t\t\t\t\t\t\t\t\t\tYour post has been successfully submitted — check it out!\n\t\t\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Fade\n\t\t\t\t\t\t\t\t\t\tsx={theme.finishStyle}\n\t\t\t\t\t\t\t\t\t\tin={query === \"progress\"}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\ttransitionDelay:\n\t\t\t\t\t\t\t\t\t\t\t\tquery === \"progress\" ? \"100ms\" : \"0ms\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tunmountOnExit\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<CircularProgress />\n\t\t\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t)}\n\t\t\t\t</Stepper>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default CreatePoste;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/NewPassword.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/ProtectedRoute.js",[],["147","148"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.context.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.reducer.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Home.jsx",["149","150","151","152","153","154"],"\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport { BOOKMARK_POST } from \"../contexts/types.jsx\";\nimport Navbar from \"../components/Navbar\";\nimport { ADD_BOOKMARK_URL, ADD_COMMENT, ALL_POST_URL, DELETE_POSTS, LIKE_POSTS, REMOVE_BOOKMARK, UNLIKE_POSTS } from \"../service/apiCalls\";\nimport {useSelector, useDispatch} from 'react-redux';\n\n// Material-UI deps\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Avatar from \"@mui/material/Avatar\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\n// Material-UI Icons\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\nimport BookmarkIcon from \"@mui/icons-material/Bookmark\";\nimport BookmarkBorderIcon from \"@mui/icons-material/BookmarkBorder\";\nimport { useTheme } from \"@mui/system\";\nimport { fetchMyBookmarksAction } from \"../lib/actionReducerSlice/fetchMyBookmarksSlice\";\n\nconst Home = () => {\n\tconst theme = useTheme();\n\t// const { state, dispatch } = useContext(AuthenticationContext);\n\tconst dispatch = useDispatch();\n    const user = JSON.parse(localStorage?.getItem('user'));\n\tconst [data, setData] = useState([]);\n\tconst [showSend, setShowSend] = useState(false);\n\tconst [comment, setComment] = useState(\"\");\n\n\t// const config = axiosConfig(localStorage.getItem(\"jwt\"));\n\n\tuseEffect(() => {\n\t\t// axios.get(ALL_POST_URL, config).then((res) => {\n\t\t// \tsetData(res.data.posts);\n\t\t// });\n        ALL_POST_URL().then((res) => {\n\t\t\tsetData(res.posts);\n\t\t});\n\t}, []);\n\n\tconst likePost = (id) => {\n\t\t// axios.put(`http://localhost:5000/like`, { postId: id }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (result.data._id === item._id) return result.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        LIKE_POSTS({ postId: id })\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result._id === item._id) return result;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst unlikePost = (id) => {\n\t\t// axios.put(`http://localhost:5000/Unlike`, { postId: id }, config)\n\t\t// \t.then((res) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (res.data._id === item._id) return res.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        UNLIKE_POSTS({ postId: id })\n\t\t\t.then((res) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (res._id === item._id) return res;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst bookmark = (id) => {\n\t\t// axios.put(`http://localhost:5000/bookmark-post`, { postId: id }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tdispatch({\n\t\t// \t\t\ttype: BOOKMARK_POST,\n\t\t// \t\t\tpayload: { Bookmarks: result.data.Bookmarks },\n\t\t// \t\t});\n\t\t// \t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        ADD_BOOKMARK_URL({ postId: id })\n\t\t\t.then((result) => {\n\t\t\t\t// dispatch({\n\t\t\t\t// \ttype: BOOKMARK_POST,\n\t\t\t\t// \tpayload: { Bookmarks: result.Bookmarks },\n\t\t\t\t// });\n\t\t\t\tdispatch(fetchMyBookmarksAction());\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(result));\n\t\t\t\tALL_POST_URL().then((res) => {\n\t\t\t\t\tsetData(res.posts);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst removeBookmark = (id) => {\n\t\t// axios.put(`http://localhost:5000/remove-bookmark`, { postId: id }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tdispatch({\n\t\t// \t\t\ttype: BOOKMARK_POST,\n\t\t// \t\t\tpayload: { Bookmarks: result.data.Bookmarks },\n\t\t// \t\t});\n\t\t// \t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        REMOVE_BOOKMARK({ postId: id })\n\t\t\t.then((result) => {\n\t\t\t\tdispatch(fetchMyBookmarksAction());\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(result));\n\t\t\t\tALL_POST_URL().then((res) => {\n\t\t\t\t\tsetData(res.posts);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst makeComment = (text, postId) => {\n\t\tsetComment(\"\");\n\t\t// axios.put(`http://localhost:5000/comment`, { text, postId }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (result.data._id === item._id) return result.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        ADD_COMMENT({ text, postId })\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result.data._id === item._id) return result;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t\tsetComment(\"\");\n\t};\n\n\tconst deletePost = (postId) => {\n\t\t// axios.delete(`http://localhost:5000/deletepost/${postId}`, config).then((res) => {\n\t\t// \tconst newData = data.filter((item) => {\n\t\t// \t\treturn item._id !== res.data;\n\t\t// \t});\n\t\t// \tsetData(newData);\n\t\t// });\n        DELETE_POSTS({postId}).then((res) => {\n\t\t\tconst newData = data.filter((item) => {\n\t\t\t\treturn item._id !== res;\n\t\t\t});\n\t\t\tsetData(newData);\n\t\t});\n\t};\n\n\treturn <>\n        <Navbar />\n        <div style={{ paddingTop: '52px' }}>\n            {data.map((item) => (\n                <div className=\"home\" key={item._id}>\n                    <Card sx={theme.homePageRoot}>\n                        <CardHeader\n                            sx={{ padding: \"10px\" }}\n                            avatar={\n                                <Avatar>\n                                    <img\n                                        sx={{ height: \"40px\" }}\n                                        alt=\"\"\n                                        src={`data:${item.PhotoType};base64,${item.Photo}`}\n                                    />\n                                </Avatar>\n                            }\n                            title={\n                                <Link\n                                    style={{ textDecoration: \"none\" }}\n                                    to={\n                                        item.PostedBy._id !== user._id\n                                            ? `/profile/${item.PostedBy._id}`\n                                            : \"/profile\"\n                                    }\n                                >\n                                    {item.PostedBy.Name}\n                                </Link>\n                            }\n                            subheader=\"September 14, 2016\"\n                        />\n\n                        <CardMedia\n                            sx={{ //height: 0,\n                                paddingTop: \"56.25%\", // 16:9\n                                height: \"max-content\" }}\n                            image={`data:${item.PhotoType};base64,${item.Photo}`}\n                            title=\"Paella dish\"\n                        />\n\n                        <CardActions sx={theme.likeBar} disableSpacing>\n                            {item.Likes.includes(user._id) ? (\n                                <IconButton\n                                    aria-label=\"Like\"\n                                    color=\"secondary\"\n                                    onClick={() => {\n                                        unlikePost(item._id);\n                                    }}\n                                    size=\"large\">\n                                    <FavoriteIcon />\n                                </IconButton>\n                            ) : (\n                                <IconButton\n                                    aria-label=\"Like\"\n                                    onClick={() => {\n                                        likePost(item._id);\n                                    }}\n                                    size=\"large\">\n                                    <FavoriteBorderIcon />\n                                </IconButton>\n                            )}\n                            <IconButton aria-label=\"comments\" size=\"large\">\n                                <ChatBubbleOutlineIcon />\n                            </IconButton>\n                            {user.Bookmarks.includes(item._id) ? (\n                                <IconButton\n                                    aria-label=\"Remove Bookmark\"\n                                    style={{ marginLeft: \"auto\", color: \"#e0d011\" }}\n                                    onClick={() => {\n                                        removeBookmark(item._id);\n                                    }}\n                                    size=\"large\">\n                                    <BookmarkIcon />\n                                </IconButton>\n                            ) : (\n                                <IconButton\n                                    aria-label=\"Bookmark\"\n                                    style={{ marginLeft: \"auto\" }}\n                                    onClick={() => {\n                                        bookmark(item._id);\n                                    }}\n                                    size=\"large\">\n                                    <BookmarkBorderIcon />\n                                </IconButton>\n                            )}\n                        </CardActions>\n\n                        <CardContent>\n                            <Typography variant=\"subtitle2\" display=\"block\" gutterBottom>\n                                {item.Likes.length} Likes\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                {item.Body}\n                            </Typography>\n                        </CardContent>\n\n                        <Divider variant=\"middle\" />\n\n                        <List>\n                            {item.Comments.map((cmt) => {\n                                return (\n                                    <ListItem\n                                        sx={{ \n                                            width: \"35%\",\n                                            cursor: \"pointer\"\n                                        }}\n                                        alignItems=\"flex-start\"\n                                        key={cmt._id}\n                                    >\n                                        <ListItemText\n                                            secondary={\n                                                <React.Fragment>\n                                                    <Typography\n                                                        component=\"span\"\n                                                        variant=\"body2\"\n                                                        sx={{ \tdisplay: \"inline\",\n                                                        fontWeight: \"600\" }}\n                                                        color=\"textPrimary\"\n                                                    >\n                                                        <Link\n                                                            style={{ textDecoration: \"none\" }}\n                                                            to={\n                                                                cmt.PostedBy._id !== user._id\n                                                                    ? `/profile/${cmt.PostedBy._id}`\n                                                                    : \"/profile\"\n                                                            }\n                                                        >\n                                                            {cmt.PostedBy.Name}\n                                                        </Link>\n                                                    </Typography>\n                                                    {\" — \"}\n                                                    {cmt.Text}\n                                                </React.Fragment>\n                                            }\n                                        />\n                                    </ListItem>\n                                );\n                            })}\n                            {item.Comments.length === 0 ? (\n                                <ListItem alignItems=\"flex-start\" style={{ left: \"38%\" }}>\n                                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                                        No Comments yet\n                                    </Typography>\n                                </ListItem>\n                            ) : null}\n                            {item.Comments.length > 3 && item.Comments.length !== 0 ? (\n                                <ListItem\n                                    alignItems=\"flex-start\"\n                                    sx={{ \twidth: \"35%\",\n                                    cursor: \"pointer\" }}\n                                >\n                                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                                        See all {item.Comments.length} comments\n                                    </Typography>\n                                    <DoubleArrowIcon sx={{\n                                        height: \"17px\",\n                                        width: \"17px\",\n                                        paddingTop: \"4px\",\n                                        paddingBottom: \"3px\"\n                                    }} />\n                                </ListItem>\n                            ) : null}\n                        </List>\n\n                        <Divider variant=\"middle\" />\n\n                        <CardContent sx={theme.comments}>\n                            <Avatar>\n                                <img\n                                    sx={{ height: \"40px\" }}\n                                    alt=\"\"\n                                    src=\"https://images.unsplash.com/photo-1537815749002-de6a533c64db?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                                />\n                            </Avatar>\n                            <TextField\n                                multiline\n                                rows={1}\n                                placeholder=\"Add your comment...\"\n                                variant=\"outlined\"\n                                value={comment}\n                                onChange={(event) => {\n                                    event.preventDefault();\n                                    setComment(event.target.value);\n                                    setShowSend(true);\n                                    if (event.target.value === \"\") setShowSend(false);\n                                }}\n                            />\n                            <IconButton\n                                aria-label=\"add to favorites\"\n                                sx={{ height: \"17px\",\n                                width: \"17px\",\n                                paddingTop: \"4px\",\n                                paddingBottom: \"3px\" }}\n                                disabled={!showSend}\n                                onClick={() => makeComment(comment, item._id)}\n                                size=\"large\">\n                                <SendIcon />\n                            </IconButton>\n                        </CardContent>\n                    </Card>\n                </div>\n            ))}\n        </div>\n    </>;\n};\n\nexport default Home;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Login.jsx",["155","156","157"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Signup.jsx",["158"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SIGNUP_URL } from \"../service/apiCalls\";\nimport Copyright from \"../components/Copyright\";\nimport { EmailRegex } from \"../utils/regex\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Alert from '@mui/material/Alert';\nimport { motion } from 'framer-motion/dist/framer-motion';\nimport { useTheme } from \"@mui/system\";\n\nconst Signup = () => {\n\tconst history = useNavigate();\n\tconst theme = useTheme();\n\tconst [name, setName] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [formatValidation, setFormatValidation] = useState(false);\n\tconst [authValidation, setAuthValidation] = useState(false);\n\tconst [confirmValidation, setConfirmValidation] = useState(false);\n\n\tconst timerRef = useRef();\n\n\tuseEffect(\n\t\t() => () => {\n\t\t\tclearTimeout(timerRef.current);\n\t\t},\n\t\t[]\n\t);\n\n\tconst handleInputChanges = (e) => {\n\t\tswitch (e.target.name) {\n\t\t\tcase \"username\":\n\t\t\t\tsetName(e.target.value);\n\t\t\t\tbreak;\n\t\t\tcase \"email\":\n\t\t\t\tsetEmail(e.target.value);\n\t\t\t\tbreak;\n\t\t\tcase \"password\":\n\t\t\t\tsetPassword(e.target.value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handlePostData = () => {\n\t\t// Here we check just if the given email has a correct format\n\t\tif (EmailRegex.test(email)) {\n\t\t\t// axios.post(SIGNUP_URL, {\n\t\t\t// \tname,\n\t\t\t// \tpassword,\n\t\t\t// \temail,\n\t\t\t// })\n\t\t\t// \t.then((res) => {\n\t\t\t// \t\tconst data = res.data;\n\t\t\t// \t\tif (data.error) {\n\t\t\t// \t\t\tsetFormatValidation(false);\n\t\t\t// \t\t\tsetAuthValidation(true);\n\t\t\t// \t\t} else {\n\t\t\t// \t\t\t// show the confirmation message\n\t\t\t// \t\t\tsetConfirmValidation(true);\n\t\t\t// \t\t\t// set a timeOut before redirecting the user to login page\n\t\t\t// \t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t// \t\t\t\thistory(\"/login\");\n\t\t\t// \t\t\t}, 2800);\n\t\t\t// \t\t}\n\t\t\t// \t})\n\t\t\t// \t.catch((err) => {\n\t\t\t// \t\tconsole.log(err);\n\t\t\t// \t});\n\t\t\tSIGNUP_URL({\n\t\t\t\tname,\n\t\t\t\tpassword,\n\t\t\t\temail,\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst data = res.data;\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\tsetFormatValidation(false);\n\t\t\t\t\t\tsetAuthValidation(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// show the confirmation message\n\t\t\t\t\t\tsetConfirmValidation(true);\n\t\t\t\t\t\t// set a timeOut before redirecting the user to login page\n\t\t\t\t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t\t\t\t\thistory(\"/login\");\n\t\t\t\t\t\t}, 2800);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetAuthValidation(false);\n\t\t\tsetFormatValidation(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Container  maxWidth=\"xs\" component={motion.div}\n\t\tinitial=\"hidden\"\n\t\tanimate=\"visible\"\n\t\texit={{ opacity: 0, transition: { duration: 0.5 } }}>\n\t\t\t<Grid sx={theme.paper}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Typography sx={theme.Logo} variant=\"h2\">\n\t\t\t\t\tTopGram\n\t\t\t\t</Typography>\n\t\t\t\t{/*  Check the format of the Email */}\n\t\t\t\t{formatValidation ? (\n\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\tInvalid Email format — check it out!\n\t\t\t\t\t</Alert>\n\t\t\t\t) : null}\n\t\t\t\t{/*  Check the if the Email already Exist */}\n\t\t\t\t{authValidation ? (\n\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\tThis Email is already token — check it out!\n\t\t\t\t\t</Alert>\n\t\t\t\t) : null}\n\t\t\t\t{/* Success notification */}\n\t\t\t\t{confirmValidation ? (\n\t\t\t\t\t<Alert variant=\"outlined\" severity=\"success\">\n\t\t\t\t\t\tYour account has been created successfully — check it out!\n\t\t\t\t\t</Alert>\n\t\t\t\t) : null}\n\t\t\t\t<form sx={theme.form} noValidate>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tautoComplete=\"UserName\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{/* <Grid item xs={12}>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tcontrol={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n\t\t\t\t\t\t\t\tlabel=\"I want to receive inspiration, marketing promotions and updates via email.\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid> */}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tsx={theme.submit}\n\t\t\t\t\t\tvariant={email !== \"\" && password !== \"\" ? \"contained\": \"outlined\"}\n\t\t\t\t\t\tdisabled={email !== \"\" && password !== \"\" ? false : true}\n\t\t\t\t\t\tonClick={handlePostData}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Grid container justifyContent=\"flex-end\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n\t\t\t\t\t\t\t\tAlready have an account? Sign in\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t</Grid>\n\t\t\t<Box mt={5}>\n\t\t\t\t<Copyright />\n\t\t\t</Box>\n\t\t</Container>\n\t);\n};\n\nexport default Signup;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/UserProfile.jsx",["159","160","161","162","163","164","165"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Profile.jsx",["166","167","168","169","170","171","172","173"],"\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport VerticalTabs from \"../components/VerticalTabs.jsx\";\nimport Navbar from \"../components/Navbar\";\nimport { MY_POST_URL, MY_BOOKMARKS_URL } from \"../service/apiCalls\";\nimport {useSelector, useDispatch} from 'react-redux';\n\n// Material-UI Components\nimport { makeStyles, withStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Icon from \"@mui/material/Icon\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport ImageList from \"@mui/material/ImageList\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport ImageListItemBar from \"@mui/material/ImageListItemBar\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport MuiDialogContent from \"@mui/material/DialogContent\";\nimport MuiDialogActions from \"@mui/material/DialogActions\";\nimport { styled } from \"@mui/styles\";\n\n// Material-UI Icons\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { fetchMyPostsAction } from \"../lib/actionReducerSlice/fetchMyPostsSlice\";\nimport { useTheme } from \"@mui/system\";\nimport { fetchMyBookmarksAction } from \"../lib/actionReducerSlice/fetchMyBookmarksSlice\";\n\n// EditProfile dialog content style\nconst DialogContent = styled(MuiDialogContent)((theme) => ({\n\troot: {\n\t\tpadding: \"16px\",\n\t},\n}));\n\n// EditProfile dialog actions style\nconst DialogActions = styled(MuiDialogActions)((theme) => ({\n\troot: {\n\t\tmargin: \"0px\",\n\t\tpadding: \"2px\",\n\t},\n}));\n\n// Tabs data container\nconst TabPanel = (props) => {\n\tconst { children, value, index, ...other } = props;\n\treturn (\n\t\t<div role=\"tabpanel\" hidden={value !== index} {...other}>\n\t\t\t{value === index && <Box p={3}>{children}</Box>}\n\t\t</div>\n\t);\n};\n\nconst ProfilePage = () => {\n    const theme = useTheme();\n\t// const { state } = useContext(AuthenticationContext);\n\tconst [data, setData] = useState([]);\n    const dispatch = useDispatch();\n\tconst [bookmarks, setBookmarks] = useState([]);\n\tconst [value, setValue] = useState(\"Posts\");\n    const postsData = useSelector((state) => state.myPosts);\n    const myBookmarks = useSelector((state) => state.myBookmarks);\n    const user = JSON.parse(localStorage?.getItem('user'));\n\n\t// const config = axiosConfig(localStorage.getItem(\"jwt\"));\n\n\tuseEffect(() => {\n\t\t// axios.get(MY_POST_URL, config).then((res) => {\n\t\t// \tsetData(res.data.posts);\n\t\t// });\n\t\t// axios.get(MY_BOOKMARKS_URL, config).then((res) => {\n\t\t// \tsetBookmarks(res.data.bookmark);\n\t\t// });\n        // MY_POST_URL().then((res) => {\n        //     console.log(\"Res:\", res)\n\t\t// \tsetData(res.data.posts);\n\t\t// });\n        dispatch(fetchMyPostsAction());\n        dispatch(fetchMyBookmarksAction());\n    \n\t\t// MY_BOOKMARKS_URL().then((res) => {\n\t\t// \tsetBookmarks(res?.data?.bookmark);\n\t\t// });\n\t}, []);\n\n    // Set Data from API after dispatching\n    useEffect(() => {\n        setData(postsData?.data?.posts);\n    }, [postsData])\n\n    useEffect(() => {\n        setBookmarks(myBookmarks?.data?.bookmark);\n    }, [myBookmarks])\n\n\t//Toggle the EditProfile Button to show the Dialog\n\tconst [openEdit, setOpenEdit] = useState(false);\n\n\tconst handleEditClickOpen = () => {\n\t\tsetOpenEdit(true);\n\t};\n\tconst handleEditClose = () => {\n\t\tsetOpenEdit(false);\n\t};\n\n\treturn <>\n        <Navbar />\n        <CssBaseline />\n        <Box component=\"main\" sx={{\n            maxWidth: 935,\n            margin: \"auto\",\n            padding: \"100px 20px 0\",\n        }}>\n            {/* User Profile Data Goes Here */}\n            <Box mb=\"44px\">\n                <Grid container>\n                    <Grid item xs={4} sx={{ margin: \"auto\" }}>\n                        <Avatar\n                            sx={{ width: 152, height: 152, margin: \"auto\" }}\n                            src=\"https://cc-media-foxit.fichub.com/image/fox-it-mondofox/e8c0f288-781d-4d0b-98ad-fd169782b53b/scene-sottacqua-per-i-sequel-di-avatar-maxw-654.jpg\"\n                        />\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Box clone mb=\"20px\">\n                            <Grid container alignItems=\"center\">\n                                <Typography variant=\"h5\">\n                                    {/* {state ? state.user.Name : \"IsLoading ...\"} */}\n                                    {user?.Name}\n                                </Typography>\n                                <Button\n                                    sx={{ marginLeft: 20 }}\n                                    variant=\"outlined\"\n                                    onClick={handleEditClickOpen}\n                                >\n                                    Edit Profile\n                                </Button>\n                                <IconButton component={Link} to=\"#\" size=\"large\">\n                                    <Icon>settings</Icon>\n                                </IconButton>\n                            </Grid>\n                        </Box>\n                        <Box mb=\"20px\">\n                            <Grid container spacing={4}>\n                                <Grid item>\n                                    <Typography variant=\"subtitle1\">\n                                        <b>{data?.length}</b> posts\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"subtitle1\">\n                                        <b>\n                                            {user\n                                                ? user.Followers.length\n                                                : \"IsLoading ...\"}\n                                        </b>{\" \"}\n                                        followers\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"subtitle1\">\n                                        <b>\n                                            {user\n                                                ? user.Following.length\n                                                : \"IsLoading ...\"}\n                                        </b>{\" \"}\n                                        following\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                        <Typography variant=\"subtitle1\">Siriwat Kunaporn</Typography>\n                        <Typography variant=\"subtitle1\">Bangkok Christian College</Typography>\n                        <Typography variant=\"subtitle1\">CU intania 96.</Typography>\n                    </Grid>\n                </Grid>\n            </Box>\n            {/* Tabs Goes Reference Here */}\n            <Tabs\n                value={value}\n                centered\n                onChange={(event, value) => {\n                    setValue(value);\n                }}\n                TabIndicatorProps={{\n                    style: {\n                        transform: \"translateY(-70px)\",\n                        backgroundColor: \"#262626\",\n                    },\n                }}\n            >\n                <Tab label=\"Posts\" value=\"Posts\" icon={<Icon>grid_on_outlined</Icon>} />\n                <Tab label=\"IGTV\" value=\"IGTV\" icon={<Icon>live_tv</Icon>} disabled />\n                <Tab label=\"Saved\" value=\"Saved\" icon={<Icon>bookmark_border_outlined</Icon>} />\n                <Tab\n                    label=\"Tagged\"\n                    value=\"Tagged\"\n                    icon={<Icon>local_offer_outlined</Icon>}\n                    disabled\n                />\n            </Tabs>\n            {/* Tabs Data Goes Here */}\n            <TabPanel value={value} index=\"Posts\">\n                <Grid container spacing={2}> \n                    {data?.map((item) => (\n                        <Grid item xs={4} key={item.id} sx={{ width: \"100%\", height: \"100%\" }}>\n                            <img\n                                width=\"100%\"\n                                height=\"100%\"\n                                alt=\"post\"\n                                src={`data:${item.photoType};base64,${item.photo}`}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n            </TabPanel>\n            <TabPanel value={value} index=\"Saved\">\n                <ImageList cellHeight={230} cols={3} spacing={15}>\n                    {bookmarks?.map((item) => (\n                        <ImageListItem key={item._id}>\n                            <img\n                                src={`data:${item.PhotoType};base64,${item.Photo}`}\n                                alt={item.Title}\n                            />\n                            <ImageListItemBar\n                                title={item.Title}\n                                subtitle={<span>By : {item.PostedBy.Name}</span>}\n                                actionIcon={\n                                    <IconButton aria-label={`info about`} sx={{ color: \"rgba(255, 255, 255, 0.54)\" }} size=\"large\">\n                                        <DeleteIcon />\n                                    </IconButton>\n                                }\n                            />\n                        </ImageListItem>\n                    ))}\n                </ImageList>\n            </TabPanel>\n        </Box>\n        {/* EditProfile Dialog */}\n        <Dialog onClose={handleEditClose} open={openEdit} sx={theme.dialogContainer}>\n            <DialogTitle sx={{\n                margin: \"0px\",\n                padding: \"16px\",\n            }}>\n                <Typography variant=\"h6\">Profile settings</Typography>\n                <IconButton\n                    aria-label=\"close\"\n                    sx={{ \n                        position: \"absolute\",\n                        right: \"8px\",\n                        top: \"8px\",\n                        color: \"#9e9e9e\",\n                    }}\n                    onClick={handleEditClose}\n                    size=\"large\">\n                    <CloseIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent dividers>\n                <VerticalTabs />\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleEditClose} color=\"primary\">\n                    Save changes\n                </Button>\n            </DialogActions>\n        </Dialog>\n    </>;\n};\n\nexport default ProfilePage;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/SubscribePosts.jsx",["174","175","176","177"],"\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport { SUB_POST_URL, LIKE_POSTS, UNLIKE_POSTS, ADD_COMMENT, DELETE_POSTS } from \"../service/apiCalls\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Avatar from \"@mui/material/Avatar\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\nimport Navbar from \"../components/Navbar\";\n\n// General styles\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: 500,\n\t\tmargin: \"20px auto\",\n\t\t\"& .MuiTextField-root\": {\n\t\t\twidth: \"100%\",\n\t\t},\n\t\t\"& .MuiOutlinedInput-multiline\": {\n\t\t\tpaddingTop: \"8px\",\n\t\t\tpaddingBottom: \"8px\",\n\t\t\tmarginTop: \"5px\",\n\t\t\tmarginLeft: \"5px\",\n\t\t\tmarginRight: \"5px\",\n\t\t},\n\t\t\"& .MuiCardContent-root:last-child\": {\n\t\t\tpaddingBottom: \"10px\",\n\t\t},\n\t\t\"& .MuiDivider-middle\": {\n\t\t\tmarginBottom: \"4px\",\n\t\t},\n\t\t\"& .MuiListItem-root\": {\n\t\t\tpadding: \"0px 16px\",\n\t\t},\n\t\t\"& .MuiCardContent-root\": {\n\t\t\tpaddingTop: \"0px\",\n\t\t\tpaddingBottom: \"5px\",\n\t\t},\n\t\t\"& .MuiIconButton-root:focus\": {\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0)\",\n\t\t},\n\t},\n\theader: {\n\t\tpadding: \"10px\",\n\t},\n\tmedia: {\n\t\t//height: 0,\n\t\tpaddingTop: \"56.25%\", // 16:9\n\t\theight: \"max-content\",\n\t},\n\tlikeBar: {\n\t\theight: \"25px\",\n\t\tpaddingTop: \"0px\",\n\t\tmarginTop: \"8px\",\n\t\tmarginLeft: \"2px\",\n\t\tpaddingLeft: \"0px\",\n\t\tpaddingBottom: \"4px\",\n\t},\n\tcomments: {\n\t\tdisplay: \"flex\",\n\t\tpaddingTop: \"0px\",\n\t\tpaddingLeft: \"12px\",\n\t\tpaddingRight: \"0px\",\n\t},\n\tcomment_item_see_more: {\n\t\twidth: \"35%\",\n\t\tcursor: \"pointer\",\n\t},\n\tcomments_icon_see_more: {\n\t\theight: \"17px\",\n\t\twidth: \"17px\",\n\t\tpaddingTop: \"4px\",\n\t\tpaddingBottom: \"3px\",\n\t},\n\tcomments_icon: {\n\t\theight: \"30px\",\n\t\tpaddingLeft: \"0px\",\n\t\tpaddingTop: \"13px\",\n\t\tpaddingRight: \"8px\",\n\t\tpaddingBottom: \"0px\",\n\t},\n\tinline: {\n\t\tdisplay: \"inline\",\n\t\tfontWeight: \"600\",\n\t},\n\tavatar: {\n\t\theight: \"40px\",\n\t},\n\tlinks: {\n\t\ttextDecoration: \"none\",\n\t},\n}));\n\nconst SubscribePost = () => {\n\tconst classes = useStyles();\n\t// const { state } = useContext(AuthenticationContext);\n\tconst user = JSON.parse(localStorage?.getItem('user'));\n\tconst [data, setData] = useState([]);\n\tconst [showSend, setShowSend] = useState(false);\n\tconst [comment, setComment] = useState(\"\");\n\n\t// const config = axiosConfig(localStorage.getItem(\"jwt\"));\n\n\tuseEffect(() => {\n\t\t// axios.get(SUB_POST_URL, config).then((res) => {\n\t\t// \tsetData(res.data.posts);\n\t\t// });\n        SUB_POST_URL().then((res) => {\n\t\t\tsetData(res.posts);\n\t\t});\n\t}, []);\n\n\tconst likePost = (id) => {\n\t\t// axios.put(`http://localhost:5000/like`, { postId: id }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (result.data._id === item._id) return result.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        LIKE_POSTS({ postId: id })\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result._id === item._id) return result;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst unlikePost = (id) => {\n\t\t// axios.put(`http://localhost:5000/Unlike`, { postId: id }, config)\n\t\t// \t.then((res) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (res.data._id === item._id) return res.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        UNLIKE_POSTS({ postId: id })\n\t\t\t.then((res) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (res._id === item._id) return res;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst makeComment = (text, postId) => {\n\t\tsetComment(\"\");\n\t\t// axios.put(`http://localhost:5000/comment`, { text, postId }, config)\n\t\t// \t.then((result) => {\n\t\t// \t\tconst newData = data.map((item) => {\n\t\t// \t\t\tif (result.data._id === item._id) return result.data;\n\t\t// \t\t\telse return item;\n\t\t// \t\t});\n\t\t// \t\tsetData(newData);\n\t\t// \t})\n\t\t// \t.catch((err) => console.log(err));\n        ADD_COMMENT({ text, postId })\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result._id === item._id) return result;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst deletePost = (postId) => {\n\t\t// axios.delete(`http://localhost:5000/deletepost/${postId}`, config).then((res) => {\n\t\t// \tconst newData = data.filter((item) => {\n\t\t// \t\treturn item._id !== res.data;\n\t\t// \t});\n\t\t// \tsetData(newData);\n\t\t// });\n        DELETE_POSTS({postId}).then((res) => {\n\t\t\tconst newData = data.filter((item) => {\n\t\t\t\treturn item._id !== res;\n\t\t\t});\n\t\t\tsetData(newData);\n\t\t});\n\t};\n\n\treturn <>\n        <Navbar />\n\t\t<div style={{ paddingTop: '52px' }}>\n\t\t\t{data.map((item) => (\n\t\t\t\t<div className=\"home\" key={item._id}>\n\t\t\t\t\t<Card className={classes.root}>\n\t\t\t\t\t\t<CardHeader\n\t\t\t\t\t\t\tclassName={classes.header}\n\t\t\t\t\t\t\tavatar={\n\t\t\t\t\t\t\t\t<Avatar>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tclassName={classes.avatar}\n\t\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\t\tsrc={`data:${item.PhotoType};base64,${item.Photo}`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tclassName={classes.links}\n\t\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\t\titem.PostedBy._id !== user._id\n\t\t\t\t\t\t\t\t\t\t\t? `/profile/${item.PostedBy._id}`\n\t\t\t\t\t\t\t\t\t\t\t: \"/profile\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{item.PostedBy.Name}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsubheader=\"September 14, 2016\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<CardMedia\n\t\t\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\t\t\timage={`data:${item.PhotoType};base64,${item.Photo}`}\n\t\t\t\t\t\t\ttitle=\"Paella dish\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<CardActions className={classes.likeBar} disableSpacing>\n\t\t\t\t\t\t\t{item.Likes.includes(user._id) ? (\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label=\"Like\"\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tunlikePost(item._id);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsize=\"large\">\n\t\t\t\t\t\t\t\t\t<FavoriteIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\taria-label=\"Like\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tlikePost(item._id);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsize=\"large\">\n\t\t\t\t\t\t\t\t\t<FavoriteBorderIcon />\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<IconButton aria-label=\"comments\" size=\"large\">\n\t\t\t\t\t\t\t\t<ChatBubbleOutlineIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</CardActions>\n\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" display=\"block\" gutterBottom>\n\t\t\t\t\t\t\t\t{item.Likes.length} Likes\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t\t\t{item.Body}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardContent>\n\n\t\t\t\t\t\t<Divider variant=\"middle\" />\n\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t{item.Comments.map((cmt) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t\tclassName={classes.comment_item}\n\t\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t\t\tkey={cmt._id}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"body2\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.inline}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.links}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcmt.PostedBy._id !== user._id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? `/profile/${cmt.PostedBy._id}`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"/profile\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{cmt.PostedBy.Name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\" — \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t{cmt.Text}\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t{item.Comments.length === 0 ? (\n\t\t\t\t\t\t\t\t<ListItem alignItems=\"flex-start\" style={{ left: \"38%\" }}>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\" display=\"block\" gutterBottom>\n\t\t\t\t\t\t\t\t\t\tNo Comments yet\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t{item.Comments.length > 3 && item.Comments.length !== 0 ? (\n\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\talignItems=\"flex-start\"\n\t\t\t\t\t\t\t\t\tclassName={classes.comment_item_see_more}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Typography variant=\"caption\" display=\"block\" gutterBottom>\n\t\t\t\t\t\t\t\t\t\tSee all {item.Comments.length} comments\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t<DoubleArrowIcon className={classes.comments_icon_see_more} />\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</List>\n\n\t\t\t\t\t\t<Divider variant=\"middle\" />\n\n\t\t\t\t\t\t<CardContent className={classes.comments}>\n\t\t\t\t\t\t\t<Avatar>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tclassName={classes.avatar}\n\t\t\t\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\t\t\t\tsrc=\"https://images.unsplash.com/photo-1537815749002-de6a533c64db?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\trows={1}\n\t\t\t\t\t\t\t\tplaceholder=\"Add your comment...\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tvalue={comment}\n\t\t\t\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\tsetComment(event.target.value);\n\t\t\t\t\t\t\t\t\tsetShowSend(true);\n\t\t\t\t\t\t\t\t\tif (event.target.value === \"\") setShowSend(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label=\"add to favorites\"\n\t\t\t\t\t\t\t\tclassName={classes.comments_icon}\n\t\t\t\t\t\t\t\tdisabled={!showSend}\n\t\t\t\t\t\t\t\tonClick={() => makeComment(comment, item._id)}\n\t\t\t\t\t\t\t\tsize=\"large\">\n\t\t\t\t\t\t\t\t<SendIcon />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n    </>;\n};\n\nexport default SubscribePost;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/config/constants.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/utils/regex.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/types.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Copyright.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Navbar.jsx",["178","179","180","181","182","183","184","185","186"],"import React, { useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport { LOGOUT } from \"../contexts/types\";\nimport Axios from \"axios\";\n\n// Material-UI Components\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { makeStyles } from '@mui/styles';\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport InputBase from \"@mui/material/InputBase\";\nimport Badge from \"@mui/material/Badge\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\nimport Modal from \"@mui/material/Modal\";\nimport { Grid, Box } from \"@mui/material\";\nimport { motion } from 'framer-motion/dist/framer-motion';\nimport { useTheme } from \"@mui/system\";\n\n// Material-UI Icons\nimport MoreIcon from \"@mui/icons-material/MoreVert\";\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\nimport ExploreOutlinedIcon from \"@mui/icons-material/ExploreOutlined\";\nimport AddAPhotoOutlinedIcon from \"@mui/icons-material/AddAPhotoOutlined\";\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\nimport AllInboxOutlinedIcon from \"@mui/icons-material/AllInboxOutlined\";\nimport NotificationsActiveOutlinedIcon from \"@mui/icons-material/NotificationsActiveOutlined\";\nimport AccountCircleOutlinedIcon from \"@mui/icons-material/AccountCircleOutlined\";\nimport ExitToAppOutlinedIcon from \"@mui/icons-material/ExitToAppOutlined\";\n\nconst Navbar = () => {\n\tconst { state, dispatch } = useContext(AuthenticationContext);\n\tconst history = useNavigate();\n\tconst theme = useTheme();\n\tconst [search, setSearch] = useState([]);\n\tconst user = JSON.parse(localStorage?.getItem('user'));\n\n\t// Material-Ui\n\tconst [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\n\tconst isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n\t// getModalStyle is not a pure function, we roll the style only on the first render\n\tconst modalStyle = () =>{\n\t\tconst top = 50;\n\t\tconst left = 50;\n\n\t\treturn {\n\t\t\ttop: `0%`,\n\t\t\tleft: `30%`,\n\t\t\t// transform: `translate(50%, 50%)`,\n\t\t\tborder: \"1px solid rgba(0, 0, 0, 0.015)\",\n\t\t\tposition: \"absolute\",\n\t\t\twidth: 400,\n\t\t\tbackgroundColor: theme.palette.background.paper,\n\t\t\tborder: \"1px solid rgba(0, 0, 0, 0.015)\",\n\t\t\tboxShadow: theme.shadows[4],\n\t\t\tpadding: theme.spacing(2, 4, 3),\n\t\t\tborderRadius: \"10px\",\n\t\t\t\"&:focus\": {\n\t\t\t\tborder: \"1px solid rgba(0, 0, 0, 0.015)\",\n\t\t\t},\n\t\t};\n\t};\n\tconst [openModal, setOpenModal] = useState(false);\n\n\tconst findUser = (pattern) => {\n\t\tif (!(pattern === \"\")) {\n\t\t\tconst URL = `http://localhost:8585/users-research`;\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n\t\t\t\t},\n\t\t\t};\n\t\t\tAxios.post(URL, { pattern }, config).then((res) => {\n\t\t\t\tsetSearch(res.data);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleOpenModal = () => {\n\t\thandleMobileMenuClose();\n\t\tsetOpenModal(true);\n\t};\n\n\tconst handleCloseModal = () => {\n\t\tsetOpenModal(false);\n\t};\n\n\tconst handleMobileMenuClose = () => {\n\t\tsetMobileMoreAnchorEl(null);\n\t};\n\n\tconst handleMobileMenuOpen = (event) => {\n\t\tsetMobileMoreAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleLogOut = () => {\n\t\tlocalStorage.clear();\n\t\thistory(\"/login\");\n\t};\n\n\tconst mobileMenuId = \"primary-search-account-menu-mobile\";\n\tconst renderMobileMenu = (\n\t\t<Menu\n\t\t\tanchorEl={mobileMoreAnchorEl}\n\t\t\tanchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n\t\t\tid={mobileMenuId}\n\t\t\tkeepMounted\n\t\t\ttransformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n\t\t\topen={isMobileMenuOpen}\n\t\t\tonClose={handleMobileMenuClose}\n\t\t>\n\t\t\t<MenuItem onClick={handleOpenModal}>\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<SearchOutlinedIcon style={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }} />\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Search</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem component={Link} to=\"/explore\">\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<ExploreOutlinedIcon\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Explore</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem component={Link} to=\"/create\">\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<AddAPhotoOutlinedIcon\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Add Post</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem component={Link} to=\"#\">\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<Badge\n\t\t\t\t\t\tbadgeContent={4}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<AllInboxOutlinedIcon />\n\t\t\t\t\t</Badge>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Messages</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem component={Link} to=\"#\">\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<Badge badgeContent={6} color=\"secondary\">\n\t\t\t\t\t\t<NotificationsActiveOutlinedIcon\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Badge>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Notifications</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem component={Link} to=\"/profile\">\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<AccountCircleOutlinedIcon\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Profile</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem onClick={handleLogOut}>\n\t\t\t\t<IconButton size=\"large\">\n\t\t\t\t\t<ExitToAppOutlinedIcon\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</IconButton>\n\t\t\t\t<p>LogOut</p>\n\t\t\t</MenuItem>\n\t\t</Menu>\n\t);\n\tconst modalBody = (\n\t\t<Grid sx={modalStyle}>\n\t\t\t<Grid container sx={theme.search} style={{ \"margin\": \"0px auto\" }}>\n\t\t\t\t<Grid item xs={10}>\n\t\t\t\t\t<InputBase\n\t\t\t\t\t\tplaceholder=\" Search…\"\n\t\t\t\t\t\tsx={{\n\t\t\t\t\t\t\troot: theme.inputRoot,\n\t\t\t\t\t\t\tinput: theme.inputInput,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsx= {{ paddingTop: '4px', paddingLeft: '16px' }}\n\t\t\t\t\t\tinputProps={{ \"aria-label\": \"search\" }}\n\t\t\t\t\t\tonChange={(e) => findUser(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={2} sx={theme.searchIcon}>\n\t\t\t\t\t<SearchOutlinedIcon style={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }} />\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<List sx={{ width: \"100%\" }}>\n\t\t\t\t{search.user\n\t\t\t\t\t? search.user.map((item) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: \"none\" }}\n\t\t\t\t\t\t\t\t\tkey={item._id}\n\t\t\t\t\t\t\t\t\tto={item._id !== user._id ? `/profile/${item._id}` : \"/profile\"}\n\t\t\t\t\t\t\t\t\tonClick={handleCloseModal}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Divider\n\t\t\t\t\t\t\t\t\t\tvariant=\"inset\"\n\t\t\t\t\t\t\t\t\t\tcomponent=\"li\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ marginLeft: \"0px\" }}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ListItem alignItems=\"flex-start\">\n\t\t\t\t\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Remy Sharp\"\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"/static/images/avatar/1.jpg\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\t\t\tprimary={item.Name}\n\t\t\t\t\t\t\t\t\t\t\tsecondary={\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography>{item.Email}</Typography>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t  })\n\t\t\t\t\t: null}\n\t\t\t</List>\n\t\t</Grid>\n\t);\n\n\treturn (\n\t\t<>\n        {/* <nav> */}\n\t\t\t<Grid /*sx={{ flexGrow: 1 }}*/>\n\t\t\t\t<AppBar position=\"fixed\" sx={{ backgroundColor: \"#ffffff\" }}>\n\t\t\t\t\t<Toolbar sx={{ justifyContent: 'space-around' }}>\n\t\t\t\t\t\t<Link to={user ? \"/\" : \"/login\"} style={{ textDecoration: 'none' }}>\n\t\t\t\t\t\t\t<Typography sx={theme.title} variant=\"h4\" noWrap>\n\t\t\t\t\t\t\t\tTopGram\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Grid sx={{ flexGrow: 1 }} />\n\t\t\t\t\t\t<Grid sx={theme.sectionDesktop}>\n\t\t\t\t\t\t\t<BottomNavigation>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Search\"\n\t\t\t\t\t\t\t\t\tvalue=\"search\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={handleOpenModal}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<SearchOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Home\"\n\t\t\t\t\t\t\t\t\tvalue=\"home\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={()=> history('/')}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<HomeOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Explore\"\n\t\t\t\t\t\t\t\t\tvalue=\"explore\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={()=> history('/explore')}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<ExploreOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Add Post\"\n\t\t\t\t\t\t\t\t\tvalue=\"add post\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={()=> history('/create')}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<AddAPhotoOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Messages\"\n\t\t\t\t\t\t\t\t\tvalue=\"messages\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={()=> history('/messages')}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<Badge\n\t\t\t\t\t\t\t\t\t\t\tbadgeContent={4}\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<AllInboxOutlinedIcon />\n\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Notifications\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\tvalue=\"notification\"\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<Badge badgeContent={6} color=\"secondary\">\n\t\t\t\t\t\t\t\t\t\t\t<NotificationsActiveOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Profile\"\n\t\t\t\t\t\t\t\t\tvalue=\"profile\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={()=> history('/profile')}\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<AccountCircleOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<BottomNavigationAction\n\t\t\t\t\t\t\t\t\tlabel=\"Logout\"\n\t\t\t\t\t\t\t\t\tstyle={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }}\n\t\t\t\t\t\t\t\t\tvalue=\"logout\"\n\t\t\t\t\t\t\t\t\tcomponent={motion.button}\n\t\t\t\t\t\t\t\t\twhileHover={{ scale: 1.2 }}\n\t\t\t\t\t\t\t\t\twhileTap={{ scale: 0.8 }}\n\t\t\t\t\t\t\t\t\tonClick={handleLogOut}\n\t\t\t\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t\t\t\t<ExitToAppOutlinedIcon\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.54)\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</BottomNavigation>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid sx={theme.sectionMobile}>\n\t\t\t\t\t\t\t<IconButton\n                                aria-label=\"show more\"\n                                aria-controls={mobileMenuId}\n                                aria-haspopup=\"true\"\n                                onClick={handleMobileMenuOpen}\n                                color=\"inherit\"\n                                size=\"large\">\n\t\t\t\t\t\t\t\t<MoreIcon style={{ \"color\": \"rgba(0, 0, 0, 0.54)\" }} />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t{renderMobileMenu}\n\t\t\t</Grid>\n\t\t\t<Modal open={openModal} onClose={handleCloseModal}>\n\t\t\t\t{modalBody}\n\t\t\t</Modal>\n\t\t{/* </nav> */}\n\t\t</>\n    );\n};\n\nexport default Navbar;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/VerticalTabs.jsx",["187"],"\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport withStyles from '@mui/styles/withStyles';\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Divider from \"@mui/material/Divider\";\n\nconst TabPanel = (props) => {\n\tconst { children, value, index, ...other } = props;\n\treturn (\n\t\t<div\n\t\t\tstyle={{ width: 430 }}\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`vertical-tabpanel-${index}`}\n\t\t\taria-labelledby={`vertical-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && (\n\t\t\t\t<Box p={3}>\n\t\t\t\t\t<Typography>{children}</Typography>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nTabPanel.propTypes = {\n\tchildren: PropTypes.node,\n\tindex: PropTypes.any.isRequired,\n\tvalue: PropTypes.any.isRequired,\n};\n\nconst a11yProps = (index) => {\n\treturn {\n\t\tid: `vertical-tab-${index}`,\n\t\t\"aria-controls\": `vertical-tabpanel-${index}`,\n\t};\n};\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tdisplay: \"flex\",\n\t\theight: \"100%\",\n\t},\n\ttabs: {\n\t\tborderRight: `1px solid ${theme.palette.divider}`,\n\t},\n\tfieldContainer: { display: \"flex\", marginBottom: \"10px\" },\n\tfieldContainerUnderInfo: { display: \"flex\", marginBottom: \"10px\", marginTop: \"10px\" },\n\tfieldLabel: { margin: \"auto 0px\", marginRight: \"10px\", width: \"25%\", fontWeight: \"bold\" },\n\tfieldInput: { \"& .MuiOutlinedInput-input\": { padding: \"10px 14px\" } },\n\ttextInfo: { color: \"rgba(var(--f52,142,142,142),1)\", marginBottom: \"10px\" },\n}));\n\nexport default function VerticalTabs() {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState(0);\n\n\tconst handleChange = (event, newValue) => {\n\t\tsetValue(newValue);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Tabs\n\t\t\t\torientation=\"vertical\"\n\t\t\t\tvariant=\"scrollable\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t\taria-label=\"Vertical tabs example\"\n\t\t\t\tclassName={classes.tabs}\n\t\t\t>\n\t\t\t\t<Tab label=\"Edit Profile\" {...a11yProps(0)} />\n\t\t\t\t<Tab label=\"Change Password\" {...a11yProps(1)} />\n\t\t\t\t<Tab label=\"Apps and Websites\" {...a11yProps(2)} />\n\t\t\t\t<Tab label=\"Email ans SMS\" {...a11yProps(3)} />\n\t\t\t\t<Tab label=\"Push Notifications\" {...a11yProps(4)} />\n\t\t\t\t<Tab label=\"Privacy and Security\" {...a11yProps(5)} />\n\t\t\t\t<Tab label=\"Email From Insta-Clone\" {...a11yProps(6)} />\n\t\t\t</Tabs>\n\t\t\t<TabPanel value={value} index={0} style={{ width: \"100%\" }}>\n\t\t\t\t<form noValidate autoComplete=\"off\">\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tName\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Typography variant=\"caption\" className={classes.textInfo}>\n\t\t\t\t\t\tHelp people discover your account by using the name you're known by: either your\n\t\t\t\t\t\tfull name, nickname, or business name.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className={classes.fieldContainerUnderInfo}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tUsername\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tWebsite\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tBio\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Typography variant=\"caption\" className={classes.textInfo}>\n\t\t\t\t\t\tPersonal Information\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Typography variant=\"caption\" className={classes.textInfo}>\n\t\t\t\t\t\tProvide your personal information, even if the account is used for a business, a\n\t\t\t\t\t\tpet or something else. This won't be a part of your public profile.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className={classes.fieldContainerUnderInfo}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tPhone Number\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tGender\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={1}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={2}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={3}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={4}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={5}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={6}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t</div>\n\t);\n}\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/theme/index.jsx",["188"],"import { createTheme, responsiveFontSizes } from \"@mui/material\";\n\nconst defaultTheme = createTheme(); //accessing old theme in new create theme\n\nlet lightTheme = createTheme({\n    typography: {\n       h2: {\n           fontFamily: \"Grand Hotel, cursive\"\n       }\n    },\n    paper: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingTop: '20vh'\n    },\n    imageStyle: {\n\t\tbackgroundSize: \"cover\",\n\t\tbackgroundColor: \"#fafafa\",\n\t\tbackgroundImage: \"url(https://source.unsplash.com/random?social-media,people,social,instruments,singing,dancing,dogs,cats,nature,city,night-life,movies,anime,sports)\",\n\t\tbackgroundRepeat: \"no-repeat\",\n\t\tbackgroundPosition: \"center\",\n\t\theight: \"100vh\",\n\t},\n    Logo: {\n\t\tfontFamily: \"Grand Hotel, cursive\",\n\t\tmarginBottom: \"42px\",\n\t\twidth: \"fit-content\",\n        marginBottom: defaultTheme.spacing(3),\n\t},\n\tavatar: {\n\t\tmargin: defaultTheme.spacing(1),\n\t\tbackgroundColor: defaultTheme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: \"100%\", // Fix IE 11 issue.\n\t\tmarginTop: defaultTheme.spacing(3),\n\t},\n\tsubmit: {\n\t\tmargin: defaultTheme.spacing(3, 0, 2),\n\t},\n    container: {\n\t\tmargin: \" auto 0px\",\n\t},\n\tsearch: {\n\t\tposition: \"relative\",\n\t\tborderRadius: defaultTheme.shape.borderRadius,\n\t\tbackgroundColor: \"rgba(0, 0, 0, 0.075)\",\n\t\t\"&:hover\": {\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0.03)\",\n\t\t},\n\t\tmarginRight: defaultTheme.spacing(2),\n\t\tmarginLeft: 0,\n\t\twidth: \"100%\",\n\t\t[defaultTheme.breakpoints.up(\"sm\")]: {\n\t\t\tmarginLeft: defaultTheme.spacing(3),\n\t\t\twidth: \"auto\",\n\t\t},\n\t\tmargin: \"0px auto\",\n\t},\n\tsearchIcon: {\n\t\tpadding: defaultTheme.spacing(0, 2),\n\t\theight: \"100%\",\n\t\t// position: \"absolute\",\n\t\tmarginTop: '10px',\n\t\tpointerEvents: \"none\",\n\t\t// display: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\",\n\t\tcolor: \"rgba(0, 0, 0, 0.54)\",\n\t},\n\ttitle: {\n\t\t// display: \"none\",\n\t\t// [defaultTheme.breakpoints.up(\"sm\")]: {\n\t\tdisplay: \"block\",\n\t\t// },\n\t\tfontFamily: \"Grand Hotel, cursive\",\n\t\tcolor: \"rgba(0, 0, 0, 0.54)\",\n\t},\n\tsectionDesktop: {\n\t\tdisplay: \"none\",\n\t\t[defaultTheme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"flex\",\n\t\t},\n\t},\n\tsectionMobile: {\n\t\tdisplay: \"flex\",\n\t\t[defaultTheme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t},\n\tmodalStyle: {\n\t\t// top: `50%`,\n\t\t// left: `50%`,\n\t\ttransform: `translate(50%, 50%)`,\n\t\tborder: \"1px solid rgba(0, 0, 0, 0.015)\",\n\t},\n\tinputRoot: {\n\t\tcolor: \"inherit\",\n\t},\n\tinputInput: {\n\t\ttransition: defaultTheme.transitions.create(\"width\"),\n\t\twidth: \"100%\",\n\t\t// [defaultTheme.breakpoints.up(\"sm\")]: {\n\t\t// \twidth: \"30ch\",\n\t\t// },\n\t\tcolor: \"#000000\",\n\t},\n\tfilesContainer: { \n\t\tmaxWidth: \"500px\", \n\t\tmargin: \"auto\" \n\t},\n\tactionsContainer: {\n\t\twidth: \"30%\",\n\t\tmargin: \"auto\",\n\t\tmarginBottom: defaultTheme.spacing(2),\n\t},\n\tfinishStyle: {\n\t\twidth: \"fit-content\",\n\t\tmargin: \"auto\",\n\t},\n\tdialogContainer: {\n\t\t\"& .MuiDialog-paperWidthSm\": {\n\t\t\twidth: \"80%\",\n\t\t\tmaxWidth: \"900px\",\n\t\t},\n\t},\n\thomePageRoot: {\n\t\tmaxWidth: 500,\n\t\tmargin: \"20px auto\",\n\t\t\"& .MuiTextField-root\": {\n\t\t\twidth: \"100%\",\n\t\t},\n\t\t\"& .MuiOutlinedInput-multiline\": {\n\t\t\tpaddingTop: \"8px\",\n\t\t\tpaddingBottom: \"8px\",\n\t\t\tmarginTop: \"5px\",\n\t\t\tmarginLeft: \"5px\",\n\t\t\tmarginRight: \"5px\",\n\t\t},\n\t\t\"& .MuiCardContent-root:last-child\": {\n\t\t\tpaddingBottom: \"10px\",\n\t\t},\n\t\t\"& .MuiDivider-middle\": {\n\t\t\tmarginBottom: \"4px\",\n\t\t},\n\t\t\"& .MuiListItem-root\": {\n\t\t\tpadding: \"0px 16px\",\n\t\t},\n\t\t\"& .MuiCardContent-root\": {\n\t\t\tpaddingTop: \"0px\",\n\t\t\tpaddingBottom: \"5px\",\n\t\t},\n\t\t\"& .MuiIconButton-root:focus\": {\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0)\",\n\t\t},\n\t},\n\tlikeBar: {\n\t\theight: \"25px\",\n\t\tpaddingTop: \"0px\",\n\t\tmarginTop: \"8px\",\n\t\tmarginLeft: \"2px\",\n\t\tpaddingLeft: \"0px\",\n\t\tpaddingBottom: \"4px\",\n\t},\n\tcomments: {\n\t\tdisplay: \"flex\",\n\t\tpaddingTop: \"0px\",\n\t\tpaddingLeft: \"12px\",\n\t\tpaddingRight: \"0px\",\n\t},\n})\n\nexport const theme = responsiveFontSizes(lightTheme);\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/service/apiCalls.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/service/request.js",["189"],"import React from 'react';\nimport axios from 'axios';\n\nexport const config = () => {\n\treturn {\n\t\t\tauthorization: \"Bearer \" + localStorage.getItem('jwt'),\n\t};\n};\n\nexport const authApiRequest = ({method, endpoint, headers, params, data, setCookie = false}) => {\n    return new Promise((resolve, reject) => {\n        axios({\n          method,\n          url: endpoint,\n          headers: headers,\n          params,\n          data,\n          withCredentials: true // Include cookies in the request\n        })\n          .then((resp) => {\n            if(resp.data && !resp.data.error){\n                resolve(resp.data);          \n            }\n            else {\n                if (resp.status >= 500 && resp.status <= 599) {\n                reject(\"Something went wrong.\");\n                }\n                // if (error.code === 0) {\n                //   resolve(data);\n                // } else {\n                //   reject(error.message || \"Request Failed\");\n                // }\n                if(resp.data.error){\n                    reject(resp.data.error || \"Request Failed\");\n                }\n            }\n          })\n          .catch((err) => {\n            if (err.status >= 500 && err.status <= 599) {\n              reject(\"Something went wrong.\");\n            }\n            const errorResponse = (err && err.response) || {};\n            if (errorResponse.status === 401) {\n              localStorage.clear();\n              sessionStorage.clear();\n              window.location.reload();\n              reject(errorResponse.statusText || errorResponse || \"Failed Request\");\n            }\n            // if (errorResponse.data && errorResponse.data.message) {\n            //   reject(errorResponse.data.message);\n            // } else {\n            //   reject(errorResponse.statusText);\n            // }\n            else {\n                reject(/*errorResponse.statusText || errorResponse.data.message || errorResponse ||*/ \"Failed Request\");\n            }\n          });\n      });\n}\n\nexport const apiRequest = ({method, endpoint, headers, params, data, setCookie = false}) => {\n    return new Promise((resolve, reject) => {\n        axios({\n          method,\n          url: endpoint,\n          headers: headers,\n          params,\n          data,\n          withCredentials: true // Include cookies in the request\n        })\n          .then((resp) => {\n            if(resp.data && !resp.data.error){\n                resolve(resp.data);          \n            }\n            else {\n                if (resp.status >= 500 && resp.status <= 599) {\n                reject(\"Something went wrong.\");\n                }\n                // if (error.code === 0) {\n                //   resolve(data);\n                // } else {\n                //   reject(error.message || \"Request Failed\");\n                // }\n                if(resp.data.error){\n                    reject(resp.data.error || \"Request Failed\");\n                }\n            }\n          })\n          .catch((err) => {\n            if (err.status >= 500 && err.status <= 599) {\n              reject(\"Something went wrong.\");\n            }\n            const errorResponse = (err && err.response) || {};\n            if (errorResponse.status === 401) {\n              localStorage.clear();\n              sessionStorage.clear();\n              window.location.reload();\n              reject(errorResponse.statusText || errorResponse || \"Failed Request\");\n            }\n            // if (errorResponse.data && errorResponse.data.message) {\n            //   reject(errorResponse.data.message);\n            // } else {\n            //   reject(errorResponse.statusText);\n            // }\n            else {\n                reject(/*errorResponse.statusText || errorResponse.data.message || errorResponse ||*/ \"Failed Request\");\n            }\n          });\n      });\n}\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/utils/fetchCookies.js",["190"],"import React from 'react'\n\nexport const fetchCookies = (key) => {\n    const cookies = document.cookie.split(\";\");\n    for (var i = 0; i < cookies.length; i++) {\n        const keyValueCookies = cookies[i].split(\"=\")\n        if(keyValueCookies[0].trim() === key.trim() &&keyValueCookies[1] ){\n        return keyValueCookies[1]\n        }\n    }\n}\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/redux/store.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/lib/actionReducerSlice/fetchMyPostsSlice.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/lib/actionReducerSlice/fetchMyBookmarksSlice.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/lib/actionReducerSlice/updateFollowDataSlice.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":1,"column":28,"nodeType":"197","messageId":"198","endLine":1,"endColumn":38},{"ruleId":"195","severity":1,"message":"199","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":16},{"ruleId":"195","severity":1,"message":"200","line":2,"column":18,"nodeType":"197","messageId":"198","endLine":2,"endColumn":23},{"ruleId":"195","severity":1,"message":"201","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":19},{"ruleId":"195","severity":1,"message":"202","line":17,"column":26,"nodeType":"197","messageId":"198","endLine":17,"endColumn":32},{"ruleId":"195","severity":1,"message":"203","line":22,"column":8,"nodeType":"197","messageId":"198","endLine":22,"endColumn":11},{"ruleId":"204","severity":1,"message":"205","line":28,"column":5,"nodeType":"206","endLine":28,"endColumn":34,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":28,"column":6,"nodeType":"209","endLine":28,"endColumn":33},{"ruleId":"195","severity":1,"message":"210","line":10,"column":8,"nodeType":"197","messageId":"198","endLine":10,"endColumn":13},{"ruleId":"195","severity":1,"message":"211","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":13},{"ruleId":"191","replacedBy":"212"},{"ruleId":"193","replacedBy":"213"},{"ruleId":"195","severity":1,"message":"196","line":2,"column":38,"nodeType":"197","messageId":"198","endLine":2,"endColumn":48},{"ruleId":"195","severity":1,"message":"210","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":13},{"ruleId":"195","severity":1,"message":"214","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":29},{"ruleId":"195","severity":1,"message":"215","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":23},{"ruleId":"195","severity":1,"message":"216","line":9,"column":9,"nodeType":"197","messageId":"198","endLine":9,"endColumn":20},{"ruleId":"195","severity":1,"message":"217","line":168,"column":8,"nodeType":"197","messageId":"198","endLine":168,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":37},{"ruleId":"195","severity":1,"message":"214","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":29},{"ruleId":"195","severity":1,"message":"210","line":7,"column":8,"nodeType":"197","messageId":"198","endLine":7,"endColumn":13},{"ruleId":"195","severity":1,"message":"210","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":13},{"ruleId":"195","severity":1,"message":"196","line":2,"column":38,"nodeType":"197","messageId":"198","endLine":2,"endColumn":48},{"ruleId":"195","severity":1,"message":"210","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":13},{"ruleId":"195","severity":1,"message":"214","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":29},{"ruleId":"195","severity":1,"message":"218","line":6,"column":10,"nodeType":"197","messageId":"198","endLine":6,"endColumn":28},{"ruleId":"195","severity":1,"message":"219","line":36,"column":8,"nodeType":"197","messageId":"198","endLine":36,"endColumn":13},{"ruleId":"195","severity":1,"message":"220","line":44,"column":8,"nodeType":"197","messageId":"198","endLine":44,"endColumn":18},{"ruleId":"204","severity":1,"message":"221","line":56,"column":5,"nodeType":"206","endLine":56,"endColumn":7,"suggestions":"222"},{"ruleId":"195","severity":1,"message":"196","line":2,"column":38,"nodeType":"197","messageId":"198","endLine":2,"endColumn":48},{"ruleId":"195","severity":1,"message":"210","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":13},{"ruleId":"195","severity":1,"message":"214","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":29},{"ruleId":"195","severity":1,"message":"223","line":8,"column":10,"nodeType":"197","messageId":"198","endLine":8,"endColumn":21},{"ruleId":"195","severity":1,"message":"224","line":8,"column":23,"nodeType":"197","messageId":"198","endLine":8,"endColumn":39},{"ruleId":"195","severity":1,"message":"225","line":12,"column":10,"nodeType":"197","messageId":"198","endLine":12,"endColumn":20},{"ruleId":"195","severity":1,"message":"226","line":12,"column":22,"nodeType":"197","messageId":"198","endLine":12,"endColumn":32},{"ruleId":"204","severity":1,"message":"227","line":94,"column":5,"nodeType":"206","endLine":94,"endColumn":7,"suggestions":"228"},{"ruleId":"195","severity":1,"message":"196","line":2,"column":38,"nodeType":"197","messageId":"198","endLine":2,"endColumn":48},{"ruleId":"195","severity":1,"message":"210","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":13},{"ruleId":"195","severity":1,"message":"214","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":29},{"ruleId":"195","severity":1,"message":"217","line":194,"column":8,"nodeType":"197","messageId":"198","endLine":194,"endColumn":18},{"ruleId":"195","severity":1,"message":"229","line":4,"column":10,"nodeType":"197","messageId":"198","endLine":4,"endColumn":16},{"ruleId":"195","severity":1,"message":"225","line":14,"column":10,"nodeType":"197","messageId":"198","endLine":14,"endColumn":20},{"ruleId":"195","severity":1,"message":"230","line":26,"column":16,"nodeType":"197","messageId":"198","endLine":26,"endColumn":19},{"ruleId":"195","severity":1,"message":"231","line":42,"column":10,"nodeType":"197","messageId":"198","endLine":42,"endColumn":15},{"ruleId":"195","severity":1,"message":"232","line":42,"column":17,"nodeType":"197","messageId":"198","endLine":42,"endColumn":25},{"ruleId":"195","severity":1,"message":"233","line":54,"column":9,"nodeType":"197","messageId":"198","endLine":54,"endColumn":12},{"ruleId":"195","severity":1,"message":"234","line":55,"column":9,"nodeType":"197","messageId":"198","endLine":55,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":65,"column":4,"nodeType":"237","messageId":"238","endLine":65,"endColumn":10},{"ruleId":"239","severity":1,"message":"240","line":207,"column":7,"nodeType":"241","messageId":"242","endLine":207,"endColumn":55},{"ruleId":"195","severity":1,"message":"226","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":18},{"ruleId":"235","severity":1,"message":"243","line":30,"column":9,"nodeType":"237","messageId":"238","endLine":30,"endColumn":21},{"ruleId":"195","severity":1,"message":"244","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"244","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'AuthContext' is defined but never used.","'motion' is defined but never used.","'jwt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["247"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'axios' is defined but never used.","'Axios' is defined but never used.",["245"],["246"],"'AuthenticationContext' is defined but never used.","'BOOKMARK_POST' is defined but never used.","'useSelector' is defined but never used.","'deletePost' is assigned a value but never used.","'UPDATE_FOLLOW_DATA' is defined but never used.","'theme' is assigned a value but never used.","'followData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["248"],"'MY_POST_URL' is defined but never used.","'MY_BOOKMARKS_URL' is defined but never used.","'makeStyles' is defined but never used.","'withStyles' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["249"],"'LOGOUT' is defined but never used.","'Box' is defined but never used.","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'top' is assigned a value but never used.","'left' is assigned a value but never used.","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","Duplicate key 'marginBottom'.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [navigate]",{"range":"256","text":"257"},"Update the dependencies array to be: [userid]",{"range":"258","text":"259"},"Update the dependencies array to be: [dispatch]",{"range":"260","text":"261"},[986,1015],"[navigate]",[2120,2122],"[userid]",[3287,3289],"[dispatch]"]