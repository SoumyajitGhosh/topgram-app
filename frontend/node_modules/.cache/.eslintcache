[{"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/index.js":"1","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/App.js":"2","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js":"3","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.state.js":"4","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/ResetPassword.jsx":"5","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/CreatePost.jsx":"6","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/NewPassword.jsx":"7","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/ProtectedRoute.js":"8","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.context.js":"9","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.reducer.js":"10","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Home.jsx":"11","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Login.jsx":"12","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Signup.jsx":"13","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/UserProfile.jsx":"14","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Profile.jsx":"15","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/SubscribePosts.jsx":"16","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/config/constants.js":"17","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/utils/regex.js":"18","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/types.jsx":"19","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Copyright.jsx":"20","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Navbar.jsx":"21","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/VerticalTabs.jsx":"22","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/theme/index.jsx":"23"},{"size":628,"mtime":1682510168166,"results":"24","hashOfConfig":"25"},{"size":278,"mtime":1682445872963,"results":"26","hashOfConfig":"25"},{"size":2571,"mtime":1682446203138,"results":"27","hashOfConfig":"25"},{"size":381,"mtime":1677315730382,"results":"28","hashOfConfig":"25"},{"size":3786,"mtime":1682589677305,"results":"29","hashOfConfig":"25"},{"size":6847,"mtime":1682581555588,"results":"30","hashOfConfig":"25"},{"size":4665,"mtime":1682589408581,"results":"31","hashOfConfig":"25"},{"size":479,"mtime":1682253607801,"results":"32","hashOfConfig":"25"},{"size":133,"mtime":1677315730382,"results":"33","hashOfConfig":"25"},{"size":636,"mtime":1677315730382,"results":"34","hashOfConfig":"25"},{"size":14472,"mtime":1682253434445,"results":"35","hashOfConfig":"25"},{"size":4503,"mtime":1682863964760,"results":"36","hashOfConfig":"25"},{"size":4935,"mtime":1682585627524,"results":"37","hashOfConfig":"25"},{"size":7210,"mtime":1682253394840,"results":"38","hashOfConfig":"25"},{"size":10616,"mtime":1682253382697,"results":"39","hashOfConfig":"25"},{"size":12549,"mtime":1682253391810,"results":"40","hashOfConfig":"25"},{"size":1226,"mtime":1682238243068,"results":"41","hashOfConfig":"25"},{"size":266,"mtime":1682589233920,"results":"42","hashOfConfig":"25"},{"size":184,"mtime":1682253943952,"results":"43","hashOfConfig":"25"},{"size":502,"mtime":1682270898087,"results":"44","hashOfConfig":"25"},{"size":14134,"mtime":1682871463951,"results":"45","hashOfConfig":"25"},{"size":5927,"mtime":1682253346819,"results":"46","hashOfConfig":"25"},{"size":2665,"mtime":1682869598315,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1mblzg6",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/index.js",[],["102","103"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/App.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js",["104","105","106","107","108","109"],"import React, { useEffect, useContext } from \"react\";\nimport { Routes, Route, useRoutes, useLocation } from 'react-router-dom';\n\nimport AuthContext from \"../contexts/auth/Auth.context\";\n// import ProtectedRoute from \"./ProtectedRoute\";\n\n// different routes\nimport Home from \"../screens/Home\";\nimport Login from \"../screens/Login\";\nimport Signup from \"../screens/Signup\";\nimport CreatePost from \"../screens/CreatePost.jsx\";\nimport Profile from \"../screens/Profile\";\nimport UserProfile from \"../screens/UserProfile\";\nimport SubscribePost from \"../screens/SubscribePosts\";\nimport Reset from \"../screens/ResetPassword.jsx\";\nimport NewPass from \"../screens/NewPassword.jsx\";\nimport {AnimatePresence, motion} from \"framer-motion/dist/framer-motion\";\n\nconst Routing = () => {\n\t// const { state } = useContext(AuthContext);\n\n\t// check if we are already authenticated\n\t// useEffect(() => {\n\t// \tstate.isAuthenticated ? <Redirect to=\"/\" /> : <Redirect to=\"/login\" />;\n\t// });\n\n\tconst element = useRoutes([\n\t\t{\n\t\t  path: \"/signup\",\n\t\t  element: <Signup />\n\t\t},\n\t\t{\n\t\t  path: \"/login\",\n\t\t  element: <Login />\n\t\t},\n\t\t{\n\t\t  path: \"/reset\",\n\t\t  element: <Reset />\n\t\t},\n\t\t{\n\t\t  path: \"/reset/:token\",\n\t\t  element: <NewPass />\n\t\t},\n\t\t{\n\t\t  path: \"/\",\n\t\t  element: <SubscribePost />\n\t\t},\n\t\t{\n\t\t  path: \"/explore\",\n\t\t  element: <Home />\n\t\t},\n\t\t{\n\t\t  path: \"/create\",\n\t\t  element: <CreatePost />\n\t\t},\n\t\t{\n\t\t  path: \"/profile\",\n\t\t  element: <Profile />\n\t\t},\n\t\t{\n\t\t  path: \"/profile/:userid\",\n\t\t  element: <UserProfile />\n\t\t}\n\t  ]);\n\n\t  const location = useLocation();\n\n\t\tif (!element) return null;\n\n\treturn (\n\t\t\t// <Switch>\n\t\t\t// \t{/* Public routes */}\n\t\t\t// \t<Route exact path=\"/login\" component={Login} />\n\t\t\t// \t<Route exact path=\"/signup\" component={Signup} />\n\t\t\t// \t<Route exact path=\"/reset\" component={Reset} />\n\t\t\t// \t<Route exact path=\"/reset/:token\" component={NewPass} />\n\n\t\t\t// \t{/* Separate the protected routes from public ones */}\n\t\t\t// \t<ProtectedRoute exact path=\"/\" component={SubscribePost} />\n\t\t\t// \t<ProtectedRoute exact path=\"/explore\" component={Home} />\n\t\t\t// \t<ProtectedRoute exact path=\"/create\" component={CreatePost} />\n\t\t\t// \t<ProtectedRoute exact path=\"/profile\" component={Profile} />\n\t\t\t// \t<ProtectedRoute exact path=\"/profile/:userid\" component={UserProfile} />\n\n\t\t\t// \t{/* in case we want to handle the 404 page not found */}\n\t\t\t// \t{/* <Route component={NotFound} /> */}\n\t\t\t// </Switch>\n\t\t\t<>\n\t\t\t\t<AnimatePresence mode=\"wait\">\n\t\t\t    \t{React.cloneElement(element, { key: location.pathname })}\n\t\t\t\t</AnimatePresence>\n\t\t\t</>\n\t);\n};\n\nexport default Routing;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.state.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/ResetPassword.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/CreatePost.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/NewPassword.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/ProtectedRoute.js",[],["110","111"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.context.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/auth/Auth.reducer.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Home.jsx",["112","113"],"/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport { BOOKMARK_POST } from \"../contexts/types.jsx\";\nimport Navbar from \"../components/Navbar\";\nimport { config as axiosConfig, ALL_POST_URL } from \"../config/constants\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Avatar from \"@mui/material/Avatar\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\n// Material-UI Icons\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\nimport BookmarkIcon from \"@mui/icons-material/Bookmark\";\nimport BookmarkBorderIcon from \"@mui/icons-material/BookmarkBorder\";\n\n// General style\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: 500,\n\t\tmargin: \"20px auto\",\n\t\t\"& .MuiTextField-root\": {\n\t\t\twidth: \"100%\",\n\t\t},\n\t\t\"& .MuiOutlinedInput-multiline\": {\n\t\t\tpaddingTop: \"8px\",\n\t\t\tpaddingBottom: \"8px\",\n\t\t\tmarginTop: \"5px\",\n\t\t\tmarginLeft: \"5px\",\n\t\t\tmarginRight: \"5px\",\n\t\t},\n\t\t\"& .MuiCardContent-root:last-child\": {\n\t\t\tpaddingBottom: \"10px\",\n\t\t},\n\t\t\"& .MuiDivider-middle\": {\n\t\t\tmarginBottom: \"4px\",\n\t\t},\n\t\t\"& .MuiListItem-root\": {\n\t\t\tpadding: \"0px 16px\",\n\t\t},\n\t\t\"& .MuiCardContent-root\": {\n\t\t\tpaddingTop: \"0px\",\n\t\t\tpaddingBottom: \"5px\",\n\t\t},\n\t\t\"& .MuiIconButton-root:focus\": {\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0)\",\n\t\t},\n\t},\n\theader: {\n\t\tpadding: \"10px\",\n\t},\n\tmedia: {\n\t\t//height: 0,\n\t\tpaddingTop: \"56.25%\", // 16:9\n\t\theight: \"max-content\",\n\t},\n\tlikeBar: {\n\t\theight: \"25px\",\n\t\tpaddingTop: \"0px\",\n\t\tmarginTop: \"8px\",\n\t\tmarginLeft: \"2px\",\n\t\tpaddingLeft: \"0px\",\n\t\tpaddingBottom: \"4px\",\n\t},\n\tcomments: {\n\t\tdisplay: \"flex\",\n\t\tpaddingTop: \"0px\",\n\t\tpaddingLeft: \"12px\",\n\t\tpaddingRight: \"0px\",\n\t},\n\tcomment_item_see_more: {\n\t\twidth: \"35%\",\n\t\tcursor: \"pointer\",\n\t},\n\tcomments_icon_see_more: {\n\t\theight: \"17px\",\n\t\twidth: \"17px\",\n\t\tpaddingTop: \"4px\",\n\t\tpaddingBottom: \"3px\",\n\t},\n\tcomments_icon: {\n\t\theight: \"30px\",\n\t\tpaddingLeft: \"0px\",\n\t\tpaddingTop: \"13px\",\n\t\tpaddingRight: \"8px\",\n\t\tpaddingBottom: \"0px\",\n\t},\n\tinline: {\n\t\tdisplay: \"inline\",\n\t\tfontWeight: \"600\",\n\t},\n\tavatar: {\n\t\theight: \"40px\",\n\t},\n\tlinks: {\n\t\ttextDecoration: \"none\",\n\t},\n}));\n\nconst Home = () => {\n\tconst classes = useStyles();\n\tconst { state, dispatch } = useContext(AuthenticationContext);\n\n\tconst [data, setData] = useState([]);\n\tconst [showSend, setShowSend] = useState(false);\n\tconst [comment, setComment] = useState(\"\");\n\n\tconst config = axiosConfig(localStorage.getItem(\"jwt\"));\n\n\tuseEffect(() => {\n\t\taxios.get(ALL_POST_URL, config).then((res) => {\n\t\t\tsetData(res.data.posts);\n\t\t});\n\t}, []);\n\n\tconst likePost = (id) => {\n\t\taxios.put(`http://localhost:5000/like`, { postId: id }, config)\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result.data._id === item._id) return result.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst unlikePost = (id) => {\n\t\taxios.put(`http://localhost:5000/Unlike`, { postId: id }, config)\n\t\t\t.then((res) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (res.data._id === item._id) return res.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst bookmark = (id) => {\n\t\taxios.put(`http://localhost:5000/bookmark-post`, { postId: id }, config)\n\t\t\t.then((result) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: BOOKMARK_POST,\n\t\t\t\t\tpayload: { Bookmarks: result.data.Bookmarks },\n\t\t\t\t});\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst removeBookmark = (id) => {\n\t\taxios.put(`http://localhost:5000/remove-bookmark`, { postId: id }, config)\n\t\t\t.then((result) => {\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: BOOKMARK_POST,\n\t\t\t\t\tpayload: { Bookmarks: result.data.Bookmarks },\n\t\t\t\t});\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst makeComment = (text, postId) => {\n\t\tsetComment(\"\");\n\t\taxios.put(`http://localhost:5000/comment`, { text, postId }, config)\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result.data._id === item._id) return result.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t\tsetComment(\"\");\n\t};\n\n\tconst deletePost = (postId) => {\n\t\taxios.delete(`http://localhost:5000/deletepost/${postId}`, config).then((res) => {\n\t\t\tconst newData = data.filter((item) => {\n\t\t\t\treturn item._id !== res.data;\n\t\t\t});\n\t\t\tsetData(newData);\n\t\t});\n\t};\n\n\treturn <>\n        <Navbar />\n        {data.map((item) => (\n            <div className=\"home\" key={item._id}>\n                <Card className={classes.root}>\n                    <CardHeader\n                        className={classes.header}\n                        avatar={\n                            <Avatar>\n                                <img\n                                    className={classes.avatar}\n                                    alt=\"\"\n                                    src={`data:${item.PhotoType};base64,${item.Photo}`}\n                                />\n                            </Avatar>\n                        }\n                        title={\n                            <Link\n                                className={classes.links}\n                                to={\n                                    item.PostedBy._id !== state._id\n                                        ? `/profile/${item.PostedBy._id}`\n                                        : \"/profile\"\n                                }\n                            >\n                                {item.PostedBy.Name}\n                            </Link>\n                        }\n                        subheader=\"September 14, 2016\"\n                    />\n\n                    <CardMedia\n                        className={classes.media}\n                        image={`data:${item.PhotoType};base64,${item.Photo}`}\n                        title=\"Paella dish\"\n                    />\n\n                    <CardActions className={classes.likeBar} disableSpacing>\n                        {item.Likes.includes(state._id) ? (\n                            <IconButton\n                                aria-label=\"Like\"\n                                color=\"secondary\"\n                                onClick={() => {\n                                    unlikePost(item._id);\n                                }}\n                                size=\"large\">\n                                <FavoriteIcon />\n                            </IconButton>\n                        ) : (\n                            <IconButton\n                                aria-label=\"Like\"\n                                onClick={() => {\n                                    likePost(item._id);\n                                }}\n                                size=\"large\">\n                                <FavoriteBorderIcon />\n                            </IconButton>\n                        )}\n                        <IconButton aria-label=\"comments\" size=\"large\">\n                            <ChatBubbleOutlineIcon />\n                        </IconButton>\n                        {state.Bookmarks.includes(item._id) ? (\n                            <IconButton\n                                aria-label=\"Remove Bookmark\"\n                                style={{ marginLeft: \"auto\", color: \"#e0d011\" }}\n                                onClick={() => {\n                                    removeBookmark(item._id);\n                                }}\n                                size=\"large\">\n                                <BookmarkIcon />\n                            </IconButton>\n                        ) : (\n                            <IconButton\n                                aria-label=\"Bookmark\"\n                                style={{ marginLeft: \"auto\" }}\n                                onClick={() => {\n                                    bookmark(item._id);\n                                }}\n                                size=\"large\">\n                                <BookmarkBorderIcon />\n                            </IconButton>\n                        )}\n                    </CardActions>\n\n                    <CardContent>\n                        <Typography variant=\"subtitle2\" display=\"block\" gutterBottom>\n                            {item.Likes.length} Likes\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {item.Body}\n                        </Typography>\n                    </CardContent>\n\n                    <Divider variant=\"middle\" />\n\n                    <List>\n                        {item.Comments.map((cmt) => {\n                            return (\n                                <ListItem\n                                    className={classes.comment_item}\n                                    alignItems=\"flex-start\"\n                                    key={cmt._id}\n                                >\n                                    <ListItemText\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    className={classes.inline}\n                                                    color=\"textPrimary\"\n                                                >\n                                                    <Link\n                                                        className={classes.links}\n                                                        to={\n                                                            cmt.PostedBy._id !== state._id\n                                                                ? `/profile/${cmt.PostedBy._id}`\n                                                                : \"/profile\"\n                                                        }\n                                                    >\n                                                        {cmt.PostedBy.Name}\n                                                    </Link>\n                                                </Typography>\n                                                {\" — \"}\n                                                {cmt.Text}\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                            );\n                        })}\n                        {item.Comments.length === 0 ? (\n                            <ListItem alignItems=\"flex-start\" style={{ left: \"38%\" }}>\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                                    No Comments yet\n                                </Typography>\n                            </ListItem>\n                        ) : null}\n                        {item.Comments.length > 3 && item.Comments.length !== 0 ? (\n                            <ListItem\n                                alignItems=\"flex-start\"\n                                className={classes.comment_item_see_more}\n                            >\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                                    See all {item.Comments.length} comments\n                                </Typography>\n                                <DoubleArrowIcon className={classes.comments_icon_see_more} />\n                            </ListItem>\n                        ) : null}\n                    </List>\n\n                    <Divider variant=\"middle\" />\n\n                    <CardContent className={classes.comments}>\n                        <Avatar>\n                            <img\n                                className={classes.avatar}\n                                alt=\"\"\n                                src=\"https://images.unsplash.com/photo-1537815749002-de6a533c64db?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                            />\n                        </Avatar>\n                        <TextField\n                            multiline\n                            rows={1}\n                            placeholder=\"Add your comment...\"\n                            variant=\"outlined\"\n                            value={comment}\n                            onChange={(event) => {\n                                event.preventDefault();\n                                setComment(event.target.value);\n                                setShowSend(true);\n                                if (event.target.value === \"\") setShowSend(false);\n                            }}\n                        />\n                        <IconButton\n                            aria-label=\"add to favorites\"\n                            className={classes.comments_icon}\n                            disabled={!showSend}\n                            onClick={() => makeComment(comment, item._id)}\n                            size=\"large\">\n                            <SendIcon />\n                        </IconButton>\n                    </CardContent>\n                </Card>\n            </div>\n        ))}\n    </>;\n};\n\nexport default Home;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Login.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Signup.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/UserProfile.jsx",["114"],"/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport { UPDATE_FOLLOW_DATA } from \"../contexts/types\";\nimport { config as axiosConfig } from \"../config/constants\";\n// Material-UI Components\nimport { makeStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Icon from \"@mui/material/Icon\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\n// General Styles\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: 935,\n\t\tmargin: \"auto\",\n\t\tpadding: \"60px 20px 0\",\n\t},\n\tavatar_container: { margin: \"auto\" },\n\tavatar: { width: 152, height: 152 },\n\teditButton: {\n\t\tmarginLeft: 20,\n\t\tbackgroundColor: \"paleturquoise\",\n\t},\n\tsettings: {},\n}));\n\nfunction TabPanel(props) {\n\tconst { children, value, index, ...other } = props;\n\treturn (\n\t\t<div role=\"tabpanel\" hidden={value !== index} {...other}>\n\t\t\t{value === index && <Box p={3}>{children}</Box>}\n\t\t</div>\n\t);\n}\n\nconst UserProfilePage = () => {\n\tconst classes = useStyles();\n\tconst [value, setValue] = useState(\"Posts\"); // to switch between different tabs\n\tconst { state, dispatch } = useContext(AuthenticationContext);\n\tconst { userid } = useParams();\n\tconst [data, setData] = useState(null);\n\tconst [showFollow, setShowFollow] = useState(state ? !state.Following.includes(userid) : null);\n\n\tconst config = axiosConfig(localStorage.getItem(\"jwt\"));\n\n\tuseEffect(() => {\n\t\taxios.get(`http://localhost:5000/user/${userid}`, config).then((res) => {\n\t\t\tsetData(res.data);\n\t\t});\n\t}, []);\n\n\tconst followUser = () => {\n\t\taxios.put(`http://localhost:5000/follow`, { followId: userid }, config).then((result) => {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_FOLLOW_DATA,\n\t\t\t\tpayload: { Followers: result.data.Followers, Following: result.data.Following },\n\t\t\t});\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t\tsetData((prevState) => {\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t...prevState.user,\n\t\t\t\t\t\tFollowers: [...prevState.user.Followers, result.data._id],\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetShowFollow(false);\n\t\t});\n\t};\n\n\tconst unfollowUser = () => {\n\t\taxios.put(`http://localhost:5000/unfollow`, { unfollowId: userid }, config).then((result) => {\n\t\t\tdispatch({\n\t\t\t\ttype: UPDATE_FOLLOW_DATA,\n\t\t\t\tpayload: { Followers: result.data.Followers, Following: result.data.Following },\n\t\t\t});\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(result.data));\n\t\t\tsetData((prevState) => {\n\t\t\t\tconst newFollower = prevState.user.Followers.filter((item) => item !== result.data._id);\n\t\t\t\treturn {\n\t\t\t\t\t...prevState,\n\t\t\t\t\tuser: {\n\t\t\t\t\t\t...prevState.user,\n\t\t\t\t\t\tFollowers: newFollower,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetShowFollow(true);\n\t\t});\n\t};\n\n\treturn (\n        <React.Fragment>\n\t\t\t<CssBaseline />\n\t\t\t{data ? (\n\t\t\t\t<Box component=\"main\" className={classes.root}>\n\t\t\t\t\t<Box mb=\"44px\">\n\t\t\t\t\t\t<Grid container>\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.avatar_container}>\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\tclassName={classes.avatar}\n\t\t\t\t\t\t\t\t\tstyle={{ margin: \"auto\" }}\n\t\t\t\t\t\t\t\t\tsrc=\"https://cc-media-foxit.fichub.com/image/fox-it-mondofox/e8c0f288-781d-4d0b-98ad-fd169782b53b/scene-sottacqua-per-i-sequel-di-avatar-maxw-654.jpg\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={8}>\n\t\t\t\t\t\t\t\t<Box clone mb=\"20px\">\n\t\t\t\t\t\t\t\t\t<Grid container alignItems=\"center\">\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t\t\t\t\t{data.user ? data.user.Name : \"Is Loading ...\"}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t{showFollow ? (\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.editButton}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => followUser()}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tFollow\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classes.editButton}\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => unfollowUser()}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tUnFollow\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t<div className={classes.settings}>\n\t\t\t\t\t\t\t\t\t\t\t<IconButton component={Link} to=\"#\" size=\"large\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon>settings</Icon>\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Box mb=\"20px\">\n\t\t\t\t\t\t\t\t\t<Grid container spacing={4}>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{data.posts\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? data.posts.length\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"IsLoading...\"}\n\t\t\t\t\t\t\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\tposts\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{data.user\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? data.user.Followers.length\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"IsLoading...\"}\n\t\t\t\t\t\t\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\tfollowers\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">\n\t\t\t\t\t\t\t\t\t\t\t\t<b>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{data.user\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? data.user.Following.length\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"IsLoading...\"}\n\t\t\t\t\t\t\t\t\t\t\t\t</b>{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\tfollowing\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Siriwat Kunaporn</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">Bangkok Christian College</Typography>\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\">CU intania 96.</Typography>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Tabs\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tcentered\n\t\t\t\t\t\tonChange={(event, value) => {\n\t\t\t\t\t\t\tsetValue(value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tTabIndicatorProps={{\n\t\t\t\t\t\t\tstyle: { transform: \"translateY(-70px)\", backgroundColor: \"#262626\" },\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Tab label=\"Posts\" value=\"Posts\" icon={<Icon>grid_on_outlined</Icon>} />\n\t\t\t\t\t\t<Tab label=\"IGTV\" value=\"IGTV\" icon={<Icon>live_tv</Icon>} disabled />\n\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\tlabel=\"Tagged\"\n\t\t\t\t\t\t\tvalue=\"Tagged\"\n\t\t\t\t\t\t\ticon={<Icon>local_offer_outlined</Icon>}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Tabs>\n\t\t\t\t\t<TabPanel value={value} index=\"Posts\">\n\t\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t\t{data.posts\n\t\t\t\t\t\t\t\t? data.posts.map((item) => (\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={4} key={item.id}>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"post\"\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\", height: \"100%\" }}\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={`data:${item.PhotoType};base64,${item.Photo}`}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t\t: \"Is Loading ...\"}\n\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.post_box}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\talt=\"post\"\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\tsrc=\"https://via.placeholder.com/500/f5f5f5\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item xs={4} className={classes.post_box}>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\talt=\"post\"\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t\t\t\t\t\tsrc=\"https://via.placeholder.com/500/f5f5f5\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t</Box>\n\t\t\t) : (\n\t\t\t\t\"Is Loading ...\"\n\t\t\t)}\n\t\t</React.Fragment>\n    );\n};\n\nexport default UserProfilePage;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Profile.jsx",["115"],"/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport VerticalTabs from \"../components/VerticalTabs.jsx\";\nimport Navbar from \"../components/Navbar\";\nimport { config as axiosConfig, MY_POST_URL, MY_BOOKMARKS_URL } from \"../config/constants\";\n\n// Material-UI Components\nimport { makeStyles, withStyles } from \"@mui/styles\";\nimport Button from \"@mui/material/Button\";\nimport Grid from \"@mui/material/Grid\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Icon from \"@mui/material/Icon\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport ImageList from \"@mui/material/ImageList\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport ImageListItemBar from \"@mui/material/ImageListItemBar\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport MuiDialogContent from \"@mui/material/DialogContent\";\nimport MuiDialogActions from \"@mui/material/DialogActions\";\n\n// Material-UI Icons\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\n// General styles\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: 935,\n\t\tmargin: \"auto\",\n\t\tpadding: \"60px 20px 0\",\n\t},\n\tdialogContainer: {\n\t\t\"& .MuiDialog-paperWidthSm\": {\n\t\t\twidth: \"80%\",\n\t\t\tmaxWidth: \"900px\",\n\t\t},\n\t},\n\tdialogTitle: {\n\t\tmargin: \"0px\",\n\t\tpadding: \"16px\",\n\t},\n\tavatar_container: { margin: \"auto\" },\n\tavatar: { width: 152, height: 152 },\n\teditButton: {\n\t\tmarginLeft: 20,\n\t},\n\tsettings: {},\n\tposts: {\n\t\twidth: \"270px\",\n\t\theight: \"230px\",\n\t},\n\tposts_img: {\n\t\twidth: \"100%\",\n\t\theight: \"100%\",\n\t},\n\ticon: {\n\t\tcolor: \"rgba(255, 255, 255, 0.54)\",\n\t},\n\tcloseButton: {\n\t\tposition: \"absolute\",\n\t\tright: \"8px\",\n\t\ttop: \"8px\",\n\t\tcolor: \"#9e9e9e\",\n\t},\n}));\n\n// EditProfile dialog content style\nconst DialogContent = withStyles((theme) => ({\n\troot: {\n\t\tpadding: \"16px\",\n\t},\n}))(MuiDialogContent);\n\n// EditProfile dialog actions style\nconst DialogActions = withStyles((theme) => ({\n\troot: {\n\t\tmargin: \"0px\",\n\t\tpadding: \"2px\",\n\t},\n}))(MuiDialogActions);\n\n// Tabs data container\nconst TabPanel = (props) => {\n\tconst { children, value, index, ...other } = props;\n\treturn (\n\t\t<div role=\"tabpanel\" hidden={value !== index} {...other}>\n\t\t\t{value === index && <Box p={3}>{children}</Box>}\n\t\t</div>\n\t);\n};\n\nconst ProfilePage = () => {\n\tconst classes = useStyles();\n\tconst { state } = useContext(AuthenticationContext);\n\tconst [data, setData] = useState([]);\n\tconst [bookmarks, setBookmarks] = useState([]);\n\tconst [value, setValue] = useState(\"Posts\");\n\n\tconst config = axiosConfig(localStorage.getItem(\"jwt\"));\n\n\tuseEffect(() => {\n\t\taxios.get(MY_POST_URL, config).then((res) => {\n\t\t\tsetData(res.data.posts);\n\t\t});\n\t\taxios.get(MY_BOOKMARKS_URL, config).then((res) => {\n\t\t\tsetBookmarks(res.data.bookmark);\n\t\t});\n\t}, []);\n\n\t//Toggle the EditProfile Button to show the Dialog\n\tconst [openEdit, setOpenEdit] = useState(false);\n\n\tconst handleEditClickOpen = () => {\n\t\tsetOpenEdit(true);\n\t};\n\tconst handleEditClose = () => {\n\t\tsetOpenEdit(false);\n\t};\n\n\treturn <>\n        <Navbar />\n        <CssBaseline />\n        <Box component=\"main\" className={classes.root}>\n            {/* User Profile Data Goes Here */}\n            <Box mb=\"44px\">\n                <Grid container>\n                    <Grid item xs={4} className={classes.avatar_container}>\n                        <Avatar\n                            className={classes.avatar}\n                            style={{ margin: \"auto\" }}\n                            src=\"https://cc-media-foxit.fichub.com/image/fox-it-mondofox/e8c0f288-781d-4d0b-98ad-fd169782b53b/scene-sottacqua-per-i-sequel-di-avatar-maxw-654.jpg\"\n                        />\n                    </Grid>\n                    <Grid item xs={8}>\n                        <Box clone mb=\"20px\">\n                            <Grid container alignItems=\"center\">\n                                <Typography variant=\"h5\">\n                                    {state ? state.user.Name : \"IsLoading ...\"}\n                                </Typography>\n                                <Button\n                                    className={classes.editButton}\n                                    variant=\"outlined\"\n                                    onClick={handleEditClickOpen}\n                                >\n                                    Edit Profile\n                                </Button>\n                                <div className={classes.settings}>\n                                    <IconButton component={Link} to=\"#\" size=\"large\">\n                                        <Icon>settings</Icon>\n                                    </IconButton>\n                                </div>\n                            </Grid>\n                        </Box>\n                        <Box mb=\"20px\">\n                            <Grid container spacing={4}>\n                                <Grid item>\n                                    <Typography variant=\"subtitle1\">\n                                        <b>{data.length}</b> posts\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"subtitle1\">\n                                        <b>\n                                            {state\n                                                ? state.user.Followers.length\n                                                : \"IsLoading ...\"}\n                                        </b>{\" \"}\n                                        followers\n                                    </Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Typography variant=\"subtitle1\">\n                                        <b>\n                                            {state\n                                                ? state.user.Following.length\n                                                : \"IsLoading ...\"}\n                                        </b>{\" \"}\n                                        following\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                        <Typography variant=\"subtitle1\">Siriwat Kunaporn</Typography>\n                        <Typography variant=\"subtitle1\">Bangkok Christian College</Typography>\n                        <Typography variant=\"subtitle1\">CU intania 96.</Typography>\n                    </Grid>\n                </Grid>\n            </Box>\n            {/* Tabs Goes Reference Here */}\n            <Tabs\n                value={value}\n                centered\n                onChange={(event, value) => {\n                    setValue(value);\n                }}\n                TabIndicatorProps={{\n                    style: {\n                        transform: \"translateY(-70px)\",\n                        backgroundColor: \"#262626\",\n                    },\n                }}\n            >\n                <Tab label=\"Posts\" value=\"Posts\" icon={<Icon>grid_on_outlined</Icon>} />\n                <Tab label=\"IGTV\" value=\"IGTV\" icon={<Icon>live_tv</Icon>} disabled />\n                <Tab label=\"Saved\" value=\"Saved\" icon={<Icon>bookmark_border_outlined</Icon>} />\n                <Tab\n                    label=\"Tagged\"\n                    value=\"Tagged\"\n                    icon={<Icon>local_offer_outlined</Icon>}\n                    disabled\n                />\n            </Tabs>\n            {/* Tabs Data Goes Here */}\n            <TabPanel value={value} index=\"Posts\">\n                <Grid container spacing={2}>\n                    {data.map((item) => (\n                        <Grid item xs={4} key={item.id} className={classes.posts}>\n                            <img\n                                className={classes.posts_img}\n                                alt=\"post\"\n                                src={`data:${item.photoType};base64,${item.photo}`}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n            </TabPanel>\n            <TabPanel value={value} index=\"Saved\">\n                <ImageList cellHeight={230} cols={3} spacing={15}>\n                    {bookmarks.map((item) => (\n                        <ImageListItem key={item._id}>\n                            <img\n                                src={`data:${item.PhotoType};base64,${item.Photo}`}\n                                alt={item.Title}\n                            />\n                            <ImageListItemBar\n                                title={item.Title}\n                                subtitle={<span>By : {item.PostedBy.Name}</span>}\n                                actionIcon={\n                                    <IconButton aria-label={`info about`} className={classes.icon} size=\"large\">\n                                        <DeleteIcon />\n                                    </IconButton>\n                                }\n                            />\n                        </ImageListItem>\n                    ))}\n                </ImageList>\n            </TabPanel>\n        </Box>\n        {/* EditProfile Dialog */}\n        <Dialog onClose={handleEditClose} open={openEdit} className={classes.dialogContainer}>\n            <DialogTitle className={classes.dialogTitle}>\n                <Typography variant=\"h6\">Profile settings</Typography>\n                <IconButton\n                    aria-label=\"close\"\n                    className={classes.closeButton}\n                    onClick={handleEditClose}\n                    size=\"large\">\n                    <CloseIcon />\n                </IconButton>\n            </DialogTitle>\n            <DialogContent dividers>\n                <VerticalTabs />\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleEditClose} color=\"primary\">\n                    Save changes\n                </Button>\n            </DialogActions>\n        </Dialog>\n    </>;\n};\n\nexport default ProfilePage;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/SubscribePosts.jsx",["116","117"],"/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport AuthenticationContext from \"../contexts/auth/Auth.context\";\nimport { config as axiosConfig, SUB_POST_URL } from \"../config/constants\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Avatar from \"@mui/material/Avatar\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Divider from \"@mui/material/Divider\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\nimport ChatBubbleOutlineIcon from \"@mui/icons-material/ChatBubbleOutline\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport DoubleArrowIcon from \"@mui/icons-material/DoubleArrow\";\nimport Navbar from \"../components/Navbar\";\n\n// General styles\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: 500,\n\t\tmargin: \"20px auto\",\n\t\t\"& .MuiTextField-root\": {\n\t\t\twidth: \"100%\",\n\t\t},\n\t\t\"& .MuiOutlinedInput-multiline\": {\n\t\t\tpaddingTop: \"8px\",\n\t\t\tpaddingBottom: \"8px\",\n\t\t\tmarginTop: \"5px\",\n\t\t\tmarginLeft: \"5px\",\n\t\t\tmarginRight: \"5px\",\n\t\t},\n\t\t\"& .MuiCardContent-root:last-child\": {\n\t\t\tpaddingBottom: \"10px\",\n\t\t},\n\t\t\"& .MuiDivider-middle\": {\n\t\t\tmarginBottom: \"4px\",\n\t\t},\n\t\t\"& .MuiListItem-root\": {\n\t\t\tpadding: \"0px 16px\",\n\t\t},\n\t\t\"& .MuiCardContent-root\": {\n\t\t\tpaddingTop: \"0px\",\n\t\t\tpaddingBottom: \"5px\",\n\t\t},\n\t\t\"& .MuiIconButton-root:focus\": {\n\t\t\tbackgroundColor: \"rgba(0, 0, 0, 0)\",\n\t\t},\n\t},\n\theader: {\n\t\tpadding: \"10px\",\n\t},\n\tmedia: {\n\t\t//height: 0,\n\t\tpaddingTop: \"56.25%\", // 16:9\n\t\theight: \"max-content\",\n\t},\n\tlikeBar: {\n\t\theight: \"25px\",\n\t\tpaddingTop: \"0px\",\n\t\tmarginTop: \"8px\",\n\t\tmarginLeft: \"2px\",\n\t\tpaddingLeft: \"0px\",\n\t\tpaddingBottom: \"4px\",\n\t},\n\tcomments: {\n\t\tdisplay: \"flex\",\n\t\tpaddingTop: \"0px\",\n\t\tpaddingLeft: \"12px\",\n\t\tpaddingRight: \"0px\",\n\t},\n\tcomment_item_see_more: {\n\t\twidth: \"35%\",\n\t\tcursor: \"pointer\",\n\t},\n\tcomments_icon_see_more: {\n\t\theight: \"17px\",\n\t\twidth: \"17px\",\n\t\tpaddingTop: \"4px\",\n\t\tpaddingBottom: \"3px\",\n\t},\n\tcomments_icon: {\n\t\theight: \"30px\",\n\t\tpaddingLeft: \"0px\",\n\t\tpaddingTop: \"13px\",\n\t\tpaddingRight: \"8px\",\n\t\tpaddingBottom: \"0px\",\n\t},\n\tinline: {\n\t\tdisplay: \"inline\",\n\t\tfontWeight: \"600\",\n\t},\n\tavatar: {\n\t\theight: \"40px\",\n\t},\n\tlinks: {\n\t\ttextDecoration: \"none\",\n\t},\n}));\n\nconst SubscribePost = () => {\n\tconst classes = useStyles();\n\tconst { state } = useContext(AuthenticationContext);\n\n\tconst [data, setData] = useState([]);\n\tconst [showSend, setShowSend] = useState(false);\n\tconst [comment, setComment] = useState(\"\");\n\n\tconst config = axiosConfig(localStorage.getItem(\"jwt\"));\n\n\tuseEffect(() => {\n\t\taxios.get(SUB_POST_URL, config).then((res) => {\n\t\t\tsetData(res.data.posts);\n\t\t});\n\t}, []);\n\n\tconst likePost = (id) => {\n\t\taxios.put(`http://localhost:5000/like`, { postId: id }, config)\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result.data._id === item._id) return result.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst unlikePost = (id) => {\n\t\taxios.put(`http://localhost:5000/Unlike`, { postId: id }, config)\n\t\t\t.then((res) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (res.data._id === item._id) return res.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst makeComment = (text, postId) => {\n\t\tsetComment(\"\");\n\t\taxios.put(`http://localhost:5000/comment`, { text, postId }, config)\n\t\t\t.then((result) => {\n\t\t\t\tconst newData = data.map((item) => {\n\t\t\t\t\tif (result.data._id === item._id) return result.data;\n\t\t\t\t\telse return item;\n\t\t\t\t});\n\t\t\t\tsetData(newData);\n\t\t\t})\n\t\t\t.catch((err) => console.log(err));\n\t};\n\n\tconst deletePost = (postId) => {\n\t\taxios.delete(`http://localhost:5000/deletepost/${postId}`, config).then((res) => {\n\t\t\tconst newData = data.filter((item) => {\n\t\t\t\treturn item._id !== res.data;\n\t\t\t});\n\t\t\tsetData(newData);\n\t\t});\n\t};\n\n\treturn <>\n        <Navbar />\n        {data.map((item) => (\n            <div className=\"home\" key={item._id}>\n                <Card className={classes.root}>\n                    <CardHeader\n                        className={classes.header}\n                        avatar={\n                            <Avatar>\n                                <img\n                                    className={classes.avatar}\n                                    alt=\"\"\n                                    src={`data:${item.PhotoType};base64,${item.Photo}`}\n                                />\n                            </Avatar>\n                        }\n                        title={\n                            <Link\n                                className={classes.links}\n                                to={\n                                    item.PostedBy._id !== state._id\n                                        ? `/profile/${item.PostedBy._id}`\n                                        : \"/profile\"\n                                }\n                            >\n                                {item.PostedBy.Name}\n                            </Link>\n                        }\n                        subheader=\"September 14, 2016\"\n                    />\n\n                    <CardMedia\n                        className={classes.media}\n                        image={`data:${item.PhotoType};base64,${item.Photo}`}\n                        title=\"Paella dish\"\n                    />\n\n                    <CardActions className={classes.likeBar} disableSpacing>\n                        {item.Likes.includes(state._id) ? (\n                            <IconButton\n                                aria-label=\"Like\"\n                                color=\"secondary\"\n                                onClick={() => {\n                                    unlikePost(item._id);\n                                }}\n                                size=\"large\">\n                                <FavoriteIcon />\n                            </IconButton>\n                        ) : (\n                            <IconButton\n                                aria-label=\"Like\"\n                                onClick={() => {\n                                    likePost(item._id);\n                                }}\n                                size=\"large\">\n                                <FavoriteBorderIcon />\n                            </IconButton>\n                        )}\n                        <IconButton aria-label=\"comments\" size=\"large\">\n                            <ChatBubbleOutlineIcon />\n                        </IconButton>\n                    </CardActions>\n\n                    <CardContent>\n                        <Typography variant=\"subtitle2\" display=\"block\" gutterBottom>\n                            {item.Likes.length} Likes\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {item.Body}\n                        </Typography>\n                    </CardContent>\n\n                    <Divider variant=\"middle\" />\n\n                    <List>\n                        {item.Comments.map((cmt) => {\n                            return (\n                                <ListItem\n                                    className={classes.comment_item}\n                                    alignItems=\"flex-start\"\n                                    key={cmt._id}\n                                >\n                                    <ListItemText\n                                        secondary={\n                                            <React.Fragment>\n                                                <Typography\n                                                    component=\"span\"\n                                                    variant=\"body2\"\n                                                    className={classes.inline}\n                                                    color=\"textPrimary\"\n                                                >\n                                                    <Link\n                                                        className={classes.links}\n                                                        to={\n                                                            cmt.PostedBy._id !== state._id\n                                                                ? `/profile/${cmt.PostedBy._id}`\n                                                                : \"/profile\"\n                                                        }\n                                                    >\n                                                        {cmt.PostedBy.Name}\n                                                    </Link>\n                                                </Typography>\n                                                {\" — \"}\n                                                {cmt.Text}\n                                            </React.Fragment>\n                                        }\n                                    />\n                                </ListItem>\n                            );\n                        })}\n                        {item.Comments.length === 0 ? (\n                            <ListItem alignItems=\"flex-start\" style={{ left: \"38%\" }}>\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                                    No Comments yet\n                                </Typography>\n                            </ListItem>\n                        ) : null}\n                        {item.Comments.length > 3 && item.Comments.length !== 0 ? (\n                            <ListItem\n                                alignItems=\"flex-start\"\n                                className={classes.comment_item_see_more}\n                            >\n                                <Typography variant=\"caption\" display=\"block\" gutterBottom>\n                                    See all {item.Comments.length} comments\n                                </Typography>\n                                <DoubleArrowIcon className={classes.comments_icon_see_more} />\n                            </ListItem>\n                        ) : null}\n                    </List>\n\n                    <Divider variant=\"middle\" />\n\n                    <CardContent className={classes.comments}>\n                        <Avatar>\n                            <img\n                                className={classes.avatar}\n                                alt=\"\"\n                                src=\"https://images.unsplash.com/photo-1537815749002-de6a533c64db?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\"\n                            />\n                        </Avatar>\n                        <TextField\n                            multiline\n                            rows={1}\n                            placeholder=\"Add your comment...\"\n                            variant=\"outlined\"\n                            value={comment}\n                            onChange={(event) => {\n                                event.preventDefault();\n                                setComment(event.target.value);\n                                setShowSend(true);\n                                if (event.target.value === \"\") setShowSend(false);\n                            }}\n                        />\n                        <IconButton\n                            aria-label=\"add to favorites\"\n                            className={classes.comments_icon}\n                            disabled={!showSend}\n                            onClick={() => makeComment(comment, item._id)}\n                            size=\"large\">\n                            <SendIcon />\n                        </IconButton>\n                    </CardContent>\n                </Card>\n            </div>\n        ))}\n    </>;\n};\n\nexport default SubscribePost;\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/config/constants.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/utils/regex.js",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/contexts/types.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Copyright.jsx",[],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/Navbar.jsx",["118","119","120","121","122","123"],"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/components/VerticalTabs.jsx",["124"],"/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport withStyles from '@mui/styles/withStyles';\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Divider from \"@mui/material/Divider\";\n\nconst TabPanel = (props) => {\n\tconst { children, value, index, ...other } = props;\n\treturn (\n\t\t<div\n\t\t\tstyle={{ width: 430 }}\n\t\t\trole=\"tabpanel\"\n\t\t\thidden={value !== index}\n\t\t\tid={`vertical-tabpanel-${index}`}\n\t\t\taria-labelledby={`vertical-tab-${index}`}\n\t\t\t{...other}\n\t\t>\n\t\t\t{value === index && (\n\t\t\t\t<Box p={3}>\n\t\t\t\t\t<Typography>{children}</Typography>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nTabPanel.propTypes = {\n\tchildren: PropTypes.node,\n\tindex: PropTypes.any.isRequired,\n\tvalue: PropTypes.any.isRequired,\n};\n\nconst a11yProps = (index) => {\n\treturn {\n\t\tid: `vertical-tab-${index}`,\n\t\t\"aria-controls\": `vertical-tabpanel-${index}`,\n\t};\n};\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tdisplay: \"flex\",\n\t\theight: \"100%\",\n\t},\n\ttabs: {\n\t\tborderRight: `1px solid ${theme.palette.divider}`,\n\t},\n\tfieldContainer: { display: \"flex\", marginBottom: \"10px\" },\n\tfieldContainerUnderInfo: { display: \"flex\", marginBottom: \"10px\", marginTop: \"10px\" },\n\tfieldLabel: { margin: \"auto 0px\", marginRight: \"10px\", width: \"25%\", fontWeight: \"bold\" },\n\tfieldInput: { \"& .MuiOutlinedInput-input\": { padding: \"10px 14px\" } },\n\ttextInfo: { color: \"rgba(var(--f52,142,142,142),1)\", marginBottom: \"10px\" },\n}));\n\nexport default function VerticalTabs() {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState(0);\n\n\tconst handleChange = (event, newValue) => {\n\t\tsetValue(newValue);\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Tabs\n\t\t\t\torientation=\"vertical\"\n\t\t\t\tvariant=\"scrollable\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t\taria-label=\"Vertical tabs example\"\n\t\t\t\tclassName={classes.tabs}\n\t\t\t>\n\t\t\t\t<Tab label=\"Edit Profile\" {...a11yProps(0)} />\n\t\t\t\t<Tab label=\"Change Password\" {...a11yProps(1)} />\n\t\t\t\t<Tab label=\"Apps and Websites\" {...a11yProps(2)} />\n\t\t\t\t<Tab label=\"Email ans SMS\" {...a11yProps(3)} />\n\t\t\t\t<Tab label=\"Push Notifications\" {...a11yProps(4)} />\n\t\t\t\t<Tab label=\"Privacy and Security\" {...a11yProps(5)} />\n\t\t\t\t<Tab label=\"Email From Insta-Clone\" {...a11yProps(6)} />\n\t\t\t</Tabs>\n\t\t\t<TabPanel value={value} index={0} style={{ width: \"100%\" }}>\n\t\t\t\t<form noValidate autoComplete=\"off\">\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tName\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Typography variant=\"caption\" className={classes.textInfo}>\n\t\t\t\t\t\tHelp people discover your account by using the name you're known by: either your\n\t\t\t\t\t\tfull name, nickname, or business name.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className={classes.fieldContainerUnderInfo}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tUsername\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tWebsite\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tBio\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Typography variant=\"caption\" className={classes.textInfo}>\n\t\t\t\t\t\tPersonal Information\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Divider />\n\t\t\t\t\t<Typography variant=\"caption\" className={classes.textInfo}>\n\t\t\t\t\t\tProvide your personal information, even if the account is used for a business, a\n\t\t\t\t\t\tpet or something else. This won't be a part of your public profile.\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className={classes.fieldContainerUnderInfo}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tPhone Number\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.fieldContainer}>\n\t\t\t\t\t\t<Typography variant=\"caption\" gutterBottom className={classes.fieldLabel}>\n\t\t\t\t\t\t\tGender\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tid=\"outlined-basic\"\n\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\tclassName={classes.fieldInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={1}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={2}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={3}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={4}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={5}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t\t<TabPanel value={value} index={6}>\n\t\t\t\tImplementation Coming Soon\n\t\t\t</TabPanel>\n\t\t</div>\n\t);\n}\n","/home/soumyajit/Personal_Projects/topgram-app/frontend/src/theme/index.jsx",["125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"134","line":1,"column":28,"nodeType":"132","messageId":"133","endLine":1,"endColumn":38},{"ruleId":"130","severity":1,"message":"135","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":16},{"ruleId":"130","severity":1,"message":"136","line":2,"column":18,"nodeType":"132","messageId":"133","endLine":2,"endColumn":23},{"ruleId":"130","severity":1,"message":"137","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":19},{"ruleId":"130","severity":1,"message":"138","line":17,"column":26,"nodeType":"132","messageId":"133","endLine":17,"endColumn":32},{"ruleId":"126","replacedBy":"139"},{"ruleId":"128","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":135,"column":5,"nodeType":"143","endLine":135,"endColumn":7,"suggestions":"144"},{"ruleId":"130","severity":1,"message":"145","line":199,"column":8,"nodeType":"132","messageId":"133","endLine":199,"endColumn":18},{"ruleId":"141","severity":1,"message":"146","line":66,"column":5,"nodeType":"143","endLine":66,"endColumn":7,"suggestions":"147"},{"ruleId":"141","severity":1,"message":"142","line":123,"column":5,"nodeType":"143","endLine":123,"endColumn":7,"suggestions":"148"},{"ruleId":"141","severity":1,"message":"142","line":131,"column":5,"nodeType":"143","endLine":131,"endColumn":7,"suggestions":"149"},{"ruleId":"130","severity":1,"message":"145","line":170,"column":8,"nodeType":"132","messageId":"133","endLine":170,"endColumn":18},{"ruleId":"130","severity":1,"message":"150","line":26,"column":16,"nodeType":"132","messageId":"133","endLine":26,"endColumn":19},{"ruleId":"130","severity":1,"message":"151","line":128,"column":7,"nodeType":"132","messageId":"133","endLine":128,"endColumn":20},{"ruleId":"130","severity":1,"message":"152","line":147,"column":8,"nodeType":"132","messageId":"133","endLine":147,"endColumn":15},{"ruleId":"130","severity":1,"message":"153","line":153,"column":9,"nodeType":"132","messageId":"133","endLine":153,"endColumn":12},{"ruleId":"130","severity":1,"message":"154","line":154,"column":9,"nodeType":"132","messageId":"133","endLine":154,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":164,"column":4,"nodeType":"157","messageId":"158","endLine":164,"endColumn":10},{"ruleId":"130","severity":1,"message":"159","line":11,"column":8,"nodeType":"132","messageId":"133","endLine":11,"endColumn":18},{"ruleId":"155","severity":1,"message":"160","line":30,"column":9,"nodeType":"157","messageId":"158","endLine":30,"endColumn":21},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'AuthContext' is defined but never used.","'motion' is defined but never used.",["161"],["162"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'config'. Either include it or remove the dependency array.","ArrayExpression",["163"],"'deletePost' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'config' and 'userid'. Either include them or remove the dependency array.",["164"],["165"],["166"],"'Box' is defined but never used.","'getModalStyle' is assigned a value but never used.","'classes' is assigned a value but never used.","'top' is assigned a value but never used.","'left' is assigned a value but never used.","no-dupe-keys","Duplicate key 'border'.","ObjectExpression","unexpected","'withStyles' is defined but never used.","Duplicate key 'marginBottom'.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"167","fix":"171"},{"desc":"167","fix":"172"},"Update the dependencies array to be: [config]",{"range":"173","text":"174"},"Update the dependencies array to be: [config, userid]",{"range":"175","text":"176"},{"range":"177","text":"174"},{"range":"178","text":"174"},[3541,3543],"[config]",[2059,2061],"[config, userid]",[3282,3284],[3339,3341]]