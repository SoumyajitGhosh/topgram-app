{"ast":null,"code":"var _jsxFileName = \"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../contexts/auth/Auth.context\";\nimport ProtectedRoute from \"./ProtectedRoute\"; // different routes\n\nimport Home from \"../screens/Home\";\nimport Login from \"../screens/Login\";\nimport Signup from \"../screens/Signup\";\nimport CreatePost from \"../screens/CreatePost.jsx\";\nimport Profile from \"../screens/Profile\";\nimport UserProfile from \"../screens/UserProfile\";\nimport SubscribePost from \"../screens/SubscribePosts\";\nimport Reset from \"../screens/ResetPassword.jsx\";\nimport NewPass from \"../screens/NewPassword.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Routing = () => {\n  _s();\n\n  const {\n    state\n  } = useContext(AuthContext); // check if we are already authenticated\n\n  useEffect(() => {\n    state.isAuthenticated ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 49\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signup\",\n        component: Signup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/reset\",\n        component: Reset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/reset/:token\",\n        component: NewPass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/\",\n        component: SubscribePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/explore\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/create\",\n        component: CreatePost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/profile\",\n        component: Profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        exact: true,\n        path: \"/profile/:userid\",\n        component: UserProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Routing, \"Q3FDzsHUjtkPzHbrCjSOopEpaGg=\");\n\n_c = Routing;\nexport default Routing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routing\");","map":{"version":3,"sources":["/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js"],"names":["React","useEffect","useContext","Route","Switch","BrowserRouter","Redirect","AuthContext","ProtectedRoute","Home","Login","Signup","CreatePost","Profile","UserProfile","SubscribePost","Reset","NewPass","Routing","state","isAuthenticated"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,aAAxB,EAAuCC,QAAvC,QAAuD,kBAAvD;AAEA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAYjB,UAAU,CAACK,WAAD,CAA5B,CADqB,CAGrB;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACfkB,IAAAA,KAAK,CAACC,eAAN,gBAAwB,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAxB,gBAA8C,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAA9C;AACA,GAFQ,CAAT;AAIA,sBACC,QAAC,aAAD;AAAA,2BACC,QAAC,MAAD;AAAA,8BAEC,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAEV;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAA4B,QAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAEK;AAAtC;AAAA;AAAA;AAAA;AAAA,cAJD,eAKC,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,eAAlB;AAAkC,QAAA,SAAS,EAAEC;AAA7C;AAAA;AAAA;AAAA;AAAA,cALD,eAQC,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,IAAI,EAAC,GAA3B;AAA+B,QAAA,SAAS,EAAEF;AAA1C;AAAA;AAAA;AAAA;AAAA,cARD,eASC,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,IAAI,EAAC,UAA3B;AAAsC,QAAA,SAAS,EAAEN;AAAjD;AAAA;AAAA;AAAA;AAAA,cATD,eAUC,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,IAAI,EAAC,SAA3B;AAAqC,QAAA,SAAS,EAAEG;AAAhD;AAAA;AAAA;AAAA;AAAA,cAVD,eAWC,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,IAAI,EAAC,UAA3B;AAAsC,QAAA,SAAS,EAAEC;AAAjD;AAAA;AAAA;AAAA;AAAA,cAXD,eAYC,QAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,IAAI,EAAC,kBAA3B;AAA8C,QAAA,SAAS,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,cAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA,CA7BD;;GAAMI,O;;KAAAA,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\n\nimport AuthContext from \"../contexts/auth/Auth.context\";\nimport ProtectedRoute from \"./ProtectedRoute\";\n\n// different routes\nimport Home from \"../screens/Home\";\nimport Login from \"../screens/Login\";\nimport Signup from \"../screens/Signup\";\nimport CreatePost from \"../screens/CreatePost.jsx\";\nimport Profile from \"../screens/Profile\";\nimport UserProfile from \"../screens/UserProfile\";\nimport SubscribePost from \"../screens/SubscribePosts\";\nimport Reset from \"../screens/ResetPassword.jsx\";\nimport NewPass from \"../screens/NewPassword.jsx\";\n\nconst Routing = () => {\n\tconst { state } = useContext(AuthContext);\n\n\t// check if we are already authenticated\n\tuseEffect(() => {\n\t\tstate.isAuthenticated ? <Redirect to=\"/\" /> : <Redirect to=\"/login\" />;\n\t});\n\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<Switch>\n\t\t\t\t{/* Public routes */}\n\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t<Route exact path=\"/signup\" component={Signup} />\n\t\t\t\t<Route exact path=\"/reset\" component={Reset} />\n\t\t\t\t<Route exact path=\"/reset/:token\" component={NewPass} />\n\n\t\t\t\t{/* Separate the protected routes from public ones */}\n\t\t\t\t<ProtectedRoute exact path=\"/\" component={SubscribePost} />\n\t\t\t\t<ProtectedRoute exact path=\"/explore\" component={Home} />\n\t\t\t\t<ProtectedRoute exact path=\"/create\" component={CreatePost} />\n\t\t\t\t<ProtectedRoute exact path=\"/profile\" component={Profile} />\n\t\t\t\t<ProtectedRoute exact path=\"/profile/:userid\" component={UserProfile} />\n\n\t\t\t\t{/* in case we want to handle the 404 page not found */}\n\t\t\t\t{/* <Route component={NotFound} /> */}\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t);\n};\n\nexport default Routing;\n"]},"metadata":{},"sourceType":"module"}