{"ast":null,"code":"var _jsxFileName = \"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/ResetPassword.jsx\",\n    _s = $RefreshSig$();\n\n/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { RESET_PWD_URL } from \"../service/apiCalls\";\nimport { EmailRegex } from \"../utils/regex\";\nimport Copyright from \"../components/Copyright\"; // Material-UI Components\n\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Alert from '@mui/material/Alert';\nimport { useTheme } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reset = () => {\n  _s();\n\n  const history = useNavigate();\n  const theme = useTheme();\n  const [email, setEmail] = useState(\"\");\n  const [emailCheck, setEmailCheck] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(false);\n  const timerRef = useRef();\n  useEffect(() => () => {\n    clearTimeout(timerRef.current);\n  }, []);\n\n  const handleInputChanges = e => {\n    switch (e.target.name) {\n      case \"email\":\n        setEmail(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handlePostData = () => {\n    if (EmailRegex.test(email)) {\n      // axios.post(RESET_PWD_URL, { email })\n      // \t.then((res) => {\n      // \t\tconst data = res.data;\n      // \t\tconsole.log(data);\n      // \t\tif (data.error) {\n      // \t\t\tsetEmailCheck(false);\n      // \t\t\tsetErrorMsg(true);\n      // \t\t} else {\n      // \t\t\t// make sure to not display another Alert instead\n      // \t\t\tsetEmailCheck(false);\n      // \t\t\tsetErrorMsg(false);\n      // \t\t\t// show the confirmation message\n      // \t\t\tsetSuccessMsg(true);\n      // \t\t\t// set a time before we redirect the user to login page\n      // \t\t\ttimerRef.current = setTimeout(() => {\n      // \t\t\t\thistory(\"/login\");\n      // \t\t\t}, 3000);\n      // \t\t}\n      // \t})\n      // \t.catch((err) => {\n      // \t\tconsole.log(err);\n      // \t});\n      RESET_PWD_URL({\n        email\n      }).then(res => {\n        const data = res.data;\n        console.log(data);\n\n        if (data.error) {\n          setEmailCheck(false);\n          setErrorMsg(true);\n        } else {\n          // make sure to not display another Alert instead\n          setEmailCheck(false);\n          setErrorMsg(false); // show the confirmation message\n\n          setSuccessMsg(true); // set a time before we redirect the user to login page\n\n          timerRef.current = setTimeout(() => {\n            history(\"/login\");\n          }, 3000);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      setErrorMsg(false);\n      setEmailCheck(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      height: \"-webkit-fill-available\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      sx: theme.imageStyle,\n      item: true,\n      sm: 4,\n      md: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 6,\n      sx: theme.container,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        style: {\n          paddingBottom: \"64px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          sx: theme.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            sx: theme.Logo,\n            variant: \"h2\",\n            gutterBottom: true,\n            style: {\n              fontFamily: \"Grand Hotel, cursive \"\n            },\n            children: \"TopGram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }, this), emailCheck ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"outlined\",\n            severity: \"error\",\n            children: \"Invalid Email format \\u2014 check it out!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 8\n          }, this) : null, errorMsg ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"outlined\",\n            severity: \"error\",\n            children: \"No User exists with that email \\u2014 check it Again !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 8\n          }, this) : null, successMsg ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"outlined\",\n            severity: \"success\",\n            children: \"The reset password link has been sent \\u2014 check out your email inbox !\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 8\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n            sx: theme.form,\n            noValidate: true,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              label: \"Email Address\",\n              name: \"email\",\n              autoFocus: true,\n              value: email,\n              onChange: handleInputChanges\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"outlined\",\n              color: \"primary\",\n              sx: theme.submit,\n              disabled: email !== \"\" ? false : true,\n              onClick: handlePostData,\n              children: \"Reset your Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 8,\n          children: /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Reset, \"CgDF0/dF4O2Avm3g3ZhazX1820w=\", false, function () {\n  return [useNavigate, useTheme];\n});\n\n_c = Reset;\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/ResetPassword.jsx"],"names":["React","useState","useRef","useEffect","useNavigate","RESET_PWD_URL","EmailRegex","Copyright","Button","CssBaseline","TextField","Grid","Box","Typography","Container","Alert","useTheme","Reset","history","theme","email","setEmail","emailCheck","setEmailCheck","errorMsg","setErrorMsg","successMsg","setSuccessMsg","timerRef","clearTimeout","current","handleInputChanges","e","target","name","value","handlePostData","test","then","res","data","console","log","error","setTimeout","catch","err","height","imageStyle","container","paddingBottom","paper","Logo","fontFamily","form","submit"],"mappings":"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","sourcesContent":["/**\n *\n * @author Anass Ferrak aka \" TheLordA \" <ferrak.anass@gmail.com>\n * GitHub repo: https://github.com/TheLordA/Instagram-Clone\n *\n */\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { RESET_PWD_URL } from \"../service/apiCalls\";\nimport { EmailRegex } from \"../utils/regex\";\nimport Copyright from \"../components/Copyright\";\n// Material-UI Components\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Alert from '@mui/material/Alert';\nimport { useTheme } from \"@mui/material\";\n\nconst Reset = () => {\n\tconst history = useNavigate();\n\tconst theme = useTheme();\n\tconst [email, setEmail] = useState(\"\");\n\n\tconst [emailCheck, setEmailCheck] = useState(false);\n\tconst [errorMsg, setErrorMsg] = useState(false);\n\tconst [successMsg, setSuccessMsg] = useState(false);\n\n\tconst timerRef = useRef();\n\n\tuseEffect(\n\t\t() => () => {\n\t\t\tclearTimeout(timerRef.current);\n\t\t},\n\t\t[]\n\t);\n\n\tconst handleInputChanges = (e) => {\n\t\tswitch (e.target.name) {\n\t\t\tcase \"email\":\n\t\t\t\tsetEmail(e.target.value);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handlePostData = () => {\n\t\tif (EmailRegex.test(email)) {\n\t\t\t// axios.post(RESET_PWD_URL, { email })\n\t\t\t// \t.then((res) => {\n\t\t\t// \t\tconst data = res.data;\n\t\t\t// \t\tconsole.log(data);\n\t\t\t// \t\tif (data.error) {\n\t\t\t// \t\t\tsetEmailCheck(false);\n\t\t\t// \t\t\tsetErrorMsg(true);\n\t\t\t// \t\t} else {\n\t\t\t// \t\t\t// make sure to not display another Alert instead\n\t\t\t// \t\t\tsetEmailCheck(false);\n\t\t\t// \t\t\tsetErrorMsg(false);\n\t\t\t// \t\t\t// show the confirmation message\n\t\t\t// \t\t\tsetSuccessMsg(true);\n\t\t\t// \t\t\t// set a time before we redirect the user to login page\n\t\t\t// \t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t// \t\t\t\thistory(\"/login\");\n\t\t\t// \t\t\t}, 3000);\n\t\t\t// \t\t}\n\t\t\t// \t})\n\t\t\t// \t.catch((err) => {\n\t\t\t// \t\tconsole.log(err);\n\t\t\t// \t});\n\t\t\tRESET_PWD_URL({ email })\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst data = res.data;\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\tsetEmailCheck(false);\n\t\t\t\t\t\tsetErrorMsg(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// make sure to not display another Alert instead\n\t\t\t\t\t\tsetEmailCheck(false);\n\t\t\t\t\t\tsetErrorMsg(false);\n\t\t\t\t\t\t// show the confirmation message\n\t\t\t\t\t\tsetSuccessMsg(true);\n\t\t\t\t\t\t// set a time before we redirect the user to login page\n\t\t\t\t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t\t\t\t\thistory(\"/login\");\n\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetErrorMsg(false);\n\t\t\tsetEmailCheck(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid container sx={{ height: \"-webkit-fill-available\" }}>\n\t\t\t<Grid sx={theme.imageStyle} item sm={4} md={6} />\n\t\t\t<Grid item xs={12} sm={8} md={6} sx={theme.container}>\n\t\t\t\t<Container component=\"main\" maxWidth=\"xs\" style={{ paddingBottom: \"64px\" }}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<div sx={theme.paper}>\n\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\tsx={theme.Logo}\n\t\t\t\t\t\t\tvariant=\"h2\"\n\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\tstyle={{ fontFamily: \"Grand Hotel, cursive \" }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTopGram\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{emailCheck ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\t\t\tInvalid Email format — check it out!\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{errorMsg ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\t\t\t\tNo User exists with that email — check it Again !\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{successMsg ? (\n\t\t\t\t\t\t\t<Alert variant=\"outlined\" severity=\"success\">\n\t\t\t\t\t\t\t\tThe reset password link has been sent — check out your email inbox !\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<form sx={theme.form} noValidate>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\tsx={theme.submit}\n\t\t\t\t\t\t\t\tdisabled={email !== \"\" ? false : true}\n\t\t\t\t\t\t\t\tonClick={handlePostData}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tReset your Password\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Box mt={8}>\n\t\t\t\t\t\t<Copyright />\n\t\t\t\t\t</Box>\n\t\t\t\t</Container>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Reset;\n"]},"metadata":{},"sourceType":"module"}