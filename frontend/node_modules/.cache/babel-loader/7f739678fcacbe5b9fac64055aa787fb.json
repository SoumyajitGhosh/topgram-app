{"ast":null,"code":"var _jsxFileName = \"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport { Routes, Route, useRoutes, useLocation } from 'react-router-dom';\nimport AuthContext from \"../contexts/auth/Auth.context\"; // import ProtectedRoute from \"./ProtectedRoute\";\n// different routes\n\nimport Home from \"../screens/Home\";\nimport Login from \"../screens/Login\";\nimport Signup from \"../screens/Signup\";\nimport CreatePost from \"../screens/CreatePost.jsx\";\nimport Profile from \"../screens/Profile\";\nimport UserProfile from \"../screens/UserProfile\";\nimport SubscribePost from \"../screens/SubscribePosts\";\nimport Reset from \"../screens/ResetPassword.jsx\";\nimport NewPass from \"../screens/NewPassword.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Routing = () => {\n  _s();\n\n  // const { state } = useContext(AuthContext);\n  // check if we are already authenticated\n  // useEffect(() => {\n  // \tstate.isAuthenticated ? <Redirect to=\"/\" /> : <Redirect to=\"/login\" />;\n  // });\n  const element = useRoutes([{\n    path: \"/signup\",\n    element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/login\",\n    element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/reset\",\n    element: /*#__PURE__*/_jsxDEV(Reset, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/reset/:token\",\n    element: /*#__PURE__*/_jsxDEV(NewPass, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(SubscribePost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/explore\",\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/create\",\n    element: /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/profile\",\n    element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/profile/:userid\",\n    element: /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 14\n    }, this)\n  }]);\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [\"Public routes\", /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: Signup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/reset\",\n      component: Reset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/reset/:token\",\n      component: NewPass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      exact: true,\n      path: \"/\",\n      component: SubscribePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      exact: true,\n      path: \"/explore\",\n      component: Home\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      exact: true,\n      path: \"/create\",\n      component: CreatePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      exact: true,\n      path: \"/profile\",\n      component: Profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n      exact: true,\n      path: \"/profile/:userid\",\n      component: UserProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 4\n  }, this);\n};\n\n_s(Routing, \"etFarxWlkZhRrhKgVVEzJqrjurQ=\", false, function () {\n  return [useRoutes];\n});\n\n_c = Routing;\nexport default Routing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routing\");","map":{"version":3,"sources":["/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js"],"names":["React","useEffect","useContext","Routes","Route","useRoutes","useLocation","AuthContext","Home","Login","Signup","CreatePost","Profile","UserProfile","SubscribePost","Reset","NewPass","Routing","element","path"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Routes, Route, useRoutes, useLocation } from 'react-router-dom';\n\nimport AuthContext from \"../contexts/auth/Auth.context\";\n// import ProtectedRoute from \"./ProtectedRoute\";\n\n// different routes\nimport Home from \"../screens/Home\";\nimport Login from \"../screens/Login\";\nimport Signup from \"../screens/Signup\";\nimport CreatePost from \"../screens/CreatePost.jsx\";\nimport Profile from \"../screens/Profile\";\nimport UserProfile from \"../screens/UserProfile\";\nimport SubscribePost from \"../screens/SubscribePosts\";\nimport Reset from \"../screens/ResetPassword.jsx\";\nimport NewPass from \"../screens/NewPassword.jsx\";\n\nconst Routing = () => {\n\t// const { state } = useContext(AuthContext);\n\n\t// check if we are already authenticated\n\t// useEffect(() => {\n\t// \tstate.isAuthenticated ? <Redirect to=\"/\" /> : <Redirect to=\"/login\" />;\n\t// });\n\n\tconst element = useRoutes([\n\t\t{\n\t\t  path: \"/signup\",\n\t\t  element: <Signup />\n\t\t},\n\t\t{\n\t\t  path: \"/login\",\n\t\t  element: <Login />\n\t\t},\n\t\t{\n\t\t  path: \"/reset\",\n\t\t  element: <Reset />\n\t\t},\n\t\t{\n\t\t  path: \"/reset/:token\",\n\t\t  element: <NewPass />\n\t\t},\n\t\t{\n\t\t  path: \"/\",\n\t\t  element: <SubscribePost />\n\t\t},\n\t\t{\n\t\t  path: \"/explore\",\n\t\t  element: <Home />\n\t\t},\n\t\t{\n\t\t  path: \"/create\",\n\t\t  element: <CreatePost />\n\t\t},\n\t\t{\n\t\t  path: \"/profile\",\n\t\t  element: <Profile />\n\t\t},\n\t\t{\n\t\t  path: \"/profile/:userid\",\n\t\t  element: <UserProfile />\n\t\t}\n\t  ]);\n\n\treturn (\n\t\t\t<Switch>\n\t\t\t\tPublic routes\n\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t<Route exact path=\"/signup\" component={Signup} />\n\t\t\t\t<Route exact path=\"/reset\" component={Reset} />\n\t\t\t\t<Route exact path=\"/reset/:token\" component={NewPass} />\n\n\t\t\t\t{/* Separate the protected routes from public ones */}\n\t\t\t\t<ProtectedRoute exact path=\"/\" component={SubscribePost} />\n\t\t\t\t<ProtectedRoute exact path=\"/explore\" component={Home} />\n\t\t\t\t<ProtectedRoute exact path=\"/create\" component={CreatePost} />\n\t\t\t\t<ProtectedRoute exact path=\"/profile\" component={Profile} />\n\t\t\t\t<ProtectedRoute exact path=\"/profile/:userid\" component={UserProfile} />\n\n\t\t\t\t{/* in case we want to handle the 404 page not found */}\n\t\t\t\t{/* <Route component={NotFound} /> */}\n\t\t\t</Switch>\n\t);\n};\n\nexport default Routing;\n"]},"metadata":{},"sourceType":"module"}