{"ast":null,"code":"var _jsxFileName = \"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SIGNUP_URL } from \"../config/constants\";\nimport Copyright from \"../components/Copyright\";\nimport { EmailRegex } from \"../utils/regex\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Alert from '@mui/material/Alert'; // General Styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  Logo: {\n    fontFamily: \"Grand Hotel, cursive\",\n    marginBottom: \"42px\",\n    width: \"fit-content\",\n    margin: \"0px auto\",\n    marginTop: \"40px\"\n  },\n  paper: {\n    marginTop: \"10px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nconst Signup = () => {\n  _s();\n\n  const history = useHistory();\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [formatValidation, setFormatValidation] = useState(false);\n  const [authValidation, setAuthValidation] = useState(false);\n  const [confirmValidation, setConfirmValidation] = useState(false);\n  const timerRef = useRef();\n  useEffect(() => () => {\n    clearTimeout(timerRef.current);\n  }, []);\n\n  const handleInputChanges = e => {\n    switch (e.target.name) {\n      case \"username\":\n        setName(e.target.value);\n        break;\n\n      case \"email\":\n        setEmail(e.target.value);\n        break;\n\n      case \"password\":\n        setPassword(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handlePostData = () => {\n    // Here we check just if the given email has a correct format\n    if (EmailRegex.test(email)) {\n      axios.post(SIGNUP_URL, {\n        name,\n        password,\n        email\n      }).then(res => {\n        const data = res.data;\n\n        if (data.error) {\n          setFormatValidation(false);\n          setAuthValidation(true);\n        } else {\n          // show the confirmation message\n          setConfirmValidation(true); // set a timeOut before redirecting the user to login page\n\n          timerRef.current = setTimeout(() => {\n            history.push(\"/login\");\n          }, 2800);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      setAuthValidation(false);\n      setFormatValidation(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.Logo,\n      variant: \"h2\",\n      children: \"TopGram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this), formatValidation ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"outlined\",\n      severity: \"error\",\n      children: \"Invalid Email format \\u2014 check it out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this) : null, authValidation ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"outlined\",\n      severity: \"error\",\n      children: \"This Email is already token \\u2014 check it out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this) : null, confirmValidation ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"outlined\",\n      severity: \"success\",\n      children: \"Your account has been created successfully \\u2014 check it out!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              autoComplete: \"UserName\",\n              name: \"username\",\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              label: \"User Name\",\n              autoFocus: true,\n              value: name,\n              onChange: handleInputChanges\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              value: email,\n              onChange: handleInputChanges\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              autoComplete: \"current-password\",\n              value: password,\n              onChange: handleInputChanges\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"outlined\",\n          color: \"primary\",\n          className: classes.submit,\n          onClick: handlePostData,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              style: {\n                textDecoration: \"none\"\n              },\n              children: \"Already have an account? Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: /*#__PURE__*/_jsxDEV(Copyright, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Signup, \"L3+DABRBUk23PzQ5XhbEKERYg/I=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/soumyajit/Personal_Projects/topgram-app/frontend/src/screens/Signup.jsx"],"names":["React","useState","useEffect","useRef","Link","useHistory","axios","SIGNUP_URL","Copyright","EmailRegex","makeStyles","Button","CssBaseline","TextField","Grid","Box","Typography","Container","Alert","useStyles","theme","Logo","fontFamily","marginBottom","width","margin","marginTop","paper","display","flexDirection","alignItems","avatar","spacing","backgroundColor","palette","secondary","main","form","submit","Signup","history","classes","name","setName","password","setPassword","email","setEmail","formatValidation","setFormatValidation","authValidation","setAuthValidation","confirmValidation","setConfirmValidation","timerRef","clearTimeout","current","handleInputChanges","e","target","value","handlePostData","test","post","then","res","data","error","setTimeout","push","catch","err","console","log","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { SIGNUP_URL } from \"../config/constants\";\nimport Copyright from \"../components/Copyright\";\nimport { EmailRegex } from \"../utils/regex\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport Alert from '@mui/material/Alert';\n\n// General Styles\nconst useStyles = makeStyles((theme) => ({\n\tLogo: {\n\t\tfontFamily: \"Grand Hotel, cursive\",\n\t\tmarginBottom: \"42px\",\n\t\twidth: \"fit-content\",\n\t\tmargin: \"0px auto\",\n\t\tmarginTop: \"40px\",\n\t},\n\tpaper: {\n\t\tmarginTop: \"10px\",\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\talignItems: \"center\",\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing(1),\n\t\tbackgroundColor: theme.palette.secondary.main,\n\t},\n\tform: {\n\t\twidth: \"100%\", // Fix IE 11 issue.\n\t\tmarginTop: theme.spacing(3),\n\t},\n\tsubmit: {\n\t\tmargin: theme.spacing(3, 0, 2),\n\t},\n}));\n\nconst Signup = () => {\n\tconst history = useHistory();\n\tconst classes = useStyles();\n\tconst [name, setName] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [formatValidation, setFormatValidation] = useState(false);\n\tconst [authValidation, setAuthValidation] = useState(false);\n\tconst [confirmValidation, setConfirmValidation] = useState(false);\n\n\tconst timerRef = useRef();\n\n\tuseEffect(\n\t\t() => () => {\n\t\t\tclearTimeout(timerRef.current);\n\t\t},\n\t\t[]\n\t);\n\n\tconst handleInputChanges = (e) => {\n\t\tswitch (e.target.name) {\n\t\t\tcase \"username\":\n\t\t\t\tsetName(e.target.value);\n\t\t\t\tbreak;\n\t\t\tcase \"email\":\n\t\t\t\tsetEmail(e.target.value);\n\t\t\t\tbreak;\n\t\t\tcase \"password\":\n\t\t\t\tsetPassword(e.target.value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handlePostData = () => {\n\t\t// Here we check just if the given email has a correct format\n\t\tif (EmailRegex.test(email)) {\n\t\t\taxios.post(SIGNUP_URL, {\n\t\t\t\tname,\n\t\t\t\tpassword,\n\t\t\t\temail,\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst data = res.data;\n\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\tsetFormatValidation(false);\n\t\t\t\t\t\tsetAuthValidation(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// show the confirmation message\n\t\t\t\t\t\tsetConfirmValidation(true);\n\t\t\t\t\t\t// set a timeOut before redirecting the user to login page\n\t\t\t\t\t\ttimerRef.current = setTimeout(() => {\n\t\t\t\t\t\t\thistory.push(\"/login\");\n\t\t\t\t\t\t}, 2800);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetAuthValidation(false);\n\t\t\tsetFormatValidation(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t<CssBaseline />\n\t\t\t<Typography className={classes.Logo} variant=\"h2\">\n\t\t\t\tTopGram\n\t\t\t</Typography>\n\t\t\t{/*  Check the format of the Email */}\n\t\t\t{formatValidation ? (\n\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\tInvalid Email format — check it out!\n\t\t\t\t</Alert>\n\t\t\t) : null}\n\t\t\t{/*  Check the if the Email already Exist */}\n\t\t\t{authValidation ? (\n\t\t\t\t<Alert variant=\"outlined\" severity=\"error\">\n\t\t\t\t\tThis Email is already token — check it out!\n\t\t\t\t</Alert>\n\t\t\t) : null}\n\t\t\t{/* Success notification */}\n\t\t\t{confirmValidation ? (\n\t\t\t\t<Alert variant=\"outlined\" severity=\"success\">\n\t\t\t\t\tYour account has been created successfully — check it out!\n\t\t\t\t</Alert>\n\t\t\t) : null}\n\t\t\t<div className={classes.paper}>\n\t\t\t\t<form className={classes.form} noValidate>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tautoComplete=\"UserName\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"User Name\"\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tonChange={handleInputChanges}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t{/* <Grid item xs={12}>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tcontrol={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n\t\t\t\t\t\t\t\tlabel=\"I want to receive inspiration, marketing promotions and updates via email.\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Grid> */}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tclassName={classes.submit}\n\t\t\t\t\t\tonClick={handlePostData}\n\t\t\t\t\t>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Grid container justifyContent=\"flex-end\">\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n\t\t\t\t\t\t\t\tAlready have an account? Sign in\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<Box mt={5}>\n\t\t\t\t<Copyright />\n\t\t\t</Box>\n\t\t</Container>\n\t);\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}