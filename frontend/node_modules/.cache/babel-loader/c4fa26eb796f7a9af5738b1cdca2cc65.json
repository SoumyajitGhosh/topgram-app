{"ast":null,"code":"var _jsxFileName = \"/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport { Routes, Route, useRoutes, useLocation, useNavigate } from 'react-router-dom'; // import ProtectedRoute from \"./ProtectedRoute\";\n// different routes\n\nimport Home from \"../screens/Home\";\nimport Login from \"../screens/Login\";\nimport Signup from \"../screens/Signup\";\nimport CreatePost from \"../screens/CreatePost.jsx\";\nimport Profile from \"../screens/Profile\";\nimport UserProfile from \"../screens/UserProfile\";\nimport SubscribePost from \"../screens/SubscribePosts\";\nimport Reset from \"../screens/ResetPassword.jsx\";\nimport NewPass from \"../screens/NewPassword.jsx\";\nimport { AnimatePresence, motion } from \"framer-motion/dist/framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Routing = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const jwt = localStorage.getItem('jwt');\n  useEffect(() => {\n    if (!Boolean(localStorage.getItem('jwt'))) {\n      navigate('/login');\n    }\n  }, [localStorage.getItem('jwt')]);\n  const element = useRoutes([{\n    path: \"/signup\",\n    element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/login\",\n    element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/reset\",\n    element: /*#__PURE__*/_jsxDEV(Reset, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/reset/:token\",\n    element: /*#__PURE__*/_jsxDEV(NewPass, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(SubscribePost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/explore\",\n    element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/create\",\n    element: /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/profile\",\n    element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }, this)\n  }, {\n    path: \"/profile/:userid\",\n    element: /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 14\n    }, this)\n  }]);\n  if (!element) return null;\n  return (\n    /*#__PURE__*/\n    // <Switch>\n    // \t{/* Public routes */}\n    // \t<Route exact path=\"/login\" component={Login} />\n    // \t<Route exact path=\"/signup\" component={Signup} />\n    // \t<Route exact path=\"/reset\" component={Reset} />\n    // \t<Route exact path=\"/reset/:token\" component={NewPass} />\n    // \t{/* Separate the protected routes from public ones */}\n    // \t<ProtectedRoute exact path=\"/\" component={SubscribePost} />\n    // \t<ProtectedRoute exact path=\"/explore\" component={Home} />\n    // \t<ProtectedRoute exact path=\"/create\" component={CreatePost} />\n    // \t<ProtectedRoute exact path=\"/profile\" component={Profile} />\n    // \t<ProtectedRoute exact path=\"/profile/:userid\" component={UserProfile} />\n    // \t{/* in case we want to handle the 404 page not found */}\n    // \t{/* <Route component={NotFound} /> */}\n    // </Switch>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: /*#__PURE__*/React.cloneElement(element, {\n          key: location.pathname\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  );\n};\n\n_s(Routing, \"hLo44/gd0pdbCzfYsITpOxKavv0=\", false, function () {\n  return [useNavigate, useLocation, useRoutes];\n});\n\n_c = Routing;\nexport default Routing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routing\");","map":{"version":3,"sources":["/home/soumyajit/Personal_Projects/topgram-app/frontend/src/routes/Routing.js"],"names":["React","useEffect","useContext","Routes","Route","useRoutes","useLocation","useNavigate","Home","Login","Signup","CreatePost","Profile","UserProfile","SubscribePost","Reset","NewPass","AnimatePresence","motion","Routing","navigate","location","jwt","localStorage","getItem","Boolean","element","path","cloneElement","key","pathname"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { Routes, Route, useRoutes, useLocation, useNavigate } from 'react-router-dom';\n\n// import ProtectedRoute from \"./ProtectedRoute\";\n\n// different routes\nimport Home from \"../screens/Home\";\nimport Login from \"../screens/Login\";\nimport Signup from \"../screens/Signup\";\nimport CreatePost from \"../screens/CreatePost.jsx\";\nimport Profile from \"../screens/Profile\";\nimport UserProfile from \"../screens/UserProfile\";\nimport SubscribePost from \"../screens/SubscribePosts\";\nimport Reset from \"../screens/ResetPassword.jsx\";\nimport NewPass from \"../screens/NewPassword.jsx\";\nimport {AnimatePresence, motion} from \"framer-motion/dist/framer-motion\";\n\nconst Routing = () => {\n\tconst navigate = useNavigate();\n\tconst location = useLocation();\n\tconst jwt = localStorage.getItem('jwt');\n\n\tuseEffect(() => {\n\t\tif(!Boolean(localStorage.getItem('jwt'))){\n\t\t\tnavigate('/login');\n\t\t}\n\t}, [localStorage.getItem('jwt')])\n\n\tconst element = useRoutes([\n\t\t{\n\t\t  path: \"/signup\",\n\t\t  element: <Signup />\n\t\t},\n\t\t{\n\t\t  path: \"/login\",\n\t\t  element: <Login />\n\t\t},\n\t\t{\n\t\t  path: \"/reset\",\n\t\t  element: <Reset />\n\t\t},\n\t\t{\n\t\t  path: \"/reset/:token\",\n\t\t  element: <NewPass />\n\t\t},\n\t\t{\n\t\t  path: \"/\",\n\t\t  element: <SubscribePost />\n\t\t},\n\t\t{\n\t\t  path: \"/explore\",\n\t\t  element: <Home />\n\t\t},\n\t\t{\n\t\t  path: \"/create\",\n\t\t  element: <CreatePost />\n\t\t},\n\t\t{\n\t\t  path: \"/profile\",\n\t\t  element: <Profile />\n\t\t},\n\t\t{\n\t\t  path: \"/profile/:userid\",\n\t\t  element: <UserProfile />\n\t\t}\n\t  ]);\n\n\t\tif (!element) return null;\n\n\treturn (\n\t\t\t// <Switch>\n\t\t\t// \t{/* Public routes */}\n\t\t\t// \t<Route exact path=\"/login\" component={Login} />\n\t\t\t// \t<Route exact path=\"/signup\" component={Signup} />\n\t\t\t// \t<Route exact path=\"/reset\" component={Reset} />\n\t\t\t// \t<Route exact path=\"/reset/:token\" component={NewPass} />\n\n\t\t\t// \t{/* Separate the protected routes from public ones */}\n\t\t\t// \t<ProtectedRoute exact path=\"/\" component={SubscribePost} />\n\t\t\t// \t<ProtectedRoute exact path=\"/explore\" component={Home} />\n\t\t\t// \t<ProtectedRoute exact path=\"/create\" component={CreatePost} />\n\t\t\t// \t<ProtectedRoute exact path=\"/profile\" component={Profile} />\n\t\t\t// \t<ProtectedRoute exact path=\"/profile/:userid\" component={UserProfile} />\n\n\t\t\t// \t{/* in case we want to handle the 404 page not found */}\n\t\t\t// \t{/* <Route component={NotFound} /> */}\n\t\t\t// </Switch>\n\t\t\t<>\n\t\t\t\t<AnimatePresence mode=\"wait\">\n\t\t\t    \t{React.cloneElement(element, { key: location.pathname })}\n\t\t\t\t</AnimatePresence>\n\t\t\t</>\n\t);\n};\n\nexport default Routing;\n"]},"metadata":{},"sourceType":"module"}