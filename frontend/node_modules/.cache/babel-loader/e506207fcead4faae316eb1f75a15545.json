{"ast":null,"code":"/*!\n * react-filepond v7.1.2\n * A handy FilePond adapter component for React\n * \n * Copyright (c) 2022 PQINA\n * https://pqina.nl/filepond\n * \n * Licensed under the MIT license.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FilePond = exports.FileStatus = exports.registerPlugin = undefined;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _filepond = require(\"filepond\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Import required methods and styles from the FilePond module, should not need anything else\n// We need to be able to call the registerPlugin method directly so we can add plugins\n\n\nexports.registerPlugin = _filepond.registerPlugin;\nexports.FileStatus = _filepond.FileStatus; // Do this once\n\nvar isSupported = (0, _filepond.supported)(); // filtered methods\n\nvar filteredMethods = [\"setOptions\", \"on\", \"off\", \"onOnce\", \"appendTo\", \"insertAfter\", \"insertBefore\", \"isAttachedTo\", \"replaceElement\", \"restoreElement\", \"destroy\"]; // The React <FilePond/> wrapper\n\nvar FilePond = exports.FilePond = function (_React$Component) {\n  _inherits(FilePond, _React$Component);\n\n  function FilePond(props) {\n    _classCallCheck(this, FilePond);\n\n    var _this = _possibleConstructorReturn(this, (FilePond.__proto__ || Object.getPrototypeOf(FilePond)).call(this, props));\n\n    _this.allowFilesSync = true;\n    return _this;\n  } // Will setup FilePond instance when mounted\n\n\n  _createClass(FilePond, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this; // clone the input so we can restore it in unmount\n\n\n      this._input = this._element.querySelector('input[type=\"file\"]');\n      this._inputClone = this._input.cloneNode(); // exit here if not supported\n\n      if (!isSupported) return;\n      var options = Object.assign({}, this.props); // if onupdate files is defined, make sure setFiles does not cause race condition\n\n      if (options.onupdatefiles) {\n        var cb = options.onupdatefiles;\n\n        options.onupdatefiles = function (items) {\n          _this2.allowFilesSync = false;\n          cb(items);\n        };\n      } // Create our pond\n\n\n      this._pond = (0, _filepond.create)(this._input, options); // Reference pond methods to FilePond component instance\n\n      Object.keys(this._pond).filter(function (key) {\n        return !filteredMethods.includes(key);\n      }).forEach(function (key) {\n        _this2[key] = _this2._pond[key];\n      });\n    } // Will clean up FilePond instance when unmounted\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // exit when no pond defined\n      if (!this._pond) return; // This fixed <Strict> errors\n      // FilePond destroy is async so we have to move FilePond to a bin element so it can no longer affect current element tree as React unmount / mount is sync\n\n      var bin = document.createElement(\"div\");\n      bin.append(this._pond.element);\n      bin.id = \"foo\"; // now we call destroy so FilePond can start it's destroy logic\n\n      this._pond.destroy();\n\n      this._pond = undefined; // we re-add the original file input element so everything is as it was before\n\n      this._element.append(this._inputClone);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      if (!this.allowFilesSync) {\n        this.allowFilesSync = true;\n        return false;\n      }\n\n      return true;\n    } // Something changed\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // exit when no pond defined\n      if (!this._pond) return;\n      var options = Object.assign({}, this.props); // this is only set onces, on didmount\n\n      delete options.onupdatefiles; // update pond options based on new props\n\n      this._pond.setOptions(options);\n    } // Renders basic element hook for FilePond to attach to\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          id = _props.id,\n          name = _props.name,\n          className = _props.className,\n          allowMultiple = _props.allowMultiple,\n          required = _props.required,\n          captureMethod = _props.captureMethod,\n          acceptedFileTypes = _props.acceptedFileTypes;\n      return (0, _react.createElement)(\"div\", {\n        className: \"filepond--wrapper\",\n        ref: function ref(element) {\n          return _this3._element = element;\n        }\n      }, (0, _react.createElement)(\"input\", {\n        type: \"file\",\n        name: name,\n        id: id,\n        accept: acceptedFileTypes,\n        multiple: allowMultiple,\n        required: required,\n        className: className,\n        capture: captureMethod\n      }));\n    }\n  }]);\n\n  return FilePond;\n}(_react2.default.Component);","map":{"version":3,"sources":["/home/soumyajit/Personal_Projects/topgram-app/frontend/node_modules/react-filepond/dist/react-filepond.js"],"names":["Object","defineProperty","exports","value","FilePond","FileStatus","registerPlugin","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","require","_react2","_interopRequireDefault","_filepond","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","isSupported","supported","filteredMethods","_React$Component","_this","getPrototypeOf","allowFilesSync","componentDidMount","_this2","_input","_element","querySelector","_inputClone","cloneNode","options","assign","onupdatefiles","cb","items","_pond","keys","filter","includes","forEach","componentWillUnmount","bin","document","createElement","append","element","id","destroy","shouldComponentUpdate","componentDidUpdate","setOptions","render","_this3","_props","name","className","allowMultiple","required","captureMethod","acceptedFileTypes","ref","type","accept","multiple","capture","Component"],"mappings":"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","sourcesContent":["/*!\n * react-filepond v7.1.2\n * A handy FilePond adapter component for React\n * \n * Copyright (c) 2022 PQINA\n * https://pqina.nl/filepond\n * \n * Licensed under the MIT license.\n */\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FilePond = exports.FileStatus = exports.registerPlugin = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _filepond = require(\"filepond\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n// Import required methods and styles from the FilePond module, should not need anything else\n\n\n// We need to be able to call the registerPlugin method directly so we can add plugins\nexports.registerPlugin = _filepond.registerPlugin;\nexports.FileStatus = _filepond.FileStatus;\n\n// Do this once\n\nvar isSupported = (0, _filepond.supported)();\n\n// filtered methods\nvar filteredMethods = [\"setOptions\", \"on\", \"off\", \"onOnce\", \"appendTo\", \"insertAfter\", \"insertBefore\", \"isAttachedTo\", \"replaceElement\", \"restoreElement\", \"destroy\"];\n\n// The React <FilePond/> wrapper\n\nvar FilePond = exports.FilePond = function (_React$Component) {\n  _inherits(FilePond, _React$Component);\n\n  function FilePond(props) {\n    _classCallCheck(this, FilePond);\n\n    var _this = _possibleConstructorReturn(this, (FilePond.__proto__ || Object.getPrototypeOf(FilePond)).call(this, props));\n\n    _this.allowFilesSync = true;\n    return _this;\n  }\n\n  // Will setup FilePond instance when mounted\n\n\n  _createClass(FilePond, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // clone the input so we can restore it in unmount\n      this._input = this._element.querySelector('input[type=\"file\"]');\n      this._inputClone = this._input.cloneNode();\n\n      // exit here if not supported\n      if (!isSupported) return;\n\n      var options = Object.assign({}, this.props);\n\n      // if onupdate files is defined, make sure setFiles does not cause race condition\n      if (options.onupdatefiles) {\n        var cb = options.onupdatefiles;\n        options.onupdatefiles = function (items) {\n          _this2.allowFilesSync = false;\n          cb(items);\n        };\n      }\n\n      // Create our pond\n      this._pond = (0, _filepond.create)(this._input, options);\n\n      // Reference pond methods to FilePond component instance\n      Object.keys(this._pond).filter(function (key) {\n        return !filteredMethods.includes(key);\n      }).forEach(function (key) {\n        _this2[key] = _this2._pond[key];\n      });\n    }\n\n    // Will clean up FilePond instance when unmounted\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // exit when no pond defined\n      if (!this._pond) return;\n\n      // This fixed <Strict> errors\n\n      // FilePond destroy is async so we have to move FilePond to a bin element so it can no longer affect current element tree as React unmount / mount is sync\n      var bin = document.createElement(\"div\");\n      bin.append(this._pond.element);\n      bin.id = \"foo\";\n\n      // now we call destroy so FilePond can start it's destroy logic\n      this._pond.destroy();\n      this._pond = undefined;\n\n      // we re-add the original file input element so everything is as it was before\n      this._element.append(this._inputClone);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      if (!this.allowFilesSync) {\n        this.allowFilesSync = true;\n        return false;\n      }\n      return true;\n    }\n\n    // Something changed\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // exit when no pond defined\n      if (!this._pond) return;\n\n      var options = Object.assign({}, this.props);\n\n      // this is only set onces, on didmount\n      delete options.onupdatefiles;\n\n      // update pond options based on new props\n      this._pond.setOptions(options);\n    }\n\n    // Renders basic element hook for FilePond to attach to\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _props = this.props,\n          id = _props.id,\n          name = _props.name,\n          className = _props.className,\n          allowMultiple = _props.allowMultiple,\n          required = _props.required,\n          captureMethod = _props.captureMethod,\n          acceptedFileTypes = _props.acceptedFileTypes;\n\n      return (0, _react.createElement)(\"div\", {\n        className: \"filepond--wrapper\",\n        ref: function ref(element) {\n          return _this3._element = element;\n        }\n      }, (0, _react.createElement)(\"input\", {\n        type: \"file\",\n        name: name,\n        id: id,\n        accept: acceptedFileTypes,\n        multiple: allowMultiple,\n        required: required,\n        className: className,\n        capture: captureMethod\n      }));\n    }\n  }]);\n\n  return FilePond;\n}(_react2.default.Component);\n\n\n"]},"metadata":{},"sourceType":"script"}