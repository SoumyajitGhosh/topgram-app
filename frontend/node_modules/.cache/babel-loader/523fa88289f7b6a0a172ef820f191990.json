{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchMyBookmarks } from \"../config/backendAPI\";\nexport const fetchMyBookmarksAction = createAsyncThunk('fetchMyBookmarksInfo', async () => {\n  const response = await fetchMyBookmarks();\n  return response.json();\n});\nconst fetchMyBookmarksSlice = createSlice({\n  name: 'fetchMyBookmarksInfo',\n  initialState: {\n    isLoading: false,\n    data: null,\n    isError: false\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchMyBookmarksAction.pending, (state, action) => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchMyBookmarksAction.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.data = action.payload;\n    });\n    builder.addCase(fetchMyBookmarksAction.rejected, (state, action) => {\n      state.isError = true;\n    });\n  }\n});\nexport default fetchMyBookmarksSlice.reducer;","map":{"version":3,"sources":["/home/soumyajit/Personal_Projects/topgram-app/frontend/src/redux/fetchMyBookmarks.js"],"names":["createSlice","createAsyncThunk","fetchMyBookmarks","fetchMyBookmarksAction","response","json","fetchMyBookmarksSlice","name","initialState","isLoading","data","isError","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,OAAO,MAAMC,sBAAsB,GAAGF,gBAAgB,CAAC,sBAAD,EAAyB,YAAW;AACtF,QAAMG,QAAQ,GAAG,MAAMF,gBAAgB,EAAvC;AACA,SAAOE,QAAQ,CAACC,IAAT,EAAP;AACH,CAHqD,CAA/C;AAKP,MAAMC,qBAAqB,GAAGN,WAAW,CAAC;AACtCO,EAAAA,IAAI,EAAE,sBADgC;AAEtCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,SAAS,EAAE,KADD;AAEVC,IAAAA,IAAI,EAAE,IAFI;AAGVC,IAAAA,OAAO,EAAE;AAHC,GAFwB;AAOtCC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AACxBA,IAAAA,OAAO,CAACC,OAAR,CAAgBX,sBAAsB,CAACY,OAAvC,EAAgD,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/DD,MAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACH,KAFD;AAGAI,IAAAA,OAAO,CAACC,OAAR,CAAgBX,sBAAsB,CAACe,SAAvC,EAAkD,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACjED,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACN,IAAN,GAAaO,MAAM,CAACE,OAApB;AACH,KAHD;AAIAN,IAAAA,OAAO,CAACC,OAAR,CAAgBX,sBAAsB,CAACiB,QAAvC,EAAiD,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAChED,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACH,KAFD;AAGH;AAlBqC,CAAD,CAAzC;AAqBA,eAAeL,qBAAqB,CAACe,OAArC","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchMyBookmarks } from \"../config/backendAPI\";\n\nexport const fetchMyBookmarksAction = createAsyncThunk('fetchMyBookmarksInfo', async() => {\n    const response = await fetchMyBookmarks();\n    return response.json();\n})\n\nconst fetchMyBookmarksSlice = createSlice({\n    name: 'fetchMyBookmarksInfo',\n    initialState: {\n        isLoading: false,\n        data: null,\n        isError: false\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchMyBookmarksAction.pending, (state, action) => {\n            state.isLoading = true;\n        })\n        builder.addCase(fetchMyBookmarksAction.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.data = action.payload;\n        })\n        builder.addCase(fetchMyBookmarksAction.rejected, (state, action) => {\n            state.isError = true;\n        })\n    }\n})\n\nexport default fetchMyBookmarksSlice.reducer;"]},"metadata":{},"sourceType":"module"}